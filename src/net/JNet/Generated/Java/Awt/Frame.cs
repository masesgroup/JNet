/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt
{
    #region Frame
    public partial class Frame
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#%3Cinit%3E(java.awt.GraphicsConfiguration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.GraphicsConfiguration"/></param>
        public Frame(Java.Awt.GraphicsConfiguration arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#%3Cinit%3E(java.lang.String,java.awt.GraphicsConfiguration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Awt.GraphicsConfiguration"/></param>
        public Frame(string arg0, Java.Awt.GraphicsConfiguration arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public Frame(string arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Java.Awt.Frame"/> to <see cref="Java.Awt.MenuContainer"/>
        /// </summary>
        public static implicit operator Java.Awt.MenuContainer(Java.Awt.Frame t) => t.Cast<Java.Awt.MenuContainer>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#ICONIFIED"/>
        /// </summary>
        public static int ICONIFIED { get { return SGetField<int>(LocalBridgeClazz, "ICONIFIED"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#MAXIMIZED_BOTH"/>
        /// </summary>
        public static int MAXIMIZED_BOTH { get { return SGetField<int>(LocalBridgeClazz, "MAXIMIZED_BOTH"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#MAXIMIZED_HORIZ"/>
        /// </summary>
        public static int MAXIMIZED_HORIZ { get { return SGetField<int>(LocalBridgeClazz, "MAXIMIZED_HORIZ"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#MAXIMIZED_VERT"/>
        /// </summary>
        public static int MAXIMIZED_VERT { get { return SGetField<int>(LocalBridgeClazz, "MAXIMIZED_VERT"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#NORMAL"/>
        /// </summary>
        public static int NORMAL { get { return SGetField<int>(LocalBridgeClazz, "NORMAL"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getFrames()"/> 
        /// </summary>
        public static Java.Awt.Frame[] Frames
        {
            get { return SExecuteArray<Java.Awt.Frame>(LocalBridgeClazz, "getFrames"); }
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getExtendedState()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setExtendedState(int)"/>
        /// </summary>
        public int ExtendedState
        {
            get { return IExecute<int>("getExtendedState"); } set { IExecute("setExtendedState", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getIconImage()"/> 
        /// </summary>
        public Java.Awt.Image IconImage
        {
            get { return IExecute<Java.Awt.Image>("getIconImage"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getMaximizedBounds()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setMaximizedBounds(java.awt.Rectangle)"/>
        /// </summary>
        public Java.Awt.Rectangle MaximizedBounds
        {
            get { return IExecute<Java.Awt.Rectangle>("getMaximizedBounds"); } set { IExecute("setMaximizedBounds", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getMenuBar()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setMenuBar(java.awt.MenuBar)"/>
        /// </summary>
        public Java.Awt.MenuBar MenuBar
        {
            get { return IExecute<Java.Awt.MenuBar>("getMenuBar"); } set { IExecute("setMenuBar", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getState()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setState(int)"/>
        /// </summary>
        public int State
        {
            get { return IExecute<int>("getState"); } set { IExecute("setState", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#getTitle()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setTitle(java.lang.String)"/>
        /// </summary>
        public string Title
        {
            get { return IExecute<string>("getTitle"); } set { IExecute("setTitle", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#isResizable()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsResizable()
        {
            return IExecute<bool>("isResizable");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#isUndecorated()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsUndecorated()
        {
            return IExecute<bool>("isUndecorated");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setResizable(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetResizable(bool arg0)
        {
            IExecute("setResizable", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Frame.html#setUndecorated(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetUndecorated(bool arg0)
        {
            IExecute("setUndecorated", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}