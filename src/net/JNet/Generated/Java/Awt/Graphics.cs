/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt
{
    #region Graphics
    public partial class Graphics
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getClip() https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#setClip(java.awt.Shape)
        /// </summary>
        public Java.Awt.Shape Clip
        {
            get { return IExecute<Java.Awt.Shape>("getClip"); } set { IExecute("setClip", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getClipBounds() 
        /// </summary>
        public Java.Awt.Rectangle ClipBounds
        {
            get { return IExecute<Java.Awt.Rectangle>("getClipBounds"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getColor() https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#setColor(java.awt.Color)
        /// </summary>
        public Java.Awt.Color Color
        {
            get { return IExecute<Java.Awt.Color>("getColor"); } set { IExecute("setColor", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getFont() https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#setFont(java.awt.Font)
        /// </summary>
        public Java.Awt.Font Font
        {
            get { return IExecute<Java.Awt.Font>("getFont"); } set { IExecute("setFont", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getFontMetrics() 
        /// </summary>
        public Java.Awt.FontMetrics FontMetrics
        {
            get { return IExecute<Java.Awt.FontMetrics>("getFontMetrics"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)
        /// </summary>
        public bool DrawImage(Java.Awt.Image arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, Java.Awt.Color arg9, Java.Awt.ImageNs.ImageObserver arg10)
        {
            return IExecute<bool>("drawImage", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)
        /// </summary>
        public bool DrawImage(Java.Awt.Image arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int arg8, Java.Awt.ImageNs.ImageObserver arg9)
        {
            return IExecute<bool>("drawImage", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)
        /// </summary>
        public bool DrawImage(Java.Awt.Image arg0, int arg1, int arg2, int arg3, int arg4, Java.Awt.Color arg5, Java.Awt.ImageNs.ImageObserver arg6)
        {
            return IExecute<bool>("drawImage", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)
        /// </summary>
        public bool DrawImage(Java.Awt.Image arg0, int arg1, int arg2, int arg3, int arg4, Java.Awt.ImageNs.ImageObserver arg5)
        {
            return IExecute<bool>("drawImage", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)
        /// </summary>
        public bool DrawImage(Java.Awt.Image arg0, int arg1, int arg2, Java.Awt.Color arg3, Java.Awt.ImageNs.ImageObserver arg4)
        {
            return IExecute<bool>("drawImage", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
        /// </summary>
        public bool DrawImage(Java.Awt.Image arg0, int arg1, int arg2, Java.Awt.ImageNs.ImageObserver arg3)
        {
            return IExecute<bool>("drawImage", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getFontMetrics(java.awt.Font)
        /// </summary>
        public Java.Awt.FontMetrics GetFontMetrics(Java.Awt.Font arg0)
        {
            return IExecute<Java.Awt.FontMetrics>("getFontMetrics", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#create()
        /// </summary>
        public Java.Awt.Graphics Create()
        {
            return IExecute<Java.Awt.Graphics>("create");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#clearRect(int,int,int,int)
        /// </summary>
        public void ClearRect(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("clearRect", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#clipRect(int,int,int,int)
        /// </summary>
        public void ClipRect(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("clipRect", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#copyArea(int,int,int,int,int,int)
        /// </summary>
        public void CopyArea(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
        {
            IExecute("copyArea", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#dispose()
        /// </summary>
        public void Dispose()
        {
            IExecute("dispose");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawArc(int,int,int,int,int,int)
        /// </summary>
        public void DrawArc(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
        {
            IExecute("drawArc", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawLine(int,int,int,int)
        /// </summary>
        public void DrawLine(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("drawLine", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawOval(int,int,int,int)
        /// </summary>
        public void DrawOval(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("drawOval", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawPolygon(int[],int[],int)
        /// </summary>
        public void DrawPolygon(int[] arg0, int[] arg1, int arg2)
        {
            IExecute("drawPolygon", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawPolyline(int[],int[],int)
        /// </summary>
        public void DrawPolyline(int[] arg0, int[] arg1, int arg2)
        {
            IExecute("drawPolyline", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawRoundRect(int,int,int,int,int,int)
        /// </summary>
        public void DrawRoundRect(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
        {
            IExecute("drawRoundRect", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawString(java.lang.String,int,int)
        /// </summary>
        public void DrawString(string arg0, int arg1, int arg2)
        {
            IExecute("drawString", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawString(java.text.AttributedCharacterIterator,int,int)
        /// </summary>
        public void DrawString(Java.Text.AttributedCharacterIterator arg0, int arg1, int arg2)
        {
            IExecute("drawString", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fillArc(int,int,int,int,int,int)
        /// </summary>
        public void FillArc(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
        {
            IExecute("fillArc", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fillOval(int,int,int,int)
        /// </summary>
        public void FillOval(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("fillOval", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fillPolygon(int[],int[],int)
        /// </summary>
        public void FillPolygon(int[] arg0, int[] arg1, int arg2)
        {
            IExecute("fillPolygon", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fillRect(int,int,int,int)
        /// </summary>
        public void FillRect(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("fillRect", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fillRoundRect(int,int,int,int,int,int)
        /// </summary>
        public void FillRoundRect(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)
        {
            IExecute("fillRoundRect", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#setClip(int,int,int,int)
        /// </summary>
        public void SetClip(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("setClip", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#setPaintMode()
        /// </summary>
        public void SetPaintMode()
        {
            IExecute("setPaintMode");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#setXORMode(java.awt.Color)
        /// </summary>
        public void SetXORMode(Java.Awt.Color arg0)
        {
            IExecute("setXORMode", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#translate(int,int)
        /// </summary>
        public void Translate(int arg0, int arg1)
        {
            IExecute("translate", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#hitClip(int,int,int,int)
        /// </summary>
        public bool HitClip(int arg0, int arg1, int arg2, int arg3)
        {
            return IExecute<bool>("hitClip", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#create(int,int,int,int)
        /// </summary>
        public Java.Awt.Graphics Create(int arg0, int arg1, int arg2, int arg3)
        {
            return IExecute<Java.Awt.Graphics>("create", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#getClipBounds(java.awt.Rectangle)
        /// </summary>
        public Java.Awt.Rectangle GetClipBounds(Java.Awt.Rectangle arg0)
        {
            return IExecute<Java.Awt.Rectangle>("getClipBounds", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#draw3DRect(int,int,int,int,boolean)
        /// </summary>
        public void Draw3DRect(int arg0, int arg1, int arg2, int arg3, bool arg4)
        {
            IExecute("draw3DRect", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawBytes(byte[],int,int,int,int)
        /// </summary>
        public void DrawBytes(byte[] arg0, int arg1, int arg2, int arg3, int arg4)
        {
            IExecute("drawBytes", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawChars(char[],int,int,int,int)
        /// </summary>
        public void DrawChars(char[] arg0, int arg1, int arg2, int arg3, int arg4)
        {
            IExecute("drawChars", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawPolygon(java.awt.Polygon)
        /// </summary>
        public void DrawPolygon(Java.Awt.Polygon arg0)
        {
            IExecute("drawPolygon", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#drawRect(int,int,int,int)
        /// </summary>
        public void DrawRect(int arg0, int arg1, int arg2, int arg3)
        {
            IExecute("drawRect", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fill3DRect(int,int,int,int,boolean)
        /// </summary>
        public void Fill3DRect(int arg0, int arg1, int arg2, int arg3, bool arg4)
        {
            IExecute("fill3DRect", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Graphics.html#fillPolygon(java.awt.Polygon)
        /// </summary>
        public void FillPolygon(Java.Awt.Polygon arg0)
        {
            IExecute("fillPolygon", arg0);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}