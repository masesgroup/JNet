/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.2.5.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt.EventNs
{
    #region KeyEvent
    public partial class KeyEvent
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#%3Cinit%3E(java.awt.Component,int,long,int,int,char,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="char"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        public KeyEvent(Java.Awt.Component arg0, int arg1, long arg2, int arg3, int arg4, char arg5, int arg6)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#%3Cinit%3E(java.awt.Component,int,long,int,int,char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="char"/></param>
        public KeyEvent(Java.Awt.Component arg0, int arg1, long arg2, int arg3, int arg4, char arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#CHAR_UNDEFINED"/>
        /// </summary>
        public static char CHAR_UNDEFINED { get { if (!_CHAR_UNDEFINEDReady) { _CHAR_UNDEFINEDContent = SGetField<char>(LocalBridgeClazz, "CHAR_UNDEFINED"); _CHAR_UNDEFINEDReady = true; } return _CHAR_UNDEFINEDContent; } }
        private static char _CHAR_UNDEFINEDContent = default;
        private static bool _CHAR_UNDEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_FIRST"/>
        /// </summary>
        public static int KEY_FIRST { get { if (!_KEY_FIRSTReady) { _KEY_FIRSTContent = SGetField<int>(LocalBridgeClazz, "KEY_FIRST"); _KEY_FIRSTReady = true; } return _KEY_FIRSTContent; } }
        private static int _KEY_FIRSTContent = default;
        private static bool _KEY_FIRSTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_LAST"/>
        /// </summary>
        public static int KEY_LAST { get { if (!_KEY_LASTReady) { _KEY_LASTContent = SGetField<int>(LocalBridgeClazz, "KEY_LAST"); _KEY_LASTReady = true; } return _KEY_LASTContent; } }
        private static int _KEY_LASTContent = default;
        private static bool _KEY_LASTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_LOCATION_LEFT"/>
        /// </summary>
        public static int KEY_LOCATION_LEFT { get { if (!_KEY_LOCATION_LEFTReady) { _KEY_LOCATION_LEFTContent = SGetField<int>(LocalBridgeClazz, "KEY_LOCATION_LEFT"); _KEY_LOCATION_LEFTReady = true; } return _KEY_LOCATION_LEFTContent; } }
        private static int _KEY_LOCATION_LEFTContent = default;
        private static bool _KEY_LOCATION_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_LOCATION_NUMPAD"/>
        /// </summary>
        public static int KEY_LOCATION_NUMPAD { get { if (!_KEY_LOCATION_NUMPADReady) { _KEY_LOCATION_NUMPADContent = SGetField<int>(LocalBridgeClazz, "KEY_LOCATION_NUMPAD"); _KEY_LOCATION_NUMPADReady = true; } return _KEY_LOCATION_NUMPADContent; } }
        private static int _KEY_LOCATION_NUMPADContent = default;
        private static bool _KEY_LOCATION_NUMPADReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_LOCATION_RIGHT"/>
        /// </summary>
        public static int KEY_LOCATION_RIGHT { get { if (!_KEY_LOCATION_RIGHTReady) { _KEY_LOCATION_RIGHTContent = SGetField<int>(LocalBridgeClazz, "KEY_LOCATION_RIGHT"); _KEY_LOCATION_RIGHTReady = true; } return _KEY_LOCATION_RIGHTContent; } }
        private static int _KEY_LOCATION_RIGHTContent = default;
        private static bool _KEY_LOCATION_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_LOCATION_STANDARD"/>
        /// </summary>
        public static int KEY_LOCATION_STANDARD { get { if (!_KEY_LOCATION_STANDARDReady) { _KEY_LOCATION_STANDARDContent = SGetField<int>(LocalBridgeClazz, "KEY_LOCATION_STANDARD"); _KEY_LOCATION_STANDARDReady = true; } return _KEY_LOCATION_STANDARDContent; } }
        private static int _KEY_LOCATION_STANDARDContent = default;
        private static bool _KEY_LOCATION_STANDARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_LOCATION_UNKNOWN"/>
        /// </summary>
        public static int KEY_LOCATION_UNKNOWN { get { if (!_KEY_LOCATION_UNKNOWNReady) { _KEY_LOCATION_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "KEY_LOCATION_UNKNOWN"); _KEY_LOCATION_UNKNOWNReady = true; } return _KEY_LOCATION_UNKNOWNContent; } }
        private static int _KEY_LOCATION_UNKNOWNContent = default;
        private static bool _KEY_LOCATION_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_PRESSED"/>
        /// </summary>
        public static int KEY_PRESSED { get { if (!_KEY_PRESSEDReady) { _KEY_PRESSEDContent = SGetField<int>(LocalBridgeClazz, "KEY_PRESSED"); _KEY_PRESSEDReady = true; } return _KEY_PRESSEDContent; } }
        private static int _KEY_PRESSEDContent = default;
        private static bool _KEY_PRESSEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_RELEASED"/>
        /// </summary>
        public static int KEY_RELEASED { get { if (!_KEY_RELEASEDReady) { _KEY_RELEASEDContent = SGetField<int>(LocalBridgeClazz, "KEY_RELEASED"); _KEY_RELEASEDReady = true; } return _KEY_RELEASEDContent; } }
        private static int _KEY_RELEASEDContent = default;
        private static bool _KEY_RELEASEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#KEY_TYPED"/>
        /// </summary>
        public static int KEY_TYPED { get { if (!_KEY_TYPEDReady) { _KEY_TYPEDContent = SGetField<int>(LocalBridgeClazz, "KEY_TYPED"); _KEY_TYPEDReady = true; } return _KEY_TYPEDContent; } }
        private static int _KEY_TYPEDContent = default;
        private static bool _KEY_TYPEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_0"/>
        /// </summary>
        public static int VK_0 { get { if (!_VK_0Ready) { _VK_0Content = SGetField<int>(LocalBridgeClazz, "VK_0"); _VK_0Ready = true; } return _VK_0Content; } }
        private static int _VK_0Content = default;
        private static bool _VK_0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_1"/>
        /// </summary>
        public static int VK_1 { get { if (!_VK_1Ready) { _VK_1Content = SGetField<int>(LocalBridgeClazz, "VK_1"); _VK_1Ready = true; } return _VK_1Content; } }
        private static int _VK_1Content = default;
        private static bool _VK_1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_2"/>
        /// </summary>
        public static int VK_2 { get { if (!_VK_2Ready) { _VK_2Content = SGetField<int>(LocalBridgeClazz, "VK_2"); _VK_2Ready = true; } return _VK_2Content; } }
        private static int _VK_2Content = default;
        private static bool _VK_2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_3"/>
        /// </summary>
        public static int VK_3 { get { if (!_VK_3Ready) { _VK_3Content = SGetField<int>(LocalBridgeClazz, "VK_3"); _VK_3Ready = true; } return _VK_3Content; } }
        private static int _VK_3Content = default;
        private static bool _VK_3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_4"/>
        /// </summary>
        public static int VK_4 { get { if (!_VK_4Ready) { _VK_4Content = SGetField<int>(LocalBridgeClazz, "VK_4"); _VK_4Ready = true; } return _VK_4Content; } }
        private static int _VK_4Content = default;
        private static bool _VK_4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_5"/>
        /// </summary>
        public static int VK_5 { get { if (!_VK_5Ready) { _VK_5Content = SGetField<int>(LocalBridgeClazz, "VK_5"); _VK_5Ready = true; } return _VK_5Content; } }
        private static int _VK_5Content = default;
        private static bool _VK_5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_6"/>
        /// </summary>
        public static int VK_6 { get { if (!_VK_6Ready) { _VK_6Content = SGetField<int>(LocalBridgeClazz, "VK_6"); _VK_6Ready = true; } return _VK_6Content; } }
        private static int _VK_6Content = default;
        private static bool _VK_6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_7"/>
        /// </summary>
        public static int VK_7 { get { if (!_VK_7Ready) { _VK_7Content = SGetField<int>(LocalBridgeClazz, "VK_7"); _VK_7Ready = true; } return _VK_7Content; } }
        private static int _VK_7Content = default;
        private static bool _VK_7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_8"/>
        /// </summary>
        public static int VK_8 { get { if (!_VK_8Ready) { _VK_8Content = SGetField<int>(LocalBridgeClazz, "VK_8"); _VK_8Ready = true; } return _VK_8Content; } }
        private static int _VK_8Content = default;
        private static bool _VK_8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_9"/>
        /// </summary>
        public static int VK_9 { get { if (!_VK_9Ready) { _VK_9Content = SGetField<int>(LocalBridgeClazz, "VK_9"); _VK_9Ready = true; } return _VK_9Content; } }
        private static int _VK_9Content = default;
        private static bool _VK_9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_A"/>
        /// </summary>
        public static int VK_A { get { if (!_VK_AReady) { _VK_AContent = SGetField<int>(LocalBridgeClazz, "VK_A"); _VK_AReady = true; } return _VK_AContent; } }
        private static int _VK_AContent = default;
        private static bool _VK_AReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ACCEPT"/>
        /// </summary>
        public static int VK_ACCEPT { get { if (!_VK_ACCEPTReady) { _VK_ACCEPTContent = SGetField<int>(LocalBridgeClazz, "VK_ACCEPT"); _VK_ACCEPTReady = true; } return _VK_ACCEPTContent; } }
        private static int _VK_ACCEPTContent = default;
        private static bool _VK_ACCEPTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ADD"/>
        /// </summary>
        public static int VK_ADD { get { if (!_VK_ADDReady) { _VK_ADDContent = SGetField<int>(LocalBridgeClazz, "VK_ADD"); _VK_ADDReady = true; } return _VK_ADDContent; } }
        private static int _VK_ADDContent = default;
        private static bool _VK_ADDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_AGAIN"/>
        /// </summary>
        public static int VK_AGAIN { get { if (!_VK_AGAINReady) { _VK_AGAINContent = SGetField<int>(LocalBridgeClazz, "VK_AGAIN"); _VK_AGAINReady = true; } return _VK_AGAINContent; } }
        private static int _VK_AGAINContent = default;
        private static bool _VK_AGAINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ALL_CANDIDATES"/>
        /// </summary>
        public static int VK_ALL_CANDIDATES { get { if (!_VK_ALL_CANDIDATESReady) { _VK_ALL_CANDIDATESContent = SGetField<int>(LocalBridgeClazz, "VK_ALL_CANDIDATES"); _VK_ALL_CANDIDATESReady = true; } return _VK_ALL_CANDIDATESContent; } }
        private static int _VK_ALL_CANDIDATESContent = default;
        private static bool _VK_ALL_CANDIDATESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ALPHANUMERIC"/>
        /// </summary>
        public static int VK_ALPHANUMERIC { get { if (!_VK_ALPHANUMERICReady) { _VK_ALPHANUMERICContent = SGetField<int>(LocalBridgeClazz, "VK_ALPHANUMERIC"); _VK_ALPHANUMERICReady = true; } return _VK_ALPHANUMERICContent; } }
        private static int _VK_ALPHANUMERICContent = default;
        private static bool _VK_ALPHANUMERICReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ALT"/>
        /// </summary>
        public static int VK_ALT { get { if (!_VK_ALTReady) { _VK_ALTContent = SGetField<int>(LocalBridgeClazz, "VK_ALT"); _VK_ALTReady = true; } return _VK_ALTContent; } }
        private static int _VK_ALTContent = default;
        private static bool _VK_ALTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ALT_GRAPH"/>
        /// </summary>
        public static int VK_ALT_GRAPH { get { if (!_VK_ALT_GRAPHReady) { _VK_ALT_GRAPHContent = SGetField<int>(LocalBridgeClazz, "VK_ALT_GRAPH"); _VK_ALT_GRAPHReady = true; } return _VK_ALT_GRAPHContent; } }
        private static int _VK_ALT_GRAPHContent = default;
        private static bool _VK_ALT_GRAPHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_AMPERSAND"/>
        /// </summary>
        public static int VK_AMPERSAND { get { if (!_VK_AMPERSANDReady) { _VK_AMPERSANDContent = SGetField<int>(LocalBridgeClazz, "VK_AMPERSAND"); _VK_AMPERSANDReady = true; } return _VK_AMPERSANDContent; } }
        private static int _VK_AMPERSANDContent = default;
        private static bool _VK_AMPERSANDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ASTERISK"/>
        /// </summary>
        public static int VK_ASTERISK { get { if (!_VK_ASTERISKReady) { _VK_ASTERISKContent = SGetField<int>(LocalBridgeClazz, "VK_ASTERISK"); _VK_ASTERISKReady = true; } return _VK_ASTERISKContent; } }
        private static int _VK_ASTERISKContent = default;
        private static bool _VK_ASTERISKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_AT"/>
        /// </summary>
        public static int VK_AT { get { if (!_VK_ATReady) { _VK_ATContent = SGetField<int>(LocalBridgeClazz, "VK_AT"); _VK_ATReady = true; } return _VK_ATContent; } }
        private static int _VK_ATContent = default;
        private static bool _VK_ATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_B"/>
        /// </summary>
        public static int VK_B { get { if (!_VK_BReady) { _VK_BContent = SGetField<int>(LocalBridgeClazz, "VK_B"); _VK_BReady = true; } return _VK_BContent; } }
        private static int _VK_BContent = default;
        private static bool _VK_BReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_BACK_QUOTE"/>
        /// </summary>
        public static int VK_BACK_QUOTE { get { if (!_VK_BACK_QUOTEReady) { _VK_BACK_QUOTEContent = SGetField<int>(LocalBridgeClazz, "VK_BACK_QUOTE"); _VK_BACK_QUOTEReady = true; } return _VK_BACK_QUOTEContent; } }
        private static int _VK_BACK_QUOTEContent = default;
        private static bool _VK_BACK_QUOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_BACK_SLASH"/>
        /// </summary>
        public static int VK_BACK_SLASH { get { if (!_VK_BACK_SLASHReady) { _VK_BACK_SLASHContent = SGetField<int>(LocalBridgeClazz, "VK_BACK_SLASH"); _VK_BACK_SLASHReady = true; } return _VK_BACK_SLASHContent; } }
        private static int _VK_BACK_SLASHContent = default;
        private static bool _VK_BACK_SLASHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_BACK_SPACE"/>
        /// </summary>
        public static int VK_BACK_SPACE { get { if (!_VK_BACK_SPACEReady) { _VK_BACK_SPACEContent = SGetField<int>(LocalBridgeClazz, "VK_BACK_SPACE"); _VK_BACK_SPACEReady = true; } return _VK_BACK_SPACEContent; } }
        private static int _VK_BACK_SPACEContent = default;
        private static bool _VK_BACK_SPACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_BEGIN"/>
        /// </summary>
        public static int VK_BEGIN { get { if (!_VK_BEGINReady) { _VK_BEGINContent = SGetField<int>(LocalBridgeClazz, "VK_BEGIN"); _VK_BEGINReady = true; } return _VK_BEGINContent; } }
        private static int _VK_BEGINContent = default;
        private static bool _VK_BEGINReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_BRACELEFT"/>
        /// </summary>
        public static int VK_BRACELEFT { get { if (!_VK_BRACELEFTReady) { _VK_BRACELEFTContent = SGetField<int>(LocalBridgeClazz, "VK_BRACELEFT"); _VK_BRACELEFTReady = true; } return _VK_BRACELEFTContent; } }
        private static int _VK_BRACELEFTContent = default;
        private static bool _VK_BRACELEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_BRACERIGHT"/>
        /// </summary>
        public static int VK_BRACERIGHT { get { if (!_VK_BRACERIGHTReady) { _VK_BRACERIGHTContent = SGetField<int>(LocalBridgeClazz, "VK_BRACERIGHT"); _VK_BRACERIGHTReady = true; } return _VK_BRACERIGHTContent; } }
        private static int _VK_BRACERIGHTContent = default;
        private static bool _VK_BRACERIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_C"/>
        /// </summary>
        public static int VK_C { get { if (!_VK_CReady) { _VK_CContent = SGetField<int>(LocalBridgeClazz, "VK_C"); _VK_CReady = true; } return _VK_CContent; } }
        private static int _VK_CContent = default;
        private static bool _VK_CReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CANCEL"/>
        /// </summary>
        public static int VK_CANCEL { get { if (!_VK_CANCELReady) { _VK_CANCELContent = SGetField<int>(LocalBridgeClazz, "VK_CANCEL"); _VK_CANCELReady = true; } return _VK_CANCELContent; } }
        private static int _VK_CANCELContent = default;
        private static bool _VK_CANCELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CAPS_LOCK"/>
        /// </summary>
        public static int VK_CAPS_LOCK { get { if (!_VK_CAPS_LOCKReady) { _VK_CAPS_LOCKContent = SGetField<int>(LocalBridgeClazz, "VK_CAPS_LOCK"); _VK_CAPS_LOCKReady = true; } return _VK_CAPS_LOCKContent; } }
        private static int _VK_CAPS_LOCKContent = default;
        private static bool _VK_CAPS_LOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CIRCUMFLEX"/>
        /// </summary>
        public static int VK_CIRCUMFLEX { get { if (!_VK_CIRCUMFLEXReady) { _VK_CIRCUMFLEXContent = SGetField<int>(LocalBridgeClazz, "VK_CIRCUMFLEX"); _VK_CIRCUMFLEXReady = true; } return _VK_CIRCUMFLEXContent; } }
        private static int _VK_CIRCUMFLEXContent = default;
        private static bool _VK_CIRCUMFLEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CLEAR"/>
        /// </summary>
        public static int VK_CLEAR { get { if (!_VK_CLEARReady) { _VK_CLEARContent = SGetField<int>(LocalBridgeClazz, "VK_CLEAR"); _VK_CLEARReady = true; } return _VK_CLEARContent; } }
        private static int _VK_CLEARContent = default;
        private static bool _VK_CLEARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CLOSE_BRACKET"/>
        /// </summary>
        public static int VK_CLOSE_BRACKET { get { if (!_VK_CLOSE_BRACKETReady) { _VK_CLOSE_BRACKETContent = SGetField<int>(LocalBridgeClazz, "VK_CLOSE_BRACKET"); _VK_CLOSE_BRACKETReady = true; } return _VK_CLOSE_BRACKETContent; } }
        private static int _VK_CLOSE_BRACKETContent = default;
        private static bool _VK_CLOSE_BRACKETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CODE_INPUT"/>
        /// </summary>
        public static int VK_CODE_INPUT { get { if (!_VK_CODE_INPUTReady) { _VK_CODE_INPUTContent = SGetField<int>(LocalBridgeClazz, "VK_CODE_INPUT"); _VK_CODE_INPUTReady = true; } return _VK_CODE_INPUTContent; } }
        private static int _VK_CODE_INPUTContent = default;
        private static bool _VK_CODE_INPUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_COLON"/>
        /// </summary>
        public static int VK_COLON { get { if (!_VK_COLONReady) { _VK_COLONContent = SGetField<int>(LocalBridgeClazz, "VK_COLON"); _VK_COLONReady = true; } return _VK_COLONContent; } }
        private static int _VK_COLONContent = default;
        private static bool _VK_COLONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_COMMA"/>
        /// </summary>
        public static int VK_COMMA { get { if (!_VK_COMMAReady) { _VK_COMMAContent = SGetField<int>(LocalBridgeClazz, "VK_COMMA"); _VK_COMMAReady = true; } return _VK_COMMAContent; } }
        private static int _VK_COMMAContent = default;
        private static bool _VK_COMMAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_COMPOSE"/>
        /// </summary>
        public static int VK_COMPOSE { get { if (!_VK_COMPOSEReady) { _VK_COMPOSEContent = SGetField<int>(LocalBridgeClazz, "VK_COMPOSE"); _VK_COMPOSEReady = true; } return _VK_COMPOSEContent; } }
        private static int _VK_COMPOSEContent = default;
        private static bool _VK_COMPOSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CONTEXT_MENU"/>
        /// </summary>
        public static int VK_CONTEXT_MENU { get { if (!_VK_CONTEXT_MENUReady) { _VK_CONTEXT_MENUContent = SGetField<int>(LocalBridgeClazz, "VK_CONTEXT_MENU"); _VK_CONTEXT_MENUReady = true; } return _VK_CONTEXT_MENUContent; } }
        private static int _VK_CONTEXT_MENUContent = default;
        private static bool _VK_CONTEXT_MENUReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CONTROL"/>
        /// </summary>
        public static int VK_CONTROL { get { if (!_VK_CONTROLReady) { _VK_CONTROLContent = SGetField<int>(LocalBridgeClazz, "VK_CONTROL"); _VK_CONTROLReady = true; } return _VK_CONTROLContent; } }
        private static int _VK_CONTROLContent = default;
        private static bool _VK_CONTROLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CONVERT"/>
        /// </summary>
        public static int VK_CONVERT { get { if (!_VK_CONVERTReady) { _VK_CONVERTContent = SGetField<int>(LocalBridgeClazz, "VK_CONVERT"); _VK_CONVERTReady = true; } return _VK_CONVERTContent; } }
        private static int _VK_CONVERTContent = default;
        private static bool _VK_CONVERTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_COPY"/>
        /// </summary>
        public static int VK_COPY { get { if (!_VK_COPYReady) { _VK_COPYContent = SGetField<int>(LocalBridgeClazz, "VK_COPY"); _VK_COPYReady = true; } return _VK_COPYContent; } }
        private static int _VK_COPYContent = default;
        private static bool _VK_COPYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_CUT"/>
        /// </summary>
        public static int VK_CUT { get { if (!_VK_CUTReady) { _VK_CUTContent = SGetField<int>(LocalBridgeClazz, "VK_CUT"); _VK_CUTReady = true; } return _VK_CUTContent; } }
        private static int _VK_CUTContent = default;
        private static bool _VK_CUTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_D"/>
        /// </summary>
        public static int VK_D { get { if (!_VK_DReady) { _VK_DContent = SGetField<int>(LocalBridgeClazz, "VK_D"); _VK_DReady = true; } return _VK_DContent; } }
        private static int _VK_DContent = default;
        private static bool _VK_DReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_ABOVEDOT"/>
        /// </summary>
        public static int VK_DEAD_ABOVEDOT { get { if (!_VK_DEAD_ABOVEDOTReady) { _VK_DEAD_ABOVEDOTContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_ABOVEDOT"); _VK_DEAD_ABOVEDOTReady = true; } return _VK_DEAD_ABOVEDOTContent; } }
        private static int _VK_DEAD_ABOVEDOTContent = default;
        private static bool _VK_DEAD_ABOVEDOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_ABOVERING"/>
        /// </summary>
        public static int VK_DEAD_ABOVERING { get { if (!_VK_DEAD_ABOVERINGReady) { _VK_DEAD_ABOVERINGContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_ABOVERING"); _VK_DEAD_ABOVERINGReady = true; } return _VK_DEAD_ABOVERINGContent; } }
        private static int _VK_DEAD_ABOVERINGContent = default;
        private static bool _VK_DEAD_ABOVERINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_ACUTE"/>
        /// </summary>
        public static int VK_DEAD_ACUTE { get { if (!_VK_DEAD_ACUTEReady) { _VK_DEAD_ACUTEContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_ACUTE"); _VK_DEAD_ACUTEReady = true; } return _VK_DEAD_ACUTEContent; } }
        private static int _VK_DEAD_ACUTEContent = default;
        private static bool _VK_DEAD_ACUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_BREVE"/>
        /// </summary>
        public static int VK_DEAD_BREVE { get { if (!_VK_DEAD_BREVEReady) { _VK_DEAD_BREVEContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_BREVE"); _VK_DEAD_BREVEReady = true; } return _VK_DEAD_BREVEContent; } }
        private static int _VK_DEAD_BREVEContent = default;
        private static bool _VK_DEAD_BREVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_CARON"/>
        /// </summary>
        public static int VK_DEAD_CARON { get { if (!_VK_DEAD_CARONReady) { _VK_DEAD_CARONContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_CARON"); _VK_DEAD_CARONReady = true; } return _VK_DEAD_CARONContent; } }
        private static int _VK_DEAD_CARONContent = default;
        private static bool _VK_DEAD_CARONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_CEDILLA"/>
        /// </summary>
        public static int VK_DEAD_CEDILLA { get { if (!_VK_DEAD_CEDILLAReady) { _VK_DEAD_CEDILLAContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_CEDILLA"); _VK_DEAD_CEDILLAReady = true; } return _VK_DEAD_CEDILLAContent; } }
        private static int _VK_DEAD_CEDILLAContent = default;
        private static bool _VK_DEAD_CEDILLAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_CIRCUMFLEX"/>
        /// </summary>
        public static int VK_DEAD_CIRCUMFLEX { get { if (!_VK_DEAD_CIRCUMFLEXReady) { _VK_DEAD_CIRCUMFLEXContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_CIRCUMFLEX"); _VK_DEAD_CIRCUMFLEXReady = true; } return _VK_DEAD_CIRCUMFLEXContent; } }
        private static int _VK_DEAD_CIRCUMFLEXContent = default;
        private static bool _VK_DEAD_CIRCUMFLEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_DIAERESIS"/>
        /// </summary>
        public static int VK_DEAD_DIAERESIS { get { if (!_VK_DEAD_DIAERESISReady) { _VK_DEAD_DIAERESISContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_DIAERESIS"); _VK_DEAD_DIAERESISReady = true; } return _VK_DEAD_DIAERESISContent; } }
        private static int _VK_DEAD_DIAERESISContent = default;
        private static bool _VK_DEAD_DIAERESISReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_DOUBLEACUTE"/>
        /// </summary>
        public static int VK_DEAD_DOUBLEACUTE { get { if (!_VK_DEAD_DOUBLEACUTEReady) { _VK_DEAD_DOUBLEACUTEContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_DOUBLEACUTE"); _VK_DEAD_DOUBLEACUTEReady = true; } return _VK_DEAD_DOUBLEACUTEContent; } }
        private static int _VK_DEAD_DOUBLEACUTEContent = default;
        private static bool _VK_DEAD_DOUBLEACUTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_GRAVE"/>
        /// </summary>
        public static int VK_DEAD_GRAVE { get { if (!_VK_DEAD_GRAVEReady) { _VK_DEAD_GRAVEContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_GRAVE"); _VK_DEAD_GRAVEReady = true; } return _VK_DEAD_GRAVEContent; } }
        private static int _VK_DEAD_GRAVEContent = default;
        private static bool _VK_DEAD_GRAVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_IOTA"/>
        /// </summary>
        public static int VK_DEAD_IOTA { get { if (!_VK_DEAD_IOTAReady) { _VK_DEAD_IOTAContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_IOTA"); _VK_DEAD_IOTAReady = true; } return _VK_DEAD_IOTAContent; } }
        private static int _VK_DEAD_IOTAContent = default;
        private static bool _VK_DEAD_IOTAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_MACRON"/>
        /// </summary>
        public static int VK_DEAD_MACRON { get { if (!_VK_DEAD_MACRONReady) { _VK_DEAD_MACRONContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_MACRON"); _VK_DEAD_MACRONReady = true; } return _VK_DEAD_MACRONContent; } }
        private static int _VK_DEAD_MACRONContent = default;
        private static bool _VK_DEAD_MACRONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_OGONEK"/>
        /// </summary>
        public static int VK_DEAD_OGONEK { get { if (!_VK_DEAD_OGONEKReady) { _VK_DEAD_OGONEKContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_OGONEK"); _VK_DEAD_OGONEKReady = true; } return _VK_DEAD_OGONEKContent; } }
        private static int _VK_DEAD_OGONEKContent = default;
        private static bool _VK_DEAD_OGONEKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_SEMIVOICED_SOUND"/>
        /// </summary>
        public static int VK_DEAD_SEMIVOICED_SOUND { get { if (!_VK_DEAD_SEMIVOICED_SOUNDReady) { _VK_DEAD_SEMIVOICED_SOUNDContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_SEMIVOICED_SOUND"); _VK_DEAD_SEMIVOICED_SOUNDReady = true; } return _VK_DEAD_SEMIVOICED_SOUNDContent; } }
        private static int _VK_DEAD_SEMIVOICED_SOUNDContent = default;
        private static bool _VK_DEAD_SEMIVOICED_SOUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_TILDE"/>
        /// </summary>
        public static int VK_DEAD_TILDE { get { if (!_VK_DEAD_TILDEReady) { _VK_DEAD_TILDEContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_TILDE"); _VK_DEAD_TILDEReady = true; } return _VK_DEAD_TILDEContent; } }
        private static int _VK_DEAD_TILDEContent = default;
        private static bool _VK_DEAD_TILDEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DEAD_VOICED_SOUND"/>
        /// </summary>
        public static int VK_DEAD_VOICED_SOUND { get { if (!_VK_DEAD_VOICED_SOUNDReady) { _VK_DEAD_VOICED_SOUNDContent = SGetField<int>(LocalBridgeClazz, "VK_DEAD_VOICED_SOUND"); _VK_DEAD_VOICED_SOUNDReady = true; } return _VK_DEAD_VOICED_SOUNDContent; } }
        private static int _VK_DEAD_VOICED_SOUNDContent = default;
        private static bool _VK_DEAD_VOICED_SOUNDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DECIMAL"/>
        /// </summary>
        public static int VK_DECIMAL { get { if (!_VK_DECIMALReady) { _VK_DECIMALContent = SGetField<int>(LocalBridgeClazz, "VK_DECIMAL"); _VK_DECIMALReady = true; } return _VK_DECIMALContent; } }
        private static int _VK_DECIMALContent = default;
        private static bool _VK_DECIMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DELETE"/>
        /// </summary>
        public static int VK_DELETE { get { if (!_VK_DELETEReady) { _VK_DELETEContent = SGetField<int>(LocalBridgeClazz, "VK_DELETE"); _VK_DELETEReady = true; } return _VK_DELETEContent; } }
        private static int _VK_DELETEContent = default;
        private static bool _VK_DELETEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DIVIDE"/>
        /// </summary>
        public static int VK_DIVIDE { get { if (!_VK_DIVIDEReady) { _VK_DIVIDEContent = SGetField<int>(LocalBridgeClazz, "VK_DIVIDE"); _VK_DIVIDEReady = true; } return _VK_DIVIDEContent; } }
        private static int _VK_DIVIDEContent = default;
        private static bool _VK_DIVIDEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DOLLAR"/>
        /// </summary>
        public static int VK_DOLLAR { get { if (!_VK_DOLLARReady) { _VK_DOLLARContent = SGetField<int>(LocalBridgeClazz, "VK_DOLLAR"); _VK_DOLLARReady = true; } return _VK_DOLLARContent; } }
        private static int _VK_DOLLARContent = default;
        private static bool _VK_DOLLARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_DOWN"/>
        /// </summary>
        public static int VK_DOWN { get { if (!_VK_DOWNReady) { _VK_DOWNContent = SGetField<int>(LocalBridgeClazz, "VK_DOWN"); _VK_DOWNReady = true; } return _VK_DOWNContent; } }
        private static int _VK_DOWNContent = default;
        private static bool _VK_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_E"/>
        /// </summary>
        public static int VK_E { get { if (!_VK_EReady) { _VK_EContent = SGetField<int>(LocalBridgeClazz, "VK_E"); _VK_EReady = true; } return _VK_EContent; } }
        private static int _VK_EContent = default;
        private static bool _VK_EReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_END"/>
        /// </summary>
        public static int VK_END { get { if (!_VK_ENDReady) { _VK_ENDContent = SGetField<int>(LocalBridgeClazz, "VK_END"); _VK_ENDReady = true; } return _VK_ENDContent; } }
        private static int _VK_ENDContent = default;
        private static bool _VK_ENDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ENTER"/>
        /// </summary>
        public static int VK_ENTER { get { if (!_VK_ENTERReady) { _VK_ENTERContent = SGetField<int>(LocalBridgeClazz, "VK_ENTER"); _VK_ENTERReady = true; } return _VK_ENTERContent; } }
        private static int _VK_ENTERContent = default;
        private static bool _VK_ENTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_EQUALS"/>
        /// </summary>
        public static int VK_EQUALS { get { if (!_VK_EQUALSReady) { _VK_EQUALSContent = SGetField<int>(LocalBridgeClazz, "VK_EQUALS"); _VK_EQUALSReady = true; } return _VK_EQUALSContent; } }
        private static int _VK_EQUALSContent = default;
        private static bool _VK_EQUALSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ESCAPE"/>
        /// </summary>
        public static int VK_ESCAPE { get { if (!_VK_ESCAPEReady) { _VK_ESCAPEContent = SGetField<int>(LocalBridgeClazz, "VK_ESCAPE"); _VK_ESCAPEReady = true; } return _VK_ESCAPEContent; } }
        private static int _VK_ESCAPEContent = default;
        private static bool _VK_ESCAPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_EURO_SIGN"/>
        /// </summary>
        public static int VK_EURO_SIGN { get { if (!_VK_EURO_SIGNReady) { _VK_EURO_SIGNContent = SGetField<int>(LocalBridgeClazz, "VK_EURO_SIGN"); _VK_EURO_SIGNReady = true; } return _VK_EURO_SIGNContent; } }
        private static int _VK_EURO_SIGNContent = default;
        private static bool _VK_EURO_SIGNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_EXCLAMATION_MARK"/>
        /// </summary>
        public static int VK_EXCLAMATION_MARK { get { if (!_VK_EXCLAMATION_MARKReady) { _VK_EXCLAMATION_MARKContent = SGetField<int>(LocalBridgeClazz, "VK_EXCLAMATION_MARK"); _VK_EXCLAMATION_MARKReady = true; } return _VK_EXCLAMATION_MARKContent; } }
        private static int _VK_EXCLAMATION_MARKContent = default;
        private static bool _VK_EXCLAMATION_MARKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F"/>
        /// </summary>
        public static int VK_F { get { if (!_VK_FReady) { _VK_FContent = SGetField<int>(LocalBridgeClazz, "VK_F"); _VK_FReady = true; } return _VK_FContent; } }
        private static int _VK_FContent = default;
        private static bool _VK_FReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F1"/>
        /// </summary>
        public static int VK_F1 { get { if (!_VK_F1Ready) { _VK_F1Content = SGetField<int>(LocalBridgeClazz, "VK_F1"); _VK_F1Ready = true; } return _VK_F1Content; } }
        private static int _VK_F1Content = default;
        private static bool _VK_F1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F10"/>
        /// </summary>
        public static int VK_F10 { get { if (!_VK_F10Ready) { _VK_F10Content = SGetField<int>(LocalBridgeClazz, "VK_F10"); _VK_F10Ready = true; } return _VK_F10Content; } }
        private static int _VK_F10Content = default;
        private static bool _VK_F10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F11"/>
        /// </summary>
        public static int VK_F11 { get { if (!_VK_F11Ready) { _VK_F11Content = SGetField<int>(LocalBridgeClazz, "VK_F11"); _VK_F11Ready = true; } return _VK_F11Content; } }
        private static int _VK_F11Content = default;
        private static bool _VK_F11Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F12"/>
        /// </summary>
        public static int VK_F12 { get { if (!_VK_F12Ready) { _VK_F12Content = SGetField<int>(LocalBridgeClazz, "VK_F12"); _VK_F12Ready = true; } return _VK_F12Content; } }
        private static int _VK_F12Content = default;
        private static bool _VK_F12Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F13"/>
        /// </summary>
        public static int VK_F13 { get { if (!_VK_F13Ready) { _VK_F13Content = SGetField<int>(LocalBridgeClazz, "VK_F13"); _VK_F13Ready = true; } return _VK_F13Content; } }
        private static int _VK_F13Content = default;
        private static bool _VK_F13Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F14"/>
        /// </summary>
        public static int VK_F14 { get { if (!_VK_F14Ready) { _VK_F14Content = SGetField<int>(LocalBridgeClazz, "VK_F14"); _VK_F14Ready = true; } return _VK_F14Content; } }
        private static int _VK_F14Content = default;
        private static bool _VK_F14Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F15"/>
        /// </summary>
        public static int VK_F15 { get { if (!_VK_F15Ready) { _VK_F15Content = SGetField<int>(LocalBridgeClazz, "VK_F15"); _VK_F15Ready = true; } return _VK_F15Content; } }
        private static int _VK_F15Content = default;
        private static bool _VK_F15Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F16"/>
        /// </summary>
        public static int VK_F16 { get { if (!_VK_F16Ready) { _VK_F16Content = SGetField<int>(LocalBridgeClazz, "VK_F16"); _VK_F16Ready = true; } return _VK_F16Content; } }
        private static int _VK_F16Content = default;
        private static bool _VK_F16Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F17"/>
        /// </summary>
        public static int VK_F17 { get { if (!_VK_F17Ready) { _VK_F17Content = SGetField<int>(LocalBridgeClazz, "VK_F17"); _VK_F17Ready = true; } return _VK_F17Content; } }
        private static int _VK_F17Content = default;
        private static bool _VK_F17Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F18"/>
        /// </summary>
        public static int VK_F18 { get { if (!_VK_F18Ready) { _VK_F18Content = SGetField<int>(LocalBridgeClazz, "VK_F18"); _VK_F18Ready = true; } return _VK_F18Content; } }
        private static int _VK_F18Content = default;
        private static bool _VK_F18Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F19"/>
        /// </summary>
        public static int VK_F19 { get { if (!_VK_F19Ready) { _VK_F19Content = SGetField<int>(LocalBridgeClazz, "VK_F19"); _VK_F19Ready = true; } return _VK_F19Content; } }
        private static int _VK_F19Content = default;
        private static bool _VK_F19Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F2"/>
        /// </summary>
        public static int VK_F2 { get { if (!_VK_F2Ready) { _VK_F2Content = SGetField<int>(LocalBridgeClazz, "VK_F2"); _VK_F2Ready = true; } return _VK_F2Content; } }
        private static int _VK_F2Content = default;
        private static bool _VK_F2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F20"/>
        /// </summary>
        public static int VK_F20 { get { if (!_VK_F20Ready) { _VK_F20Content = SGetField<int>(LocalBridgeClazz, "VK_F20"); _VK_F20Ready = true; } return _VK_F20Content; } }
        private static int _VK_F20Content = default;
        private static bool _VK_F20Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F21"/>
        /// </summary>
        public static int VK_F21 { get { if (!_VK_F21Ready) { _VK_F21Content = SGetField<int>(LocalBridgeClazz, "VK_F21"); _VK_F21Ready = true; } return _VK_F21Content; } }
        private static int _VK_F21Content = default;
        private static bool _VK_F21Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F22"/>
        /// </summary>
        public static int VK_F22 { get { if (!_VK_F22Ready) { _VK_F22Content = SGetField<int>(LocalBridgeClazz, "VK_F22"); _VK_F22Ready = true; } return _VK_F22Content; } }
        private static int _VK_F22Content = default;
        private static bool _VK_F22Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F23"/>
        /// </summary>
        public static int VK_F23 { get { if (!_VK_F23Ready) { _VK_F23Content = SGetField<int>(LocalBridgeClazz, "VK_F23"); _VK_F23Ready = true; } return _VK_F23Content; } }
        private static int _VK_F23Content = default;
        private static bool _VK_F23Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F24"/>
        /// </summary>
        public static int VK_F24 { get { if (!_VK_F24Ready) { _VK_F24Content = SGetField<int>(LocalBridgeClazz, "VK_F24"); _VK_F24Ready = true; } return _VK_F24Content; } }
        private static int _VK_F24Content = default;
        private static bool _VK_F24Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F3"/>
        /// </summary>
        public static int VK_F3 { get { if (!_VK_F3Ready) { _VK_F3Content = SGetField<int>(LocalBridgeClazz, "VK_F3"); _VK_F3Ready = true; } return _VK_F3Content; } }
        private static int _VK_F3Content = default;
        private static bool _VK_F3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F4"/>
        /// </summary>
        public static int VK_F4 { get { if (!_VK_F4Ready) { _VK_F4Content = SGetField<int>(LocalBridgeClazz, "VK_F4"); _VK_F4Ready = true; } return _VK_F4Content; } }
        private static int _VK_F4Content = default;
        private static bool _VK_F4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F5"/>
        /// </summary>
        public static int VK_F5 { get { if (!_VK_F5Ready) { _VK_F5Content = SGetField<int>(LocalBridgeClazz, "VK_F5"); _VK_F5Ready = true; } return _VK_F5Content; } }
        private static int _VK_F5Content = default;
        private static bool _VK_F5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F6"/>
        /// </summary>
        public static int VK_F6 { get { if (!_VK_F6Ready) { _VK_F6Content = SGetField<int>(LocalBridgeClazz, "VK_F6"); _VK_F6Ready = true; } return _VK_F6Content; } }
        private static int _VK_F6Content = default;
        private static bool _VK_F6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F7"/>
        /// </summary>
        public static int VK_F7 { get { if (!_VK_F7Ready) { _VK_F7Content = SGetField<int>(LocalBridgeClazz, "VK_F7"); _VK_F7Ready = true; } return _VK_F7Content; } }
        private static int _VK_F7Content = default;
        private static bool _VK_F7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F8"/>
        /// </summary>
        public static int VK_F8 { get { if (!_VK_F8Ready) { _VK_F8Content = SGetField<int>(LocalBridgeClazz, "VK_F8"); _VK_F8Ready = true; } return _VK_F8Content; } }
        private static int _VK_F8Content = default;
        private static bool _VK_F8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_F9"/>
        /// </summary>
        public static int VK_F9 { get { if (!_VK_F9Ready) { _VK_F9Content = SGetField<int>(LocalBridgeClazz, "VK_F9"); _VK_F9Ready = true; } return _VK_F9Content; } }
        private static int _VK_F9Content = default;
        private static bool _VK_F9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_FINAL"/>
        /// </summary>
        public static int VK_FINAL { get { if (!_VK_FINALReady) { _VK_FINALContent = SGetField<int>(LocalBridgeClazz, "VK_FINAL"); _VK_FINALReady = true; } return _VK_FINALContent; } }
        private static int _VK_FINALContent = default;
        private static bool _VK_FINALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_FIND"/>
        /// </summary>
        public static int VK_FIND { get { if (!_VK_FINDReady) { _VK_FINDContent = SGetField<int>(LocalBridgeClazz, "VK_FIND"); _VK_FINDReady = true; } return _VK_FINDContent; } }
        private static int _VK_FINDContent = default;
        private static bool _VK_FINDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_FULL_WIDTH"/>
        /// </summary>
        public static int VK_FULL_WIDTH { get { if (!_VK_FULL_WIDTHReady) { _VK_FULL_WIDTHContent = SGetField<int>(LocalBridgeClazz, "VK_FULL_WIDTH"); _VK_FULL_WIDTHReady = true; } return _VK_FULL_WIDTHContent; } }
        private static int _VK_FULL_WIDTHContent = default;
        private static bool _VK_FULL_WIDTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_G"/>
        /// </summary>
        public static int VK_G { get { if (!_VK_GReady) { _VK_GContent = SGetField<int>(LocalBridgeClazz, "VK_G"); _VK_GReady = true; } return _VK_GContent; } }
        private static int _VK_GContent = default;
        private static bool _VK_GReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_GREATER"/>
        /// </summary>
        public static int VK_GREATER { get { if (!_VK_GREATERReady) { _VK_GREATERContent = SGetField<int>(LocalBridgeClazz, "VK_GREATER"); _VK_GREATERReady = true; } return _VK_GREATERContent; } }
        private static int _VK_GREATERContent = default;
        private static bool _VK_GREATERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_H"/>
        /// </summary>
        public static int VK_H { get { if (!_VK_HReady) { _VK_HContent = SGetField<int>(LocalBridgeClazz, "VK_H"); _VK_HReady = true; } return _VK_HContent; } }
        private static int _VK_HContent = default;
        private static bool _VK_HReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_HALF_WIDTH"/>
        /// </summary>
        public static int VK_HALF_WIDTH { get { if (!_VK_HALF_WIDTHReady) { _VK_HALF_WIDTHContent = SGetField<int>(LocalBridgeClazz, "VK_HALF_WIDTH"); _VK_HALF_WIDTHReady = true; } return _VK_HALF_WIDTHContent; } }
        private static int _VK_HALF_WIDTHContent = default;
        private static bool _VK_HALF_WIDTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_HELP"/>
        /// </summary>
        public static int VK_HELP { get { if (!_VK_HELPReady) { _VK_HELPContent = SGetField<int>(LocalBridgeClazz, "VK_HELP"); _VK_HELPReady = true; } return _VK_HELPContent; } }
        private static int _VK_HELPContent = default;
        private static bool _VK_HELPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_HIRAGANA"/>
        /// </summary>
        public static int VK_HIRAGANA { get { if (!_VK_HIRAGANAReady) { _VK_HIRAGANAContent = SGetField<int>(LocalBridgeClazz, "VK_HIRAGANA"); _VK_HIRAGANAReady = true; } return _VK_HIRAGANAContent; } }
        private static int _VK_HIRAGANAContent = default;
        private static bool _VK_HIRAGANAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_HOME"/>
        /// </summary>
        public static int VK_HOME { get { if (!_VK_HOMEReady) { _VK_HOMEContent = SGetField<int>(LocalBridgeClazz, "VK_HOME"); _VK_HOMEReady = true; } return _VK_HOMEContent; } }
        private static int _VK_HOMEContent = default;
        private static bool _VK_HOMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_I"/>
        /// </summary>
        public static int VK_I { get { if (!_VK_IReady) { _VK_IContent = SGetField<int>(LocalBridgeClazz, "VK_I"); _VK_IReady = true; } return _VK_IContent; } }
        private static int _VK_IContent = default;
        private static bool _VK_IReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_INPUT_METHOD_ON_OFF"/>
        /// </summary>
        public static int VK_INPUT_METHOD_ON_OFF { get { if (!_VK_INPUT_METHOD_ON_OFFReady) { _VK_INPUT_METHOD_ON_OFFContent = SGetField<int>(LocalBridgeClazz, "VK_INPUT_METHOD_ON_OFF"); _VK_INPUT_METHOD_ON_OFFReady = true; } return _VK_INPUT_METHOD_ON_OFFContent; } }
        private static int _VK_INPUT_METHOD_ON_OFFContent = default;
        private static bool _VK_INPUT_METHOD_ON_OFFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_INSERT"/>
        /// </summary>
        public static int VK_INSERT { get { if (!_VK_INSERTReady) { _VK_INSERTContent = SGetField<int>(LocalBridgeClazz, "VK_INSERT"); _VK_INSERTReady = true; } return _VK_INSERTContent; } }
        private static int _VK_INSERTContent = default;
        private static bool _VK_INSERTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_INVERTED_EXCLAMATION_MARK"/>
        /// </summary>
        public static int VK_INVERTED_EXCLAMATION_MARK { get { if (!_VK_INVERTED_EXCLAMATION_MARKReady) { _VK_INVERTED_EXCLAMATION_MARKContent = SGetField<int>(LocalBridgeClazz, "VK_INVERTED_EXCLAMATION_MARK"); _VK_INVERTED_EXCLAMATION_MARKReady = true; } return _VK_INVERTED_EXCLAMATION_MARKContent; } }
        private static int _VK_INVERTED_EXCLAMATION_MARKContent = default;
        private static bool _VK_INVERTED_EXCLAMATION_MARKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_J"/>
        /// </summary>
        public static int VK_J { get { if (!_VK_JReady) { _VK_JContent = SGetField<int>(LocalBridgeClazz, "VK_J"); _VK_JReady = true; } return _VK_JContent; } }
        private static int _VK_JContent = default;
        private static bool _VK_JReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_JAPANESE_HIRAGANA"/>
        /// </summary>
        public static int VK_JAPANESE_HIRAGANA { get { if (!_VK_JAPANESE_HIRAGANAReady) { _VK_JAPANESE_HIRAGANAContent = SGetField<int>(LocalBridgeClazz, "VK_JAPANESE_HIRAGANA"); _VK_JAPANESE_HIRAGANAReady = true; } return _VK_JAPANESE_HIRAGANAContent; } }
        private static int _VK_JAPANESE_HIRAGANAContent = default;
        private static bool _VK_JAPANESE_HIRAGANAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_JAPANESE_KATAKANA"/>
        /// </summary>
        public static int VK_JAPANESE_KATAKANA { get { if (!_VK_JAPANESE_KATAKANAReady) { _VK_JAPANESE_KATAKANAContent = SGetField<int>(LocalBridgeClazz, "VK_JAPANESE_KATAKANA"); _VK_JAPANESE_KATAKANAReady = true; } return _VK_JAPANESE_KATAKANAContent; } }
        private static int _VK_JAPANESE_KATAKANAContent = default;
        private static bool _VK_JAPANESE_KATAKANAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_JAPANESE_ROMAN"/>
        /// </summary>
        public static int VK_JAPANESE_ROMAN { get { if (!_VK_JAPANESE_ROMANReady) { _VK_JAPANESE_ROMANContent = SGetField<int>(LocalBridgeClazz, "VK_JAPANESE_ROMAN"); _VK_JAPANESE_ROMANReady = true; } return _VK_JAPANESE_ROMANContent; } }
        private static int _VK_JAPANESE_ROMANContent = default;
        private static bool _VK_JAPANESE_ROMANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_K"/>
        /// </summary>
        public static int VK_K { get { if (!_VK_KReady) { _VK_KContent = SGetField<int>(LocalBridgeClazz, "VK_K"); _VK_KReady = true; } return _VK_KContent; } }
        private static int _VK_KContent = default;
        private static bool _VK_KReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KANA"/>
        /// </summary>
        public static int VK_KANA { get { if (!_VK_KANAReady) { _VK_KANAContent = SGetField<int>(LocalBridgeClazz, "VK_KANA"); _VK_KANAReady = true; } return _VK_KANAContent; } }
        private static int _VK_KANAContent = default;
        private static bool _VK_KANAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KANA_LOCK"/>
        /// </summary>
        public static int VK_KANA_LOCK { get { if (!_VK_KANA_LOCKReady) { _VK_KANA_LOCKContent = SGetField<int>(LocalBridgeClazz, "VK_KANA_LOCK"); _VK_KANA_LOCKReady = true; } return _VK_KANA_LOCKContent; } }
        private static int _VK_KANA_LOCKContent = default;
        private static bool _VK_KANA_LOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KANJI"/>
        /// </summary>
        public static int VK_KANJI { get { if (!_VK_KANJIReady) { _VK_KANJIContent = SGetField<int>(LocalBridgeClazz, "VK_KANJI"); _VK_KANJIReady = true; } return _VK_KANJIContent; } }
        private static int _VK_KANJIContent = default;
        private static bool _VK_KANJIReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KATAKANA"/>
        /// </summary>
        public static int VK_KATAKANA { get { if (!_VK_KATAKANAReady) { _VK_KATAKANAContent = SGetField<int>(LocalBridgeClazz, "VK_KATAKANA"); _VK_KATAKANAReady = true; } return _VK_KATAKANAContent; } }
        private static int _VK_KATAKANAContent = default;
        private static bool _VK_KATAKANAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KP_DOWN"/>
        /// </summary>
        public static int VK_KP_DOWN { get { if (!_VK_KP_DOWNReady) { _VK_KP_DOWNContent = SGetField<int>(LocalBridgeClazz, "VK_KP_DOWN"); _VK_KP_DOWNReady = true; } return _VK_KP_DOWNContent; } }
        private static int _VK_KP_DOWNContent = default;
        private static bool _VK_KP_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KP_LEFT"/>
        /// </summary>
        public static int VK_KP_LEFT { get { if (!_VK_KP_LEFTReady) { _VK_KP_LEFTContent = SGetField<int>(LocalBridgeClazz, "VK_KP_LEFT"); _VK_KP_LEFTReady = true; } return _VK_KP_LEFTContent; } }
        private static int _VK_KP_LEFTContent = default;
        private static bool _VK_KP_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KP_RIGHT"/>
        /// </summary>
        public static int VK_KP_RIGHT { get { if (!_VK_KP_RIGHTReady) { _VK_KP_RIGHTContent = SGetField<int>(LocalBridgeClazz, "VK_KP_RIGHT"); _VK_KP_RIGHTReady = true; } return _VK_KP_RIGHTContent; } }
        private static int _VK_KP_RIGHTContent = default;
        private static bool _VK_KP_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_KP_UP"/>
        /// </summary>
        public static int VK_KP_UP { get { if (!_VK_KP_UPReady) { _VK_KP_UPContent = SGetField<int>(LocalBridgeClazz, "VK_KP_UP"); _VK_KP_UPReady = true; } return _VK_KP_UPContent; } }
        private static int _VK_KP_UPContent = default;
        private static bool _VK_KP_UPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_L"/>
        /// </summary>
        public static int VK_L { get { if (!_VK_LReady) { _VK_LContent = SGetField<int>(LocalBridgeClazz, "VK_L"); _VK_LReady = true; } return _VK_LContent; } }
        private static int _VK_LContent = default;
        private static bool _VK_LReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_LEFT"/>
        /// </summary>
        public static int VK_LEFT { get { if (!_VK_LEFTReady) { _VK_LEFTContent = SGetField<int>(LocalBridgeClazz, "VK_LEFT"); _VK_LEFTReady = true; } return _VK_LEFTContent; } }
        private static int _VK_LEFTContent = default;
        private static bool _VK_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_LEFT_PARENTHESIS"/>
        /// </summary>
        public static int VK_LEFT_PARENTHESIS { get { if (!_VK_LEFT_PARENTHESISReady) { _VK_LEFT_PARENTHESISContent = SGetField<int>(LocalBridgeClazz, "VK_LEFT_PARENTHESIS"); _VK_LEFT_PARENTHESISReady = true; } return _VK_LEFT_PARENTHESISContent; } }
        private static int _VK_LEFT_PARENTHESISContent = default;
        private static bool _VK_LEFT_PARENTHESISReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_LESS"/>
        /// </summary>
        public static int VK_LESS { get { if (!_VK_LESSReady) { _VK_LESSContent = SGetField<int>(LocalBridgeClazz, "VK_LESS"); _VK_LESSReady = true; } return _VK_LESSContent; } }
        private static int _VK_LESSContent = default;
        private static bool _VK_LESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_M"/>
        /// </summary>
        public static int VK_M { get { if (!_VK_MReady) { _VK_MContent = SGetField<int>(LocalBridgeClazz, "VK_M"); _VK_MReady = true; } return _VK_MContent; } }
        private static int _VK_MContent = default;
        private static bool _VK_MReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_META"/>
        /// </summary>
        public static int VK_META { get { if (!_VK_METAReady) { _VK_METAContent = SGetField<int>(LocalBridgeClazz, "VK_META"); _VK_METAReady = true; } return _VK_METAContent; } }
        private static int _VK_METAContent = default;
        private static bool _VK_METAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_MINUS"/>
        /// </summary>
        public static int VK_MINUS { get { if (!_VK_MINUSReady) { _VK_MINUSContent = SGetField<int>(LocalBridgeClazz, "VK_MINUS"); _VK_MINUSReady = true; } return _VK_MINUSContent; } }
        private static int _VK_MINUSContent = default;
        private static bool _VK_MINUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_MODECHANGE"/>
        /// </summary>
        public static int VK_MODECHANGE { get { if (!_VK_MODECHANGEReady) { _VK_MODECHANGEContent = SGetField<int>(LocalBridgeClazz, "VK_MODECHANGE"); _VK_MODECHANGEReady = true; } return _VK_MODECHANGEContent; } }
        private static int _VK_MODECHANGEContent = default;
        private static bool _VK_MODECHANGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_MULTIPLY"/>
        /// </summary>
        public static int VK_MULTIPLY { get { if (!_VK_MULTIPLYReady) { _VK_MULTIPLYContent = SGetField<int>(LocalBridgeClazz, "VK_MULTIPLY"); _VK_MULTIPLYReady = true; } return _VK_MULTIPLYContent; } }
        private static int _VK_MULTIPLYContent = default;
        private static bool _VK_MULTIPLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_N"/>
        /// </summary>
        public static int VK_N { get { if (!_VK_NReady) { _VK_NContent = SGetField<int>(LocalBridgeClazz, "VK_N"); _VK_NReady = true; } return _VK_NContent; } }
        private static int _VK_NContent = default;
        private static bool _VK_NReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NONCONVERT"/>
        /// </summary>
        public static int VK_NONCONVERT { get { if (!_VK_NONCONVERTReady) { _VK_NONCONVERTContent = SGetField<int>(LocalBridgeClazz, "VK_NONCONVERT"); _VK_NONCONVERTReady = true; } return _VK_NONCONVERTContent; } }
        private static int _VK_NONCONVERTContent = default;
        private static bool _VK_NONCONVERTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUM_LOCK"/>
        /// </summary>
        public static int VK_NUM_LOCK { get { if (!_VK_NUM_LOCKReady) { _VK_NUM_LOCKContent = SGetField<int>(LocalBridgeClazz, "VK_NUM_LOCK"); _VK_NUM_LOCKReady = true; } return _VK_NUM_LOCKContent; } }
        private static int _VK_NUM_LOCKContent = default;
        private static bool _VK_NUM_LOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMBER_SIGN"/>
        /// </summary>
        public static int VK_NUMBER_SIGN { get { if (!_VK_NUMBER_SIGNReady) { _VK_NUMBER_SIGNContent = SGetField<int>(LocalBridgeClazz, "VK_NUMBER_SIGN"); _VK_NUMBER_SIGNReady = true; } return _VK_NUMBER_SIGNContent; } }
        private static int _VK_NUMBER_SIGNContent = default;
        private static bool _VK_NUMBER_SIGNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD0"/>
        /// </summary>
        public static int VK_NUMPAD0 { get { if (!_VK_NUMPAD0Ready) { _VK_NUMPAD0Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD0"); _VK_NUMPAD0Ready = true; } return _VK_NUMPAD0Content; } }
        private static int _VK_NUMPAD0Content = default;
        private static bool _VK_NUMPAD0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD1"/>
        /// </summary>
        public static int VK_NUMPAD1 { get { if (!_VK_NUMPAD1Ready) { _VK_NUMPAD1Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD1"); _VK_NUMPAD1Ready = true; } return _VK_NUMPAD1Content; } }
        private static int _VK_NUMPAD1Content = default;
        private static bool _VK_NUMPAD1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD2"/>
        /// </summary>
        public static int VK_NUMPAD2 { get { if (!_VK_NUMPAD2Ready) { _VK_NUMPAD2Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD2"); _VK_NUMPAD2Ready = true; } return _VK_NUMPAD2Content; } }
        private static int _VK_NUMPAD2Content = default;
        private static bool _VK_NUMPAD2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD3"/>
        /// </summary>
        public static int VK_NUMPAD3 { get { if (!_VK_NUMPAD3Ready) { _VK_NUMPAD3Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD3"); _VK_NUMPAD3Ready = true; } return _VK_NUMPAD3Content; } }
        private static int _VK_NUMPAD3Content = default;
        private static bool _VK_NUMPAD3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD4"/>
        /// </summary>
        public static int VK_NUMPAD4 { get { if (!_VK_NUMPAD4Ready) { _VK_NUMPAD4Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD4"); _VK_NUMPAD4Ready = true; } return _VK_NUMPAD4Content; } }
        private static int _VK_NUMPAD4Content = default;
        private static bool _VK_NUMPAD4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD5"/>
        /// </summary>
        public static int VK_NUMPAD5 { get { if (!_VK_NUMPAD5Ready) { _VK_NUMPAD5Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD5"); _VK_NUMPAD5Ready = true; } return _VK_NUMPAD5Content; } }
        private static int _VK_NUMPAD5Content = default;
        private static bool _VK_NUMPAD5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD6"/>
        /// </summary>
        public static int VK_NUMPAD6 { get { if (!_VK_NUMPAD6Ready) { _VK_NUMPAD6Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD6"); _VK_NUMPAD6Ready = true; } return _VK_NUMPAD6Content; } }
        private static int _VK_NUMPAD6Content = default;
        private static bool _VK_NUMPAD6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD7"/>
        /// </summary>
        public static int VK_NUMPAD7 { get { if (!_VK_NUMPAD7Ready) { _VK_NUMPAD7Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD7"); _VK_NUMPAD7Ready = true; } return _VK_NUMPAD7Content; } }
        private static int _VK_NUMPAD7Content = default;
        private static bool _VK_NUMPAD7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD8"/>
        /// </summary>
        public static int VK_NUMPAD8 { get { if (!_VK_NUMPAD8Ready) { _VK_NUMPAD8Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD8"); _VK_NUMPAD8Ready = true; } return _VK_NUMPAD8Content; } }
        private static int _VK_NUMPAD8Content = default;
        private static bool _VK_NUMPAD8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_NUMPAD9"/>
        /// </summary>
        public static int VK_NUMPAD9 { get { if (!_VK_NUMPAD9Ready) { _VK_NUMPAD9Content = SGetField<int>(LocalBridgeClazz, "VK_NUMPAD9"); _VK_NUMPAD9Ready = true; } return _VK_NUMPAD9Content; } }
        private static int _VK_NUMPAD9Content = default;
        private static bool _VK_NUMPAD9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_O"/>
        /// </summary>
        public static int VK_O { get { if (!_VK_OReady) { _VK_OContent = SGetField<int>(LocalBridgeClazz, "VK_O"); _VK_OReady = true; } return _VK_OContent; } }
        private static int _VK_OContent = default;
        private static bool _VK_OReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_OPEN_BRACKET"/>
        /// </summary>
        public static int VK_OPEN_BRACKET { get { if (!_VK_OPEN_BRACKETReady) { _VK_OPEN_BRACKETContent = SGetField<int>(LocalBridgeClazz, "VK_OPEN_BRACKET"); _VK_OPEN_BRACKETReady = true; } return _VK_OPEN_BRACKETContent; } }
        private static int _VK_OPEN_BRACKETContent = default;
        private static bool _VK_OPEN_BRACKETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_P"/>
        /// </summary>
        public static int VK_P { get { if (!_VK_PReady) { _VK_PContent = SGetField<int>(LocalBridgeClazz, "VK_P"); _VK_PReady = true; } return _VK_PContent; } }
        private static int _VK_PContent = default;
        private static bool _VK_PReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PAGE_DOWN"/>
        /// </summary>
        public static int VK_PAGE_DOWN { get { if (!_VK_PAGE_DOWNReady) { _VK_PAGE_DOWNContent = SGetField<int>(LocalBridgeClazz, "VK_PAGE_DOWN"); _VK_PAGE_DOWNReady = true; } return _VK_PAGE_DOWNContent; } }
        private static int _VK_PAGE_DOWNContent = default;
        private static bool _VK_PAGE_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PAGE_UP"/>
        /// </summary>
        public static int VK_PAGE_UP { get { if (!_VK_PAGE_UPReady) { _VK_PAGE_UPContent = SGetField<int>(LocalBridgeClazz, "VK_PAGE_UP"); _VK_PAGE_UPReady = true; } return _VK_PAGE_UPContent; } }
        private static int _VK_PAGE_UPContent = default;
        private static bool _VK_PAGE_UPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PASTE"/>
        /// </summary>
        public static int VK_PASTE { get { if (!_VK_PASTEReady) { _VK_PASTEContent = SGetField<int>(LocalBridgeClazz, "VK_PASTE"); _VK_PASTEReady = true; } return _VK_PASTEContent; } }
        private static int _VK_PASTEContent = default;
        private static bool _VK_PASTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PAUSE"/>
        /// </summary>
        public static int VK_PAUSE { get { if (!_VK_PAUSEReady) { _VK_PAUSEContent = SGetField<int>(LocalBridgeClazz, "VK_PAUSE"); _VK_PAUSEReady = true; } return _VK_PAUSEContent; } }
        private static int _VK_PAUSEContent = default;
        private static bool _VK_PAUSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PERIOD"/>
        /// </summary>
        public static int VK_PERIOD { get { if (!_VK_PERIODReady) { _VK_PERIODContent = SGetField<int>(LocalBridgeClazz, "VK_PERIOD"); _VK_PERIODReady = true; } return _VK_PERIODContent; } }
        private static int _VK_PERIODContent = default;
        private static bool _VK_PERIODReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PLUS"/>
        /// </summary>
        public static int VK_PLUS { get { if (!_VK_PLUSReady) { _VK_PLUSContent = SGetField<int>(LocalBridgeClazz, "VK_PLUS"); _VK_PLUSReady = true; } return _VK_PLUSContent; } }
        private static int _VK_PLUSContent = default;
        private static bool _VK_PLUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PREVIOUS_CANDIDATE"/>
        /// </summary>
        public static int VK_PREVIOUS_CANDIDATE { get { if (!_VK_PREVIOUS_CANDIDATEReady) { _VK_PREVIOUS_CANDIDATEContent = SGetField<int>(LocalBridgeClazz, "VK_PREVIOUS_CANDIDATE"); _VK_PREVIOUS_CANDIDATEReady = true; } return _VK_PREVIOUS_CANDIDATEContent; } }
        private static int _VK_PREVIOUS_CANDIDATEContent = default;
        private static bool _VK_PREVIOUS_CANDIDATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PRINTSCREEN"/>
        /// </summary>
        public static int VK_PRINTSCREEN { get { if (!_VK_PRINTSCREENReady) { _VK_PRINTSCREENContent = SGetField<int>(LocalBridgeClazz, "VK_PRINTSCREEN"); _VK_PRINTSCREENReady = true; } return _VK_PRINTSCREENContent; } }
        private static int _VK_PRINTSCREENContent = default;
        private static bool _VK_PRINTSCREENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_PROPS"/>
        /// </summary>
        public static int VK_PROPS { get { if (!_VK_PROPSReady) { _VK_PROPSContent = SGetField<int>(LocalBridgeClazz, "VK_PROPS"); _VK_PROPSReady = true; } return _VK_PROPSContent; } }
        private static int _VK_PROPSContent = default;
        private static bool _VK_PROPSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_Q"/>
        /// </summary>
        public static int VK_Q { get { if (!_VK_QReady) { _VK_QContent = SGetField<int>(LocalBridgeClazz, "VK_Q"); _VK_QReady = true; } return _VK_QContent; } }
        private static int _VK_QContent = default;
        private static bool _VK_QReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_QUOTE"/>
        /// </summary>
        public static int VK_QUOTE { get { if (!_VK_QUOTEReady) { _VK_QUOTEContent = SGetField<int>(LocalBridgeClazz, "VK_QUOTE"); _VK_QUOTEReady = true; } return _VK_QUOTEContent; } }
        private static int _VK_QUOTEContent = default;
        private static bool _VK_QUOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_QUOTEDBL"/>
        /// </summary>
        public static int VK_QUOTEDBL { get { if (!_VK_QUOTEDBLReady) { _VK_QUOTEDBLContent = SGetField<int>(LocalBridgeClazz, "VK_QUOTEDBL"); _VK_QUOTEDBLReady = true; } return _VK_QUOTEDBLContent; } }
        private static int _VK_QUOTEDBLContent = default;
        private static bool _VK_QUOTEDBLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_R"/>
        /// </summary>
        public static int VK_R { get { if (!_VK_RReady) { _VK_RContent = SGetField<int>(LocalBridgeClazz, "VK_R"); _VK_RReady = true; } return _VK_RContent; } }
        private static int _VK_RContent = default;
        private static bool _VK_RReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_RIGHT"/>
        /// </summary>
        public static int VK_RIGHT { get { if (!_VK_RIGHTReady) { _VK_RIGHTContent = SGetField<int>(LocalBridgeClazz, "VK_RIGHT"); _VK_RIGHTReady = true; } return _VK_RIGHTContent; } }
        private static int _VK_RIGHTContent = default;
        private static bool _VK_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_RIGHT_PARENTHESIS"/>
        /// </summary>
        public static int VK_RIGHT_PARENTHESIS { get { if (!_VK_RIGHT_PARENTHESISReady) { _VK_RIGHT_PARENTHESISContent = SGetField<int>(LocalBridgeClazz, "VK_RIGHT_PARENTHESIS"); _VK_RIGHT_PARENTHESISReady = true; } return _VK_RIGHT_PARENTHESISContent; } }
        private static int _VK_RIGHT_PARENTHESISContent = default;
        private static bool _VK_RIGHT_PARENTHESISReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_ROMAN_CHARACTERS"/>
        /// </summary>
        public static int VK_ROMAN_CHARACTERS { get { if (!_VK_ROMAN_CHARACTERSReady) { _VK_ROMAN_CHARACTERSContent = SGetField<int>(LocalBridgeClazz, "VK_ROMAN_CHARACTERS"); _VK_ROMAN_CHARACTERSReady = true; } return _VK_ROMAN_CHARACTERSContent; } }
        private static int _VK_ROMAN_CHARACTERSContent = default;
        private static bool _VK_ROMAN_CHARACTERSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_S"/>
        /// </summary>
        public static int VK_S { get { if (!_VK_SReady) { _VK_SContent = SGetField<int>(LocalBridgeClazz, "VK_S"); _VK_SReady = true; } return _VK_SContent; } }
        private static int _VK_SContent = default;
        private static bool _VK_SReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SCROLL_LOCK"/>
        /// </summary>
        public static int VK_SCROLL_LOCK { get { if (!_VK_SCROLL_LOCKReady) { _VK_SCROLL_LOCKContent = SGetField<int>(LocalBridgeClazz, "VK_SCROLL_LOCK"); _VK_SCROLL_LOCKReady = true; } return _VK_SCROLL_LOCKContent; } }
        private static int _VK_SCROLL_LOCKContent = default;
        private static bool _VK_SCROLL_LOCKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SEMICOLON"/>
        /// </summary>
        public static int VK_SEMICOLON { get { if (!_VK_SEMICOLONReady) { _VK_SEMICOLONContent = SGetField<int>(LocalBridgeClazz, "VK_SEMICOLON"); _VK_SEMICOLONReady = true; } return _VK_SEMICOLONContent; } }
        private static int _VK_SEMICOLONContent = default;
        private static bool _VK_SEMICOLONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SEPARATER"/>
        /// </summary>
        public static int VK_SEPARATER { get { if (!_VK_SEPARATERReady) { _VK_SEPARATERContent = SGetField<int>(LocalBridgeClazz, "VK_SEPARATER"); _VK_SEPARATERReady = true; } return _VK_SEPARATERContent; } }
        private static int _VK_SEPARATERContent = default;
        private static bool _VK_SEPARATERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SEPARATOR"/>
        /// </summary>
        public static int VK_SEPARATOR { get { if (!_VK_SEPARATORReady) { _VK_SEPARATORContent = SGetField<int>(LocalBridgeClazz, "VK_SEPARATOR"); _VK_SEPARATORReady = true; } return _VK_SEPARATORContent; } }
        private static int _VK_SEPARATORContent = default;
        private static bool _VK_SEPARATORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SHIFT"/>
        /// </summary>
        public static int VK_SHIFT { get { if (!_VK_SHIFTReady) { _VK_SHIFTContent = SGetField<int>(LocalBridgeClazz, "VK_SHIFT"); _VK_SHIFTReady = true; } return _VK_SHIFTContent; } }
        private static int _VK_SHIFTContent = default;
        private static bool _VK_SHIFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SLASH"/>
        /// </summary>
        public static int VK_SLASH { get { if (!_VK_SLASHReady) { _VK_SLASHContent = SGetField<int>(LocalBridgeClazz, "VK_SLASH"); _VK_SLASHReady = true; } return _VK_SLASHContent; } }
        private static int _VK_SLASHContent = default;
        private static bool _VK_SLASHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SPACE"/>
        /// </summary>
        public static int VK_SPACE { get { if (!_VK_SPACEReady) { _VK_SPACEContent = SGetField<int>(LocalBridgeClazz, "VK_SPACE"); _VK_SPACEReady = true; } return _VK_SPACEContent; } }
        private static int _VK_SPACEContent = default;
        private static bool _VK_SPACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_STOP"/>
        /// </summary>
        public static int VK_STOP { get { if (!_VK_STOPReady) { _VK_STOPContent = SGetField<int>(LocalBridgeClazz, "VK_STOP"); _VK_STOPReady = true; } return _VK_STOPContent; } }
        private static int _VK_STOPContent = default;
        private static bool _VK_STOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_SUBTRACT"/>
        /// </summary>
        public static int VK_SUBTRACT { get { if (!_VK_SUBTRACTReady) { _VK_SUBTRACTContent = SGetField<int>(LocalBridgeClazz, "VK_SUBTRACT"); _VK_SUBTRACTReady = true; } return _VK_SUBTRACTContent; } }
        private static int _VK_SUBTRACTContent = default;
        private static bool _VK_SUBTRACTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_T"/>
        /// </summary>
        public static int VK_T { get { if (!_VK_TReady) { _VK_TContent = SGetField<int>(LocalBridgeClazz, "VK_T"); _VK_TReady = true; } return _VK_TContent; } }
        private static int _VK_TContent = default;
        private static bool _VK_TReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_TAB"/>
        /// </summary>
        public static int VK_TAB { get { if (!_VK_TABReady) { _VK_TABContent = SGetField<int>(LocalBridgeClazz, "VK_TAB"); _VK_TABReady = true; } return _VK_TABContent; } }
        private static int _VK_TABContent = default;
        private static bool _VK_TABReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_U"/>
        /// </summary>
        public static int VK_U { get { if (!_VK_UReady) { _VK_UContent = SGetField<int>(LocalBridgeClazz, "VK_U"); _VK_UReady = true; } return _VK_UContent; } }
        private static int _VK_UContent = default;
        private static bool _VK_UReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_UNDEFINED"/>
        /// </summary>
        public static int VK_UNDEFINED { get { if (!_VK_UNDEFINEDReady) { _VK_UNDEFINEDContent = SGetField<int>(LocalBridgeClazz, "VK_UNDEFINED"); _VK_UNDEFINEDReady = true; } return _VK_UNDEFINEDContent; } }
        private static int _VK_UNDEFINEDContent = default;
        private static bool _VK_UNDEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_UNDERSCORE"/>
        /// </summary>
        public static int VK_UNDERSCORE { get { if (!_VK_UNDERSCOREReady) { _VK_UNDERSCOREContent = SGetField<int>(LocalBridgeClazz, "VK_UNDERSCORE"); _VK_UNDERSCOREReady = true; } return _VK_UNDERSCOREContent; } }
        private static int _VK_UNDERSCOREContent = default;
        private static bool _VK_UNDERSCOREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_UNDO"/>
        /// </summary>
        public static int VK_UNDO { get { if (!_VK_UNDOReady) { _VK_UNDOContent = SGetField<int>(LocalBridgeClazz, "VK_UNDO"); _VK_UNDOReady = true; } return _VK_UNDOContent; } }
        private static int _VK_UNDOContent = default;
        private static bool _VK_UNDOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_UP"/>
        /// </summary>
        public static int VK_UP { get { if (!_VK_UPReady) { _VK_UPContent = SGetField<int>(LocalBridgeClazz, "VK_UP"); _VK_UPReady = true; } return _VK_UPContent; } }
        private static int _VK_UPContent = default;
        private static bool _VK_UPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_V"/>
        /// </summary>
        public static int VK_V { get { if (!_VK_VReady) { _VK_VContent = SGetField<int>(LocalBridgeClazz, "VK_V"); _VK_VReady = true; } return _VK_VContent; } }
        private static int _VK_VContent = default;
        private static bool _VK_VReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_W"/>
        /// </summary>
        public static int VK_W { get { if (!_VK_WReady) { _VK_WContent = SGetField<int>(LocalBridgeClazz, "VK_W"); _VK_WReady = true; } return _VK_WContent; } }
        private static int _VK_WContent = default;
        private static bool _VK_WReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_WINDOWS"/>
        /// </summary>
        public static int VK_WINDOWS { get { if (!_VK_WINDOWSReady) { _VK_WINDOWSContent = SGetField<int>(LocalBridgeClazz, "VK_WINDOWS"); _VK_WINDOWSReady = true; } return _VK_WINDOWSContent; } }
        private static int _VK_WINDOWSContent = default;
        private static bool _VK_WINDOWSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_X"/>
        /// </summary>
        public static int VK_X { get { if (!_VK_XReady) { _VK_XContent = SGetField<int>(LocalBridgeClazz, "VK_X"); _VK_XReady = true; } return _VK_XContent; } }
        private static int _VK_XContent = default;
        private static bool _VK_XReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_Y"/>
        /// </summary>
        public static int VK_Y { get { if (!_VK_YReady) { _VK_YContent = SGetField<int>(LocalBridgeClazz, "VK_Y"); _VK_YReady = true; } return _VK_YContent; } }
        private static int _VK_YContent = default;
        private static bool _VK_YReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#VK_Z"/>
        /// </summary>
        public static int VK_Z { get { if (!_VK_ZReady) { _VK_ZContent = SGetField<int>(LocalBridgeClazz, "VK_Z"); _VK_ZReady = true; } return _VK_ZContent; } }
        private static int _VK_ZContent = default;
        private static bool _VK_ZReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#getExtendedKeyCodeForChar(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int GetExtendedKeyCodeForChar(int arg0)
        {
            return SExecute<int>(LocalBridgeClazz, "getExtendedKeyCodeForChar", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#getKeyText(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetKeyText(int arg0)
        {
            return SExecute<Java.Lang.String>(LocalBridgeClazz, "getKeyText", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#getExtendedKeyCode()"/> 
        /// </summary>
        public int ExtendedKeyCode
        {
            get { return IExecute<int>("getExtendedKeyCode"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#getKeyChar()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#setKeyChar(char)"/>
        /// </summary>
        public char KeyChar
        {
            get { return IExecute<char>("getKeyChar"); } set { IExecute("setKeyChar", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#getKeyCode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#setKeyCode(int)"/>
        /// </summary>
        public int KeyCode
        {
            get { return IExecute<int>("getKeyCode"); } set { IExecute("setKeyCode", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#getKeyLocation()"/> 
        /// </summary>
        public int KeyLocation
        {
            get { return IExecute<int>("getKeyLocation"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/KeyEvent.html#isActionKey()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsActionKey()
        {
            return IExecute<bool>("isActionKey");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}