/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt.EventNs
{
    #region InputEvent
    public partial class InputEvent
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#ALT_DOWN_MASK
        /// </summary>
        public static int ALT_DOWN_MASK => Clazz.GetField<int>("ALT_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#ALT_GRAPH_DOWN_MASK
        /// </summary>
        public static int ALT_GRAPH_DOWN_MASK => Clazz.GetField<int>("ALT_GRAPH_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#BUTTON1_DOWN_MASK
        /// </summary>
        public static int BUTTON1_DOWN_MASK => Clazz.GetField<int>("BUTTON1_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#BUTTON2_DOWN_MASK
        /// </summary>
        public static int BUTTON2_DOWN_MASK => Clazz.GetField<int>("BUTTON2_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#BUTTON3_DOWN_MASK
        /// </summary>
        public static int BUTTON3_DOWN_MASK => Clazz.GetField<int>("BUTTON3_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#CTRL_DOWN_MASK
        /// </summary>
        public static int CTRL_DOWN_MASK => Clazz.GetField<int>("CTRL_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#META_DOWN_MASK
        /// </summary>
        public static int META_DOWN_MASK => Clazz.GetField<int>("META_DOWN_MASK");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#SHIFT_DOWN_MASK
        /// </summary>
        public static int SHIFT_DOWN_MASK => Clazz.GetField<int>("SHIFT_DOWN_MASK");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#getMaskForButton(int)
        /// </summary>
        public static int GetMaskForButton(int arg0)
        {
            return SExecute<int>("getMaskForButton", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#getModifiersExText(int)
        /// </summary>
        public static string GetModifiersExText(int arg0)
        {
            return SExecute<string>("getModifiersExText", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#getModifiersEx() 
        /// </summary>
        public int ModifiersEx
        {
            get { return IExecute<int>("getModifiersEx"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#getWhen() 
        /// </summary>
        public long When
        {
            get { return IExecute<long>("getWhen"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#isAltDown()
        /// </summary>
        public bool IsAltDown()
        {
            return IExecute<bool>("isAltDown");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#isAltGraphDown()
        /// </summary>
        public bool IsAltGraphDown()
        {
            return IExecute<bool>("isAltGraphDown");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#isConsumed()
        /// </summary>
        public bool IsConsumed()
        {
            return IExecute<bool>("isConsumed");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#isControlDown()
        /// </summary>
        public bool IsControlDown()
        {
            return IExecute<bool>("isControlDown");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#isMetaDown()
        /// </summary>
        public bool IsMetaDown()
        {
            return IExecute<bool>("isMetaDown");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#isShiftDown()
        /// </summary>
        public bool IsShiftDown()
        {
            return IExecute<bool>("isShiftDown");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/event/InputEvent.html#consume()
        /// </summary>
        public void Consume()
        {
            IExecute("consume");
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}