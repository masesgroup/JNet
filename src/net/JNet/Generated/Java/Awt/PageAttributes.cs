/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt
{
    #region PageAttributes
    public partial class PageAttributes
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#%3Cinit%3E(java.awt.PageAttributes)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.PageAttributes"/></param>
        public PageAttributes(Java.Awt.PageAttributes arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#%3Cinit%3E(java.awt.PageAttributes.ColorType,java.awt.PageAttributes.MediaType,java.awt.PageAttributes.OrientationRequestedType,java.awt.PageAttributes.OriginType,java.awt.PageAttributes.PrintQualityType,int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.PageAttributes.ColorType"/></param>
        /// <param name="arg1"><see cref="Java.Awt.PageAttributes.MediaType"/></param>
        /// <param name="arg2"><see cref="Java.Awt.PageAttributes.OrientationRequestedType"/></param>
        /// <param name="arg3"><see cref="Java.Awt.PageAttributes.OriginType"/></param>
        /// <param name="arg4"><see cref="Java.Awt.PageAttributes.PrintQualityType"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        public PageAttributes(Java.Awt.PageAttributes.ColorType arg0, Java.Awt.PageAttributes.MediaType arg1, Java.Awt.PageAttributes.OrientationRequestedType arg2, Java.Awt.PageAttributes.OriginType arg3, Java.Awt.PageAttributes.PrintQualityType arg4, int[] arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#getColor()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setColor(java.awt.PageAttributes.ColorType)"/>
        /// </summary>
        public Java.Awt.PageAttributes.ColorType Color
        {
            get { return IExecuteWithSignature<Java.Awt.PageAttributes.ColorType>("getColor", "()Ljava/awt/PageAttributes$ColorType;"); } set { IExecuteWithSignature("setColor", "(Ljava/awt/PageAttributes$ColorType;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#getMedia()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setMedia(java.awt.PageAttributes.MediaType)"/>
        /// </summary>
        public Java.Awt.PageAttributes.MediaType Media
        {
            get { return IExecuteWithSignature<Java.Awt.PageAttributes.MediaType>("getMedia", "()Ljava/awt/PageAttributes$MediaType;"); } set { IExecuteWithSignature("setMedia", "(Ljava/awt/PageAttributes$MediaType;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#getOrientationRequested()"/> 
        /// </summary>
        public Java.Awt.PageAttributes.OrientationRequestedType OrientationRequested
        {
            get { return IExecuteWithSignature<Java.Awt.PageAttributes.OrientationRequestedType>("getOrientationRequested", "()Ljava/awt/PageAttributes$OrientationRequestedType;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#getOrigin()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setOrigin(java.awt.PageAttributes.OriginType)"/>
        /// </summary>
        public Java.Awt.PageAttributes.OriginType Origin
        {
            get { return IExecuteWithSignature<Java.Awt.PageAttributes.OriginType>("getOrigin", "()Ljava/awt/PageAttributes$OriginType;"); } set { IExecuteWithSignature("setOrigin", "(Ljava/awt/PageAttributes$OriginType;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#getPrinterResolution()"/> 
        /// </summary>
        public int[] PrinterResolution
        {
            get { return IExecuteWithSignatureArray<int>("getPrinterResolution", "()[I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#getPrintQuality()"/> 
        /// </summary>
        public Java.Awt.PageAttributes.PrintQualityType PrintQuality
        {
            get { return IExecuteWithSignature<Java.Awt.PageAttributes.PrintQualityType>("getPrintQuality", "()Ljava/awt/PageAttributes$PrintQualityType;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#set(java.awt.PageAttributes)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.PageAttributes"/></param>
        public void Set(Java.Awt.PageAttributes arg0)
        {
            IExecuteWithSignature("set", "(Ljava/awt/PageAttributes;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setMediaToDefault()"/>
        /// </summary>
        public void SetMediaToDefault()
        {
            IExecuteWithSignature("setMediaToDefault", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setOrientationRequested(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetOrientationRequested(int arg0)
        {
            IExecuteWithSignature("setOrientationRequested", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setOrientationRequested(java.awt.PageAttributes.OrientationRequestedType)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.PageAttributes.OrientationRequestedType"/></param>
        public void SetOrientationRequested(Java.Awt.PageAttributes.OrientationRequestedType arg0)
        {
            IExecuteWithSignature("setOrientationRequested", "(Ljava/awt/PageAttributes$OrientationRequestedType;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setOrientationRequestedToDefault()"/>
        /// </summary>
        public void SetOrientationRequestedToDefault()
        {
            IExecuteWithSignature("setOrientationRequestedToDefault", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setPrinterResolution(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetPrinterResolution(int arg0)
        {
            IExecuteWithSignature("setPrinterResolution", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setPrinterResolution(int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetPrinterResolution(int[] arg0)
        {
            IExecuteWithSignature("setPrinterResolution", "([I)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setPrinterResolutionToDefault()"/>
        /// </summary>
        public void SetPrinterResolutionToDefault()
        {
            IExecuteWithSignature("setPrinterResolutionToDefault", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setPrintQuality(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetPrintQuality(int arg0)
        {
            IExecuteWithSignature("setPrintQuality", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setPrintQuality(java.awt.PageAttributes.PrintQualityType)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.PageAttributes.PrintQualityType"/></param>
        public void SetPrintQuality(Java.Awt.PageAttributes.PrintQualityType arg0)
        {
            IExecuteWithSignature("setPrintQuality", "(Ljava/awt/PageAttributes$PrintQualityType;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.html#setPrintQualityToDefault()"/>
        /// </summary>
        public void SetPrintQualityToDefault()
        {
            IExecuteWithSignature("setPrintQualityToDefault", "()V");
        }

        #endregion

        #region Nested classes
        #region ColorType
        public partial class ColorType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.ColorType.html#COLOR"/>
            /// </summary>
            public static Java.Awt.PageAttributes.ColorType COLOR { get { if (!_COLORReady) { _COLORContent = SGetField<Java.Awt.PageAttributes.ColorType>(LocalBridgeClazz, "COLOR"); _COLORReady = true; } return _COLORContent; } }
            private static Java.Awt.PageAttributes.ColorType _COLORContent = default;
            private static bool _COLORReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.ColorType.html#MONOCHROME"/>
            /// </summary>
            public static Java.Awt.PageAttributes.ColorType MONOCHROME { get { if (!_MONOCHROMEReady) { _MONOCHROMEContent = SGetField<Java.Awt.PageAttributes.ColorType>(LocalBridgeClazz, "MONOCHROME"); _MONOCHROMEReady = true; } return _MONOCHROMEContent; } }
            private static Java.Awt.PageAttributes.ColorType _MONOCHROMEContent = default;
            private static bool _MONOCHROMEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MediaType
        public partial class MediaType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A { get { if (!_AReady) { _AContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A"); _AReady = true; } return _AContent; } }
            private static Java.Awt.PageAttributes.MediaType _AContent = default;
            private static bool _AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A0 { get { if (!_A0Ready) { _A0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A0"); _A0Ready = true; } return _A0Content; } }
            private static Java.Awt.PageAttributes.MediaType _A0Content = default;
            private static bool _A0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A1 { get { if (!_A1Ready) { _A1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A1"); _A1Ready = true; } return _A1Content; } }
            private static Java.Awt.PageAttributes.MediaType _A1Content = default;
            private static bool _A1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A10 { get { if (!_A10Ready) { _A10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A10"); _A10Ready = true; } return _A10Content; } }
            private static Java.Awt.PageAttributes.MediaType _A10Content = default;
            private static bool _A10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A2 { get { if (!_A2Ready) { _A2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A2"); _A2Ready = true; } return _A2Content; } }
            private static Java.Awt.PageAttributes.MediaType _A2Content = default;
            private static bool _A2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A3 { get { if (!_A3Ready) { _A3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A3"); _A3Ready = true; } return _A3Content; } }
            private static Java.Awt.PageAttributes.MediaType _A3Content = default;
            private static bool _A3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A4 { get { if (!_A4Ready) { _A4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A4"); _A4Ready = true; } return _A4Content; } }
            private static Java.Awt.PageAttributes.MediaType _A4Content = default;
            private static bool _A4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A5 { get { if (!_A5Ready) { _A5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A5"); _A5Ready = true; } return _A5Content; } }
            private static Java.Awt.PageAttributes.MediaType _A5Content = default;
            private static bool _A5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A6 { get { if (!_A6Ready) { _A6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A6"); _A6Ready = true; } return _A6Content; } }
            private static Java.Awt.PageAttributes.MediaType _A6Content = default;
            private static bool _A6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A7 { get { if (!_A7Ready) { _A7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A7"); _A7Ready = true; } return _A7Content; } }
            private static Java.Awt.PageAttributes.MediaType _A7Content = default;
            private static bool _A7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A8 { get { if (!_A8Ready) { _A8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A8"); _A8Ready = true; } return _A8Content; } }
            private static Java.Awt.PageAttributes.MediaType _A8Content = default;
            private static bool _A8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#A9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType A9 { get { if (!_A9Ready) { _A9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "A9"); _A9Ready = true; } return _A9Content; } }
            private static Java.Awt.PageAttributes.MediaType _A9Content = default;
            private static bool _A9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B { get { if (!_BReady) { _BContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B"); _BReady = true; } return _BContent; } }
            private static Java.Awt.PageAttributes.MediaType _BContent = default;
            private static bool _BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B0 { get { if (!_B0Ready) { _B0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B0"); _B0Ready = true; } return _B0Content; } }
            private static Java.Awt.PageAttributes.MediaType _B0Content = default;
            private static bool _B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B1 { get { if (!_B1Ready) { _B1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B1"); _B1Ready = true; } return _B1Content; } }
            private static Java.Awt.PageAttributes.MediaType _B1Content = default;
            private static bool _B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B10 { get { if (!_B10Ready) { _B10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B10"); _B10Ready = true; } return _B10Content; } }
            private static Java.Awt.PageAttributes.MediaType _B10Content = default;
            private static bool _B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B2 { get { if (!_B2Ready) { _B2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B2"); _B2Ready = true; } return _B2Content; } }
            private static Java.Awt.PageAttributes.MediaType _B2Content = default;
            private static bool _B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B3 { get { if (!_B3Ready) { _B3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B3"); _B3Ready = true; } return _B3Content; } }
            private static Java.Awt.PageAttributes.MediaType _B3Content = default;
            private static bool _B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B4 { get { if (!_B4Ready) { _B4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B4"); _B4Ready = true; } return _B4Content; } }
            private static Java.Awt.PageAttributes.MediaType _B4Content = default;
            private static bool _B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B5 { get { if (!_B5Ready) { _B5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B5"); _B5Ready = true; } return _B5Content; } }
            private static Java.Awt.PageAttributes.MediaType _B5Content = default;
            private static bool _B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B6 { get { if (!_B6Ready) { _B6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B6"); _B6Ready = true; } return _B6Content; } }
            private static Java.Awt.PageAttributes.MediaType _B6Content = default;
            private static bool _B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B7 { get { if (!_B7Ready) { _B7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B7"); _B7Ready = true; } return _B7Content; } }
            private static Java.Awt.PageAttributes.MediaType _B7Content = default;
            private static bool _B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B8 { get { if (!_B8Ready) { _B8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B8"); _B8Ready = true; } return _B8Content; } }
            private static Java.Awt.PageAttributes.MediaType _B8Content = default;
            private static bool _B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#B9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType B9 { get { if (!_B9Ready) { _B9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "B9"); _B9Ready = true; } return _B9Content; } }
            private static Java.Awt.PageAttributes.MediaType _B9Content = default;
            private static bool _B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C { get { if (!_CReady) { _CContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C"); _CReady = true; } return _CContent; } }
            private static Java.Awt.PageAttributes.MediaType _CContent = default;
            private static bool _CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C0 { get { if (!_C0Ready) { _C0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C0"); _C0Ready = true; } return _C0Content; } }
            private static Java.Awt.PageAttributes.MediaType _C0Content = default;
            private static bool _C0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C1 { get { if (!_C1Ready) { _C1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C1"); _C1Ready = true; } return _C1Content; } }
            private static Java.Awt.PageAttributes.MediaType _C1Content = default;
            private static bool _C1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C10 { get { if (!_C10Ready) { _C10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C10"); _C10Ready = true; } return _C10Content; } }
            private static Java.Awt.PageAttributes.MediaType _C10Content = default;
            private static bool _C10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C2 { get { if (!_C2Ready) { _C2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C2"); _C2Ready = true; } return _C2Content; } }
            private static Java.Awt.PageAttributes.MediaType _C2Content = default;
            private static bool _C2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C3 { get { if (!_C3Ready) { _C3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C3"); _C3Ready = true; } return _C3Content; } }
            private static Java.Awt.PageAttributes.MediaType _C3Content = default;
            private static bool _C3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C4 { get { if (!_C4Ready) { _C4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C4"); _C4Ready = true; } return _C4Content; } }
            private static Java.Awt.PageAttributes.MediaType _C4Content = default;
            private static bool _C4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C5 { get { if (!_C5Ready) { _C5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C5"); _C5Ready = true; } return _C5Content; } }
            private static Java.Awt.PageAttributes.MediaType _C5Content = default;
            private static bool _C5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C6 { get { if (!_C6Ready) { _C6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C6"); _C6Ready = true; } return _C6Content; } }
            private static Java.Awt.PageAttributes.MediaType _C6Content = default;
            private static bool _C6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C7 { get { if (!_C7Ready) { _C7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C7"); _C7Ready = true; } return _C7Content; } }
            private static Java.Awt.PageAttributes.MediaType _C7Content = default;
            private static bool _C7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C8 { get { if (!_C8Ready) { _C8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C8"); _C8Ready = true; } return _C8Content; } }
            private static Java.Awt.PageAttributes.MediaType _C8Content = default;
            private static bool _C8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#C9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType C9 { get { if (!_C9Ready) { _C9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "C9"); _C9Ready = true; } return _C9Content; } }
            private static Java.Awt.PageAttributes.MediaType _C9Content = default;
            private static bool _C9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#D"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType D { get { if (!_DReady) { _DContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "D"); _DReady = true; } return _DContent; } }
            private static Java.Awt.PageAttributes.MediaType _DContent = default;
            private static bool _DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#E"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType E { get { if (!_EReady) { _EContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "E"); _EReady = true; } return _EContent; } }
            private static Java.Awt.PageAttributes.MediaType _EContent = default;
            private static bool _EReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_10 { get { if (!_ENV_10Ready) { _ENV_10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_10"); _ENV_10Ready = true; } return _ENV_10Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_10Content = default;
            private static bool _ENV_10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_10X13"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_10X13 { get { if (!_ENV_10X13Ready) { _ENV_10X13Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_10X13"); _ENV_10X13Ready = true; } return _ENV_10X13Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_10X13Content = default;
            private static bool _ENV_10X13Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_10X14"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_10X14 { get { if (!_ENV_10X14Ready) { _ENV_10X14Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_10X14"); _ENV_10X14Ready = true; } return _ENV_10X14Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_10X14Content = default;
            private static bool _ENV_10X14Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_10X15"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_10X15 { get { if (!_ENV_10X15Ready) { _ENV_10X15Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_10X15"); _ENV_10X15Ready = true; } return _ENV_10X15Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_10X15Content = default;
            private static bool _ENV_10X15Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_11"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_11 { get { if (!_ENV_11Ready) { _ENV_11Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_11"); _ENV_11Ready = true; } return _ENV_11Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_11Content = default;
            private static bool _ENV_11Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_12"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_12 { get { if (!_ENV_12Ready) { _ENV_12Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_12"); _ENV_12Ready = true; } return _ENV_12Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_12Content = default;
            private static bool _ENV_12Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_14"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_14 { get { if (!_ENV_14Ready) { _ENV_14Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_14"); _ENV_14Ready = true; } return _ENV_14Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_14Content = default;
            private static bool _ENV_14Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_6X9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_6X9 { get { if (!_ENV_6X9Ready) { _ENV_6X9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_6X9"); _ENV_6X9Ready = true; } return _ENV_6X9Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_6X9Content = default;
            private static bool _ENV_6X9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_7X9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_7X9 { get { if (!_ENV_7X9Ready) { _ENV_7X9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_7X9"); _ENV_7X9Ready = true; } return _ENV_7X9Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_7X9Content = default;
            private static bool _ENV_7X9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_9 { get { if (!_ENV_9Ready) { _ENV_9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_9"); _ENV_9Ready = true; } return _ENV_9Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_9Content = default;
            private static bool _ENV_9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_9X11"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_9X11 { get { if (!_ENV_9X11Ready) { _ENV_9X11Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_9X11"); _ENV_9X11Ready = true; } return _ENV_9X11Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_9X11Content = default;
            private static bool _ENV_9X11Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_9X12"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_9X12 { get { if (!_ENV_9X12Ready) { _ENV_9X12Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_9X12"); _ENV_9X12Ready = true; } return _ENV_9X12Content; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_9X12Content = default;
            private static bool _ENV_9X12Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_INVITE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_INVITE { get { if (!_ENV_INVITEReady) { _ENV_INVITEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_INVITE"); _ENV_INVITEReady = true; } return _ENV_INVITEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_INVITEContent = default;
            private static bool _ENV_INVITEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_ITALY"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_ITALY { get { if (!_ENV_ITALYReady) { _ENV_ITALYContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_ITALY"); _ENV_ITALYReady = true; } return _ENV_ITALYContent; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_ITALYContent = default;
            private static bool _ENV_ITALYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_MONARCH"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_MONARCH { get { if (!_ENV_MONARCHReady) { _ENV_MONARCHContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_MONARCH"); _ENV_MONARCHReady = true; } return _ENV_MONARCHContent; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_MONARCHContent = default;
            private static bool _ENV_MONARCHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ENV_PERSONAL"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ENV_PERSONAL { get { if (!_ENV_PERSONALReady) { _ENV_PERSONALContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ENV_PERSONAL"); _ENV_PERSONALReady = true; } return _ENV_PERSONALContent; } }
            private static Java.Awt.PageAttributes.MediaType _ENV_PERSONALContent = default;
            private static bool _ENV_PERSONALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#EXECUTIVE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType EXECUTIVE { get { if (!_EXECUTIVEReady) { _EXECUTIVEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "EXECUTIVE"); _EXECUTIVEReady = true; } return _EXECUTIVEContent; } }
            private static Java.Awt.PageAttributes.MediaType _EXECUTIVEContent = default;
            private static bool _EXECUTIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#FOLIO"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType FOLIO { get { if (!_FOLIOReady) { _FOLIOContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "FOLIO"); _FOLIOReady = true; } return _FOLIOContent; } }
            private static Java.Awt.PageAttributes.MediaType _FOLIOContent = default;
            private static bool _FOLIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#INVITE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType INVITE { get { if (!_INVITEReady) { _INVITEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "INVITE"); _INVITEReady = true; } return _INVITEContent; } }
            private static Java.Awt.PageAttributes.MediaType _INVITEContent = default;
            private static bool _INVITEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#INVITE_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType INVITE_ENVELOPE { get { if (!_INVITE_ENVELOPEReady) { _INVITE_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "INVITE_ENVELOPE"); _INVITE_ENVELOPEReady = true; } return _INVITE_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _INVITE_ENVELOPEContent = default;
            private static bool _INVITE_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#INVOICE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType INVOICE { get { if (!_INVOICEReady) { _INVOICEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "INVOICE"); _INVOICEReady = true; } return _INVOICEContent; } }
            private static Java.Awt.PageAttributes.MediaType _INVOICEContent = default;
            private static bool _INVOICEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_2A0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_2A0 { get { if (!_ISO_2A0Ready) { _ISO_2A0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_2A0"); _ISO_2A0Ready = true; } return _ISO_2A0Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_2A0Content = default;
            private static bool _ISO_2A0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_4A0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_4A0 { get { if (!_ISO_4A0Ready) { _ISO_4A0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_4A0"); _ISO_4A0Ready = true; } return _ISO_4A0Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_4A0Content = default;
            private static bool _ISO_4A0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A0 { get { if (!_ISO_A0Ready) { _ISO_A0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A0"); _ISO_A0Ready = true; } return _ISO_A0Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A0Content = default;
            private static bool _ISO_A0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A1 { get { if (!_ISO_A1Ready) { _ISO_A1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A1"); _ISO_A1Ready = true; } return _ISO_A1Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A1Content = default;
            private static bool _ISO_A1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A10 { get { if (!_ISO_A10Ready) { _ISO_A10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A10"); _ISO_A10Ready = true; } return _ISO_A10Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A10Content = default;
            private static bool _ISO_A10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A2 { get { if (!_ISO_A2Ready) { _ISO_A2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A2"); _ISO_A2Ready = true; } return _ISO_A2Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A2Content = default;
            private static bool _ISO_A2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A3 { get { if (!_ISO_A3Ready) { _ISO_A3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A3"); _ISO_A3Ready = true; } return _ISO_A3Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A3Content = default;
            private static bool _ISO_A3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A4 { get { if (!_ISO_A4Ready) { _ISO_A4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A4"); _ISO_A4Ready = true; } return _ISO_A4Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A4Content = default;
            private static bool _ISO_A4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A5 { get { if (!_ISO_A5Ready) { _ISO_A5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A5"); _ISO_A5Ready = true; } return _ISO_A5Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A5Content = default;
            private static bool _ISO_A5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A6 { get { if (!_ISO_A6Ready) { _ISO_A6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A6"); _ISO_A6Ready = true; } return _ISO_A6Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A6Content = default;
            private static bool _ISO_A6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A7 { get { if (!_ISO_A7Ready) { _ISO_A7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A7"); _ISO_A7Ready = true; } return _ISO_A7Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A7Content = default;
            private static bool _ISO_A7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A8 { get { if (!_ISO_A8Ready) { _ISO_A8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A8"); _ISO_A8Ready = true; } return _ISO_A8Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A8Content = default;
            private static bool _ISO_A8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_A9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_A9 { get { if (!_ISO_A9Ready) { _ISO_A9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_A9"); _ISO_A9Ready = true; } return _ISO_A9Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_A9Content = default;
            private static bool _ISO_A9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B0 { get { if (!_ISO_B0Ready) { _ISO_B0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B0"); _ISO_B0Ready = true; } return _ISO_B0Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B0Content = default;
            private static bool _ISO_B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B1 { get { if (!_ISO_B1Ready) { _ISO_B1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B1"); _ISO_B1Ready = true; } return _ISO_B1Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B1Content = default;
            private static bool _ISO_B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B10 { get { if (!_ISO_B10Ready) { _ISO_B10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B10"); _ISO_B10Ready = true; } return _ISO_B10Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B10Content = default;
            private static bool _ISO_B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B2 { get { if (!_ISO_B2Ready) { _ISO_B2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B2"); _ISO_B2Ready = true; } return _ISO_B2Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B2Content = default;
            private static bool _ISO_B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B3 { get { if (!_ISO_B3Ready) { _ISO_B3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B3"); _ISO_B3Ready = true; } return _ISO_B3Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B3Content = default;
            private static bool _ISO_B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B4 { get { if (!_ISO_B4Ready) { _ISO_B4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B4"); _ISO_B4Ready = true; } return _ISO_B4Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B4Content = default;
            private static bool _ISO_B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B4_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B4_ENVELOPE { get { if (!_ISO_B4_ENVELOPEReady) { _ISO_B4_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B4_ENVELOPE"); _ISO_B4_ENVELOPEReady = true; } return _ISO_B4_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B4_ENVELOPEContent = default;
            private static bool _ISO_B4_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B5 { get { if (!_ISO_B5Ready) { _ISO_B5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B5"); _ISO_B5Ready = true; } return _ISO_B5Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B5Content = default;
            private static bool _ISO_B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B5_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B5_ENVELOPE { get { if (!_ISO_B5_ENVELOPEReady) { _ISO_B5_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B5_ENVELOPE"); _ISO_B5_ENVELOPEReady = true; } return _ISO_B5_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B5_ENVELOPEContent = default;
            private static bool _ISO_B5_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B6 { get { if (!_ISO_B6Ready) { _ISO_B6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B6"); _ISO_B6Ready = true; } return _ISO_B6Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B6Content = default;
            private static bool _ISO_B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B7 { get { if (!_ISO_B7Ready) { _ISO_B7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B7"); _ISO_B7Ready = true; } return _ISO_B7Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B7Content = default;
            private static bool _ISO_B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B8 { get { if (!_ISO_B8Ready) { _ISO_B8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B8"); _ISO_B8Ready = true; } return _ISO_B8Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B8Content = default;
            private static bool _ISO_B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_B9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_B9 { get { if (!_ISO_B9Ready) { _ISO_B9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_B9"); _ISO_B9Ready = true; } return _ISO_B9Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_B9Content = default;
            private static bool _ISO_B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C0 { get { if (!_ISO_C0Ready) { _ISO_C0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C0"); _ISO_C0Ready = true; } return _ISO_C0Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C0Content = default;
            private static bool _ISO_C0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C0_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C0_ENVELOPE { get { if (!_ISO_C0_ENVELOPEReady) { _ISO_C0_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C0_ENVELOPE"); _ISO_C0_ENVELOPEReady = true; } return _ISO_C0_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C0_ENVELOPEContent = default;
            private static bool _ISO_C0_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C1 { get { if (!_ISO_C1Ready) { _ISO_C1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C1"); _ISO_C1Ready = true; } return _ISO_C1Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C1Content = default;
            private static bool _ISO_C1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C1_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C1_ENVELOPE { get { if (!_ISO_C1_ENVELOPEReady) { _ISO_C1_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C1_ENVELOPE"); _ISO_C1_ENVELOPEReady = true; } return _ISO_C1_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C1_ENVELOPEContent = default;
            private static bool _ISO_C1_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C10 { get { if (!_ISO_C10Ready) { _ISO_C10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C10"); _ISO_C10Ready = true; } return _ISO_C10Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C10Content = default;
            private static bool _ISO_C10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C10_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C10_ENVELOPE { get { if (!_ISO_C10_ENVELOPEReady) { _ISO_C10_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C10_ENVELOPE"); _ISO_C10_ENVELOPEReady = true; } return _ISO_C10_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C10_ENVELOPEContent = default;
            private static bool _ISO_C10_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C2 { get { if (!_ISO_C2Ready) { _ISO_C2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C2"); _ISO_C2Ready = true; } return _ISO_C2Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C2Content = default;
            private static bool _ISO_C2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C2_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C2_ENVELOPE { get { if (!_ISO_C2_ENVELOPEReady) { _ISO_C2_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C2_ENVELOPE"); _ISO_C2_ENVELOPEReady = true; } return _ISO_C2_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C2_ENVELOPEContent = default;
            private static bool _ISO_C2_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C3 { get { if (!_ISO_C3Ready) { _ISO_C3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C3"); _ISO_C3Ready = true; } return _ISO_C3Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C3Content = default;
            private static bool _ISO_C3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C3_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C3_ENVELOPE { get { if (!_ISO_C3_ENVELOPEReady) { _ISO_C3_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C3_ENVELOPE"); _ISO_C3_ENVELOPEReady = true; } return _ISO_C3_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C3_ENVELOPEContent = default;
            private static bool _ISO_C3_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C4 { get { if (!_ISO_C4Ready) { _ISO_C4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C4"); _ISO_C4Ready = true; } return _ISO_C4Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C4Content = default;
            private static bool _ISO_C4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C4_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C4_ENVELOPE { get { if (!_ISO_C4_ENVELOPEReady) { _ISO_C4_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C4_ENVELOPE"); _ISO_C4_ENVELOPEReady = true; } return _ISO_C4_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C4_ENVELOPEContent = default;
            private static bool _ISO_C4_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C5 { get { if (!_ISO_C5Ready) { _ISO_C5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C5"); _ISO_C5Ready = true; } return _ISO_C5Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C5Content = default;
            private static bool _ISO_C5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C5_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C5_ENVELOPE { get { if (!_ISO_C5_ENVELOPEReady) { _ISO_C5_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C5_ENVELOPE"); _ISO_C5_ENVELOPEReady = true; } return _ISO_C5_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C5_ENVELOPEContent = default;
            private static bool _ISO_C5_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C6 { get { if (!_ISO_C6Ready) { _ISO_C6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C6"); _ISO_C6Ready = true; } return _ISO_C6Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C6Content = default;
            private static bool _ISO_C6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C6_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C6_ENVELOPE { get { if (!_ISO_C6_ENVELOPEReady) { _ISO_C6_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C6_ENVELOPE"); _ISO_C6_ENVELOPEReady = true; } return _ISO_C6_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C6_ENVELOPEContent = default;
            private static bool _ISO_C6_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C7 { get { if (!_ISO_C7Ready) { _ISO_C7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C7"); _ISO_C7Ready = true; } return _ISO_C7Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C7Content = default;
            private static bool _ISO_C7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C7_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C7_ENVELOPE { get { if (!_ISO_C7_ENVELOPEReady) { _ISO_C7_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C7_ENVELOPE"); _ISO_C7_ENVELOPEReady = true; } return _ISO_C7_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C7_ENVELOPEContent = default;
            private static bool _ISO_C7_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C8 { get { if (!_ISO_C8Ready) { _ISO_C8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C8"); _ISO_C8Ready = true; } return _ISO_C8Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C8Content = default;
            private static bool _ISO_C8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C8_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C8_ENVELOPE { get { if (!_ISO_C8_ENVELOPEReady) { _ISO_C8_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C8_ENVELOPE"); _ISO_C8_ENVELOPEReady = true; } return _ISO_C8_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C8_ENVELOPEContent = default;
            private static bool _ISO_C8_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C9 { get { if (!_ISO_C9Ready) { _ISO_C9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C9"); _ISO_C9Ready = true; } return _ISO_C9Content; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C9Content = default;
            private static bool _ISO_C9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_C9_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_C9_ENVELOPE { get { if (!_ISO_C9_ENVELOPEReady) { _ISO_C9_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_C9_ENVELOPE"); _ISO_C9_ENVELOPEReady = true; } return _ISO_C9_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_C9_ENVELOPEContent = default;
            private static bool _ISO_C9_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_DESIGNATED_LONG"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_DESIGNATED_LONG { get { if (!_ISO_DESIGNATED_LONGReady) { _ISO_DESIGNATED_LONGContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_DESIGNATED_LONG"); _ISO_DESIGNATED_LONGReady = true; } return _ISO_DESIGNATED_LONGContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_DESIGNATED_LONGContent = default;
            private static bool _ISO_DESIGNATED_LONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ISO_DESIGNATED_LONG_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ISO_DESIGNATED_LONG_ENVELOPE { get { if (!_ISO_DESIGNATED_LONG_ENVELOPEReady) { _ISO_DESIGNATED_LONG_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ISO_DESIGNATED_LONG_ENVELOPE"); _ISO_DESIGNATED_LONG_ENVELOPEReady = true; } return _ISO_DESIGNATED_LONG_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ISO_DESIGNATED_LONG_ENVELOPEContent = default;
            private static bool _ISO_DESIGNATED_LONG_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ITALY"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ITALY { get { if (!_ITALYReady) { _ITALYContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ITALY"); _ITALYReady = true; } return _ITALYContent; } }
            private static Java.Awt.PageAttributes.MediaType _ITALYContent = default;
            private static bool _ITALYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#ITALY_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType ITALY_ENVELOPE { get { if (!_ITALY_ENVELOPEReady) { _ITALY_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "ITALY_ENVELOPE"); _ITALY_ENVELOPEReady = true; } return _ITALY_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _ITALY_ENVELOPEContent = default;
            private static bool _ITALY_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B0"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B0 { get { if (!_JIS_B0Ready) { _JIS_B0Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B0"); _JIS_B0Ready = true; } return _JIS_B0Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B0Content = default;
            private static bool _JIS_B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B1"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B1 { get { if (!_JIS_B1Ready) { _JIS_B1Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B1"); _JIS_B1Ready = true; } return _JIS_B1Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B1Content = default;
            private static bool _JIS_B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B10"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B10 { get { if (!_JIS_B10Ready) { _JIS_B10Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B10"); _JIS_B10Ready = true; } return _JIS_B10Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B10Content = default;
            private static bool _JIS_B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B2"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B2 { get { if (!_JIS_B2Ready) { _JIS_B2Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B2"); _JIS_B2Ready = true; } return _JIS_B2Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B2Content = default;
            private static bool _JIS_B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B3"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B3 { get { if (!_JIS_B3Ready) { _JIS_B3Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B3"); _JIS_B3Ready = true; } return _JIS_B3Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B3Content = default;
            private static bool _JIS_B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B4"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B4 { get { if (!_JIS_B4Ready) { _JIS_B4Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B4"); _JIS_B4Ready = true; } return _JIS_B4Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B4Content = default;
            private static bool _JIS_B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B5"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B5 { get { if (!_JIS_B5Ready) { _JIS_B5Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B5"); _JIS_B5Ready = true; } return _JIS_B5Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B5Content = default;
            private static bool _JIS_B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B6"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B6 { get { if (!_JIS_B6Ready) { _JIS_B6Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B6"); _JIS_B6Ready = true; } return _JIS_B6Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B6Content = default;
            private static bool _JIS_B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B7"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B7 { get { if (!_JIS_B7Ready) { _JIS_B7Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B7"); _JIS_B7Ready = true; } return _JIS_B7Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B7Content = default;
            private static bool _JIS_B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B8"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B8 { get { if (!_JIS_B8Ready) { _JIS_B8Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B8"); _JIS_B8Ready = true; } return _JIS_B8Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B8Content = default;
            private static bool _JIS_B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#JIS_B9"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType JIS_B9 { get { if (!_JIS_B9Ready) { _JIS_B9Content = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "JIS_B9"); _JIS_B9Ready = true; } return _JIS_B9Content; } }
            private static Java.Awt.PageAttributes.MediaType _JIS_B9Content = default;
            private static bool _JIS_B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#LEDGER"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType LEDGER { get { if (!_LEDGERReady) { _LEDGERContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "LEDGER"); _LEDGERReady = true; } return _LEDGERContent; } }
            private static Java.Awt.PageAttributes.MediaType _LEDGERContent = default;
            private static bool _LEDGERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#LEGAL"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType LEGAL { get { if (!_LEGALReady) { _LEGALContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "LEGAL"); _LEGALReady = true; } return _LEGALContent; } }
            private static Java.Awt.PageAttributes.MediaType _LEGALContent = default;
            private static bool _LEGALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#LETTER"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType LETTER { get { if (!_LETTERReady) { _LETTERContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "LETTER"); _LETTERReady = true; } return _LETTERContent; } }
            private static Java.Awt.PageAttributes.MediaType _LETTERContent = default;
            private static bool _LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#MONARCH"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType MONARCH { get { if (!_MONARCHReady) { _MONARCHContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "MONARCH"); _MONARCHReady = true; } return _MONARCHContent; } }
            private static Java.Awt.PageAttributes.MediaType _MONARCHContent = default;
            private static bool _MONARCHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#MONARCH_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType MONARCH_ENVELOPE { get { if (!_MONARCH_ENVELOPEReady) { _MONARCH_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "MONARCH_ENVELOPE"); _MONARCH_ENVELOPEReady = true; } return _MONARCH_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _MONARCH_ENVELOPEContent = default;
            private static bool _MONARCH_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_10X13_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_10X13_ENVELOPE { get { if (!_NA_10X13_ENVELOPEReady) { _NA_10X13_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_10X13_ENVELOPE"); _NA_10X13_ENVELOPEReady = true; } return _NA_10X13_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_10X13_ENVELOPEContent = default;
            private static bool _NA_10X13_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_10X14_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_10X14_ENVELOPE { get { if (!_NA_10X14_ENVELOPEReady) { _NA_10X14_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_10X14_ENVELOPE"); _NA_10X14_ENVELOPEReady = true; } return _NA_10X14_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_10X14_ENVELOPEContent = default;
            private static bool _NA_10X14_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_10X15_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_10X15_ENVELOPE { get { if (!_NA_10X15_ENVELOPEReady) { _NA_10X15_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_10X15_ENVELOPE"); _NA_10X15_ENVELOPEReady = true; } return _NA_10X15_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_10X15_ENVELOPEContent = default;
            private static bool _NA_10X15_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_6X9_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_6X9_ENVELOPE { get { if (!_NA_6X9_ENVELOPEReady) { _NA_6X9_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_6X9_ENVELOPE"); _NA_6X9_ENVELOPEReady = true; } return _NA_6X9_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_6X9_ENVELOPEContent = default;
            private static bool _NA_6X9_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_7X9_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_7X9_ENVELOPE { get { if (!_NA_7X9_ENVELOPEReady) { _NA_7X9_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_7X9_ENVELOPE"); _NA_7X9_ENVELOPEReady = true; } return _NA_7X9_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_7X9_ENVELOPEContent = default;
            private static bool _NA_7X9_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_9X11_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_9X11_ENVELOPE { get { if (!_NA_9X11_ENVELOPEReady) { _NA_9X11_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_9X11_ENVELOPE"); _NA_9X11_ENVELOPEReady = true; } return _NA_9X11_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_9X11_ENVELOPEContent = default;
            private static bool _NA_9X11_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_9X12_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_9X12_ENVELOPE { get { if (!_NA_9X12_ENVELOPEReady) { _NA_9X12_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_9X12_ENVELOPE"); _NA_9X12_ENVELOPEReady = true; } return _NA_9X12_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_9X12_ENVELOPEContent = default;
            private static bool _NA_9X12_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_LEGAL"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_LEGAL { get { if (!_NA_LEGALReady) { _NA_LEGALContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_LEGAL"); _NA_LEGALReady = true; } return _NA_LEGALContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_LEGALContent = default;
            private static bool _NA_LEGALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_LETTER"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_LETTER { get { if (!_NA_LETTERReady) { _NA_LETTERContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_LETTER"); _NA_LETTERReady = true; } return _NA_LETTERContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_LETTERContent = default;
            private static bool _NA_LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_NUMBER_10_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_NUMBER_10_ENVELOPE { get { if (!_NA_NUMBER_10_ENVELOPEReady) { _NA_NUMBER_10_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_NUMBER_10_ENVELOPE"); _NA_NUMBER_10_ENVELOPEReady = true; } return _NA_NUMBER_10_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_NUMBER_10_ENVELOPEContent = default;
            private static bool _NA_NUMBER_10_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_NUMBER_11_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_NUMBER_11_ENVELOPE { get { if (!_NA_NUMBER_11_ENVELOPEReady) { _NA_NUMBER_11_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_NUMBER_11_ENVELOPE"); _NA_NUMBER_11_ENVELOPEReady = true; } return _NA_NUMBER_11_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_NUMBER_11_ENVELOPEContent = default;
            private static bool _NA_NUMBER_11_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_NUMBER_12_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_NUMBER_12_ENVELOPE { get { if (!_NA_NUMBER_12_ENVELOPEReady) { _NA_NUMBER_12_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_NUMBER_12_ENVELOPE"); _NA_NUMBER_12_ENVELOPEReady = true; } return _NA_NUMBER_12_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_NUMBER_12_ENVELOPEContent = default;
            private static bool _NA_NUMBER_12_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_NUMBER_14_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_NUMBER_14_ENVELOPE { get { if (!_NA_NUMBER_14_ENVELOPEReady) { _NA_NUMBER_14_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_NUMBER_14_ENVELOPE"); _NA_NUMBER_14_ENVELOPEReady = true; } return _NA_NUMBER_14_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_NUMBER_14_ENVELOPEContent = default;
            private static bool _NA_NUMBER_14_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NA_NUMBER_9_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NA_NUMBER_9_ENVELOPE { get { if (!_NA_NUMBER_9_ENVELOPEReady) { _NA_NUMBER_9_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NA_NUMBER_9_ENVELOPE"); _NA_NUMBER_9_ENVELOPEReady = true; } return _NA_NUMBER_9_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NA_NUMBER_9_ENVELOPEContent = default;
            private static bool _NA_NUMBER_9_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#NOTE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType NOTE { get { if (!_NOTEReady) { _NOTEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "NOTE"); _NOTEReady = true; } return _NOTEContent; } }
            private static Java.Awt.PageAttributes.MediaType _NOTEContent = default;
            private static bool _NOTEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#PERSONAL"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType PERSONAL { get { if (!_PERSONALReady) { _PERSONALContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "PERSONAL"); _PERSONALReady = true; } return _PERSONALContent; } }
            private static Java.Awt.PageAttributes.MediaType _PERSONALContent = default;
            private static bool _PERSONALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#PERSONAL_ENVELOPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType PERSONAL_ENVELOPE { get { if (!_PERSONAL_ENVELOPEReady) { _PERSONAL_ENVELOPEContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "PERSONAL_ENVELOPE"); _PERSONAL_ENVELOPEReady = true; } return _PERSONAL_ENVELOPEContent; } }
            private static Java.Awt.PageAttributes.MediaType _PERSONAL_ENVELOPEContent = default;
            private static bool _PERSONAL_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#QUARTO"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType QUARTO { get { if (!_QUARTOReady) { _QUARTOContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "QUARTO"); _QUARTOReady = true; } return _QUARTOContent; } }
            private static Java.Awt.PageAttributes.MediaType _QUARTOContent = default;
            private static bool _QUARTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#STATEMENT"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType STATEMENT { get { if (!_STATEMENTReady) { _STATEMENTContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "STATEMENT"); _STATEMENTReady = true; } return _STATEMENTContent; } }
            private static Java.Awt.PageAttributes.MediaType _STATEMENTContent = default;
            private static bool _STATEMENTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.MediaType.html#TABLOID"/>
            /// </summary>
            public static Java.Awt.PageAttributes.MediaType TABLOID { get { if (!_TABLOIDReady) { _TABLOIDContent = SGetField<Java.Awt.PageAttributes.MediaType>(LocalBridgeClazz, "TABLOID"); _TABLOIDReady = true; } return _TABLOIDContent; } }
            private static Java.Awt.PageAttributes.MediaType _TABLOIDContent = default;
            private static bool _TABLOIDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OrientationRequestedType
        public partial class OrientationRequestedType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.OrientationRequestedType.html#LANDSCAPE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.OrientationRequestedType LANDSCAPE { get { if (!_LANDSCAPEReady) { _LANDSCAPEContent = SGetField<Java.Awt.PageAttributes.OrientationRequestedType>(LocalBridgeClazz, "LANDSCAPE"); _LANDSCAPEReady = true; } return _LANDSCAPEContent; } }
            private static Java.Awt.PageAttributes.OrientationRequestedType _LANDSCAPEContent = default;
            private static bool _LANDSCAPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.OrientationRequestedType.html#PORTRAIT"/>
            /// </summary>
            public static Java.Awt.PageAttributes.OrientationRequestedType PORTRAIT { get { if (!_PORTRAITReady) { _PORTRAITContent = SGetField<Java.Awt.PageAttributes.OrientationRequestedType>(LocalBridgeClazz, "PORTRAIT"); _PORTRAITReady = true; } return _PORTRAITContent; } }
            private static Java.Awt.PageAttributes.OrientationRequestedType _PORTRAITContent = default;
            private static bool _PORTRAITReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region OriginType
        public partial class OriginType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.OriginType.html#PHYSICAL"/>
            /// </summary>
            public static Java.Awt.PageAttributes.OriginType PHYSICAL { get { if (!_PHYSICALReady) { _PHYSICALContent = SGetField<Java.Awt.PageAttributes.OriginType>(LocalBridgeClazz, "PHYSICAL"); _PHYSICALReady = true; } return _PHYSICALContent; } }
            private static Java.Awt.PageAttributes.OriginType _PHYSICALContent = default;
            private static bool _PHYSICALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.OriginType.html#PRINTABLE"/>
            /// </summary>
            public static Java.Awt.PageAttributes.OriginType PRINTABLE { get { if (!_PRINTABLEReady) { _PRINTABLEContent = SGetField<Java.Awt.PageAttributes.OriginType>(LocalBridgeClazz, "PRINTABLE"); _PRINTABLEReady = true; } return _PRINTABLEContent; } }
            private static Java.Awt.PageAttributes.OriginType _PRINTABLEContent = default;
            private static bool _PRINTABLEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PrintQualityType
        public partial class PrintQualityType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.PrintQualityType.html#DRAFT"/>
            /// </summary>
            public static Java.Awt.PageAttributes.PrintQualityType DRAFT { get { if (!_DRAFTReady) { _DRAFTContent = SGetField<Java.Awt.PageAttributes.PrintQualityType>(LocalBridgeClazz, "DRAFT"); _DRAFTReady = true; } return _DRAFTContent; } }
            private static Java.Awt.PageAttributes.PrintQualityType _DRAFTContent = default;
            private static bool _DRAFTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.PrintQualityType.html#HIGH"/>
            /// </summary>
            public static Java.Awt.PageAttributes.PrintQualityType HIGH { get { if (!_HIGHReady) { _HIGHContent = SGetField<Java.Awt.PageAttributes.PrintQualityType>(LocalBridgeClazz, "HIGH"); _HIGHReady = true; } return _HIGHContent; } }
            private static Java.Awt.PageAttributes.PrintQualityType _HIGHContent = default;
            private static bool _HIGHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/PageAttributes.PrintQualityType.html#NORMAL"/>
            /// </summary>
            public static Java.Awt.PageAttributes.PrintQualityType NORMAL { get { if (!_NORMALReady) { _NORMALContent = SGetField<Java.Awt.PageAttributes.PrintQualityType>(LocalBridgeClazz, "NORMAL"); _NORMALReady = true; } return _NORMALContent; } }
            private static Java.Awt.PageAttributes.PrintQualityType _NORMALContent = default;
            private static bool _NORMALReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}