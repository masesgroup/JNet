/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt
{
    #region Font
    public partial class Font
    {
        #region Constructors
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#<init>(java.lang.String,int,int)
        /// </summary>
        public Font(string arg0, int arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        
        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Io.Serializable(Java.Awt.Font t) => t.Cast<Java.Io.Serializable>();
        
        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#BOLD
        /// </summary>
        public static int BOLD => Clazz.GetField<int>("BOLD");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#CENTER_BASELINE
        /// </summary>
        public static int CENTER_BASELINE => Clazz.GetField<int>("CENTER_BASELINE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#HANGING_BASELINE
        /// </summary>
        public static int HANGING_BASELINE => Clazz.GetField<int>("HANGING_BASELINE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#ITALIC
        /// </summary>
        public static int ITALIC => Clazz.GetField<int>("ITALIC");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#LAYOUT_LEFT_TO_RIGHT
        /// </summary>
        public static int LAYOUT_LEFT_TO_RIGHT => Clazz.GetField<int>("LAYOUT_LEFT_TO_RIGHT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#LAYOUT_NO_LIMIT_CONTEXT
        /// </summary>
        public static int LAYOUT_NO_LIMIT_CONTEXT => Clazz.GetField<int>("LAYOUT_NO_LIMIT_CONTEXT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#LAYOUT_NO_START_CONTEXT
        /// </summary>
        public static int LAYOUT_NO_START_CONTEXT => Clazz.GetField<int>("LAYOUT_NO_START_CONTEXT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#LAYOUT_RIGHT_TO_LEFT
        /// </summary>
        public static int LAYOUT_RIGHT_TO_LEFT => Clazz.GetField<int>("LAYOUT_RIGHT_TO_LEFT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#PLAIN
        /// </summary>
        public static int PLAIN => Clazz.GetField<int>("PLAIN");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#ROMAN_BASELINE
        /// </summary>
        public static int ROMAN_BASELINE => Clazz.GetField<int>("ROMAN_BASELINE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#TRUETYPE_FONT
        /// </summary>
        public static int TRUETYPE_FONT => Clazz.GetField<int>("TRUETYPE_FONT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#TYPE1_FONT
        /// </summary>
        public static int TYPE1_FONT => Clazz.GetField<int>("TYPE1_FONT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#DIALOG
        /// </summary>
        public static string DIALOG => Clazz.GetField<string>("DIALOG");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#DIALOG_INPUT
        /// </summary>
        public static string DIALOG_INPUT => Clazz.GetField<string>("DIALOG_INPUT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#MONOSPACED
        /// </summary>
        public static string MONOSPACED => Clazz.GetField<string>("MONOSPACED");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#SANS_SERIF
        /// </summary>
        public static string SANS_SERIF => Clazz.GetField<string>("SANS_SERIF");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#SERIF
        /// </summary>
        public static string SERIF => Clazz.GetField<string>("SERIF");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#textRequiresLayout(char[],int,int)
        /// </summary>
        public static bool TextRequiresLayout(char[] arg0, int arg1, int arg2)
        {
            return SExecute<bool>("textRequiresLayout", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createFont(int,java.io.File) throws java.awt.FontFormatException,java.io.IOException
        /// </summary>
        public static Java.Awt.Font CreateFont(int arg0, Java.Io.File arg1)
        {
            return SExecute<Java.Awt.Font>("createFont", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createFont(int,java.io.InputStream) throws java.awt.FontFormatException,java.io.IOException
        /// </summary>
        public static Java.Awt.Font CreateFont(int arg0, Java.Io.InputStream arg1)
        {
            return SExecute<Java.Awt.Font>("createFont", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#decode(java.lang.String)
        /// </summary>
        public static Java.Awt.Font Decode(string arg0)
        {
            return SExecute<Java.Awt.Font>("decode", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getFont(java.lang.String,java.awt.Font)
        /// </summary>
        public static Java.Awt.Font GetFont(string arg0, Java.Awt.Font arg1)
        {
            return SExecute<Java.Awt.Font>("getFont", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getFont(java.lang.String)
        /// </summary>
        public static Java.Awt.Font GetFont(string arg0)
        {
            return SExecute<Java.Awt.Font>("getFont", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createFonts(java.io.File) throws java.awt.FontFormatException,java.io.IOException
        /// </summary>
        public static Java.Awt.Font[] CreateFonts(Java.Io.File arg0)
        {
            return SExecuteArray<Java.Awt.Font>("createFonts", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createFonts(java.io.InputStream) throws java.awt.FontFormatException,java.io.IOException
        /// </summary>
        public static Java.Awt.Font[] CreateFonts(Java.Io.InputStream arg0)
        {
            return SExecuteArray<Java.Awt.Font>("createFonts", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getAvailableAttributes() 
        /// </summary>
        public Java.Text.AttributedCharacterIterator.Attribute[] AvailableAttributes
        {
            get { return IExecuteArray<Java.Text.AttributedCharacterIterator.Attribute>("getAvailableAttributes"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getFamily() 
        /// </summary>
        public string Family
        {
            get { return IExecute<string>("getFamily"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getFontName() 
        /// </summary>
        public string FontName
        {
            get { return IExecute<string>("getFontName"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getItalicAngle() 
        /// </summary>
        public float ItalicAngle
        {
            get { return IExecute<float>("getItalicAngle"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getMissingGlyphCode() 
        /// </summary>
        public int MissingGlyphCode
        {
            get { return IExecute<int>("getMissingGlyphCode"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getName() 
        /// </summary>
        public string Name
        {
            get { return IExecute<string>("getName"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getNumGlyphs() 
        /// </summary>
        public int NumGlyphs
        {
            get { return IExecute<int>("getNumGlyphs"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getPSName() 
        /// </summary>
        public string PSName
        {
            get { return IExecute<string>("getPSName"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getSize() 
        /// </summary>
        public int Size
        {
            get { return IExecute<int>("getSize"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getSize2D() 
        /// </summary>
        public float Size2D
        {
            get { return IExecute<float>("getSize2D"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getStyle() 
        /// </summary>
        public int Style
        {
            get { return IExecute<int>("getStyle"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getTransform() 
        /// </summary>
        public Java.Awt.Geom.AffineTransform Transform
        {
            get { return IExecute<Java.Awt.Geom.AffineTransform>("getTransform"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#canDisplay(char)
        /// </summary>
        public bool CanDisplay(char arg0)
        {
            return IExecute<bool>("canDisplay", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#canDisplay(int)
        /// </summary>
        public bool CanDisplay(int arg0)
        {
            return IExecute<bool>("canDisplay", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#hasLayoutAttributes()
        /// </summary>
        public bool HasLayoutAttributes()
        {
            return IExecute<bool>("hasLayoutAttributes");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#hasUniformLineMetrics()
        /// </summary>
        public bool HasUniformLineMetrics()
        {
            return IExecute<bool>("hasUniformLineMetrics");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#isBold()
        /// </summary>
        public bool IsBold()
        {
            return IExecute<bool>("isBold");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#isItalic()
        /// </summary>
        public bool IsItalic()
        {
            return IExecute<bool>("isItalic");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#isPlain()
        /// </summary>
        public bool IsPlain()
        {
            return IExecute<bool>("isPlain");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#isTransformed()
        /// </summary>
        public bool IsTransformed()
        {
            return IExecute<bool>("isTransformed");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getBaselineFor(char)
        /// </summary>
        public byte GetBaselineFor(char arg0)
        {
            return IExecute<byte>("getBaselineFor", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#canDisplayUpTo(char[],int,int)
        /// </summary>
        public int CanDisplayUpTo(char[] arg0, int arg1, int arg2)
        {
            return IExecute<int>("canDisplayUpTo", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#canDisplayUpTo(java.lang.String)
        /// </summary>
        public int CanDisplayUpTo(string arg0)
        {
            return IExecute<int>("canDisplayUpTo", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#canDisplayUpTo(java.text.CharacterIterator,int,int)
        /// </summary>
        public int CanDisplayUpTo(Java.Text.CharacterIterator arg0, int arg1, int arg2)
        {
            return IExecute<int>("canDisplayUpTo", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#deriveFont(float)
        /// </summary>
        public Java.Awt.Font DeriveFont(float arg0)
        {
            return IExecute<Java.Awt.Font>("deriveFont", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#deriveFont(int,float)
        /// </summary>
        public Java.Awt.Font DeriveFont(int arg0, float arg1)
        {
            return IExecute<Java.Awt.Font>("deriveFont", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#deriveFont(int,java.awt.geom.AffineTransform)
        /// </summary>
        public Java.Awt.Font DeriveFont(int arg0, Java.Awt.Geom.AffineTransform arg1)
        {
            return IExecute<Java.Awt.Font>("deriveFont", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#deriveFont(int)
        /// </summary>
        public Java.Awt.Font DeriveFont(int arg0)
        {
            return IExecute<Java.Awt.Font>("deriveFont", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#deriveFont(java.awt.geom.AffineTransform)
        /// </summary>
        public Java.Awt.Font DeriveFont(Java.Awt.Geom.AffineTransform arg0)
        {
            return IExecute<Java.Awt.Font>("deriveFont", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createGlyphVector(java.awt.font.FontRenderContext,char[])
        /// </summary>
        public Java.Awt.FontNs.GlyphVector CreateGlyphVector(Java.Awt.FontNs.FontRenderContext arg0, char[] arg1)
        {
            return IExecute<Java.Awt.FontNs.GlyphVector>("createGlyphVector", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createGlyphVector(java.awt.font.FontRenderContext,int[])
        /// </summary>
        public Java.Awt.FontNs.GlyphVector CreateGlyphVector(Java.Awt.FontNs.FontRenderContext arg0, int[] arg1)
        {
            return IExecute<Java.Awt.FontNs.GlyphVector>("createGlyphVector", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
        /// </summary>
        public Java.Awt.FontNs.GlyphVector CreateGlyphVector(Java.Awt.FontNs.FontRenderContext arg0, string arg1)
        {
            return IExecute<Java.Awt.FontNs.GlyphVector>("createGlyphVector", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)
        /// </summary>
        public Java.Awt.FontNs.GlyphVector CreateGlyphVector(Java.Awt.FontNs.FontRenderContext arg0, Java.Text.CharacterIterator arg1)
        {
            return IExecute<Java.Awt.FontNs.GlyphVector>("createGlyphVector", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)
        /// </summary>
        public Java.Awt.FontNs.GlyphVector LayoutGlyphVector(Java.Awt.FontNs.FontRenderContext arg0, char[] arg1, int arg2, int arg3, int arg4)
        {
            return IExecute<Java.Awt.FontNs.GlyphVector>("layoutGlyphVector", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getLineMetrics(char[],int,int,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.FontNs.LineMetrics GetLineMetrics(char[] arg0, int arg1, int arg2, Java.Awt.FontNs.FontRenderContext arg3)
        {
            return IExecute<Java.Awt.FontNs.LineMetrics>("getLineMetrics", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getLineMetrics(java.lang.String,int,int,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.FontNs.LineMetrics GetLineMetrics(string arg0, int arg1, int arg2, Java.Awt.FontNs.FontRenderContext arg3)
        {
            return IExecute<Java.Awt.FontNs.LineMetrics>("getLineMetrics", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.FontNs.LineMetrics GetLineMetrics(string arg0, Java.Awt.FontNs.FontRenderContext arg1)
        {
            return IExecute<Java.Awt.FontNs.LineMetrics>("getLineMetrics", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.FontNs.LineMetrics GetLineMetrics(Java.Text.CharacterIterator arg0, int arg1, int arg2, Java.Awt.FontNs.FontRenderContext arg3)
        {
            return IExecute<Java.Awt.FontNs.LineMetrics>("getLineMetrics", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getMaxCharBounds(java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.Geom.Rectangle2D GetMaxCharBounds(Java.Awt.FontNs.FontRenderContext arg0)
        {
            return IExecute<Java.Awt.Geom.Rectangle2D>("getMaxCharBounds", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getStringBounds(char[],int,int,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.Geom.Rectangle2D GetStringBounds(char[] arg0, int arg1, int arg2, Java.Awt.FontNs.FontRenderContext arg3)
        {
            return IExecute<Java.Awt.Geom.Rectangle2D>("getStringBounds", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getStringBounds(java.lang.String,int,int,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.Geom.Rectangle2D GetStringBounds(string arg0, int arg1, int arg2, Java.Awt.FontNs.FontRenderContext arg3)
        {
            return IExecute<Java.Awt.Geom.Rectangle2D>("getStringBounds", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.Geom.Rectangle2D GetStringBounds(string arg0, Java.Awt.FontNs.FontRenderContext arg1)
        {
            return IExecute<Java.Awt.Geom.Rectangle2D>("getStringBounds", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getStringBounds(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)
        /// </summary>
        public Java.Awt.Geom.Rectangle2D GetStringBounds(Java.Text.CharacterIterator arg0, int arg1, int arg2, Java.Awt.FontNs.FontRenderContext arg3)
        {
            return IExecute<Java.Awt.Geom.Rectangle2D>("getStringBounds", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getFamily(java.util.Locale)
        /// </summary>
        public string GetFamily(Java.Util.Locale arg0)
        {
            return IExecute<string>("getFamily", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Font.html#getFontName(java.util.Locale)
        /// </summary>
        public string GetFontName(Java.Util.Locale arg0)
        {
            return IExecute<string>("getFontName", arg0);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}