/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt
{
    #region MediaTracker
    public partial class MediaTracker
    {
        #region Constructors
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#<init>(java.awt.Component)
        /// </summary>
        public MediaTracker(Java.Awt.Component arg0)
            : base(arg0)
        {
        }
        
        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Io.Serializable(Java.Awt.MediaTracker t) => t.Cast<Java.Io.Serializable>();
        
        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#ABORTED
        /// </summary>
        public static int ABORTED => Clazz.GetField<int>("ABORTED");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#COMPLETE
        /// </summary>
        public static int COMPLETE => Clazz.GetField<int>("COMPLETE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#ERRORED
        /// </summary>
        public static int ERRORED => Clazz.GetField<int>("ERRORED");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#LOADING
        /// </summary>
        public static int LOADING => Clazz.GetField<int>("LOADING");
        
        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#getErrorsAny() 
        /// </summary>
        public object[] ErrorsAny
        {
            get { return IExecuteArray<object>("getErrorsAny"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#checkAll()
        /// </summary>
        public bool CheckAll()
        {
            return IExecute<bool>("checkAll");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#checkAll(boolean)
        /// </summary>
        public bool CheckAll(bool arg0)
        {
            return IExecute<bool>("checkAll", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#checkID(int,boolean)
        /// </summary>
        public bool CheckID(int arg0, bool arg1)
        {
            return IExecute<bool>("checkID", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#checkID(int)
        /// </summary>
        public bool CheckID(int arg0)
        {
            return IExecute<bool>("checkID", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#statusAll(boolean)
        /// </summary>
        public int StatusAll(bool arg0)
        {
            return IExecute<int>("statusAll", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)
        /// </summary>
        public int StatusID(int arg0, bool arg1)
        {
            return IExecute<int>("statusID", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()
        /// </summary>
        public bool IsErrorAny()
        {
            return IExecute<bool>("isErrorAny");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)
        /// </summary>
        public bool IsErrorID(int arg0)
        {
            return IExecute<bool>("isErrorID", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#waitForAll(long) throws java.lang.InterruptedException
        /// </summary>
        public bool WaitForAll(long arg0)
        {
            return IExecute<bool>("waitForAll", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#waitForID(int,long) throws java.lang.InterruptedException
        /// </summary>
        public bool WaitForID(int arg0, long arg1)
        {
            return IExecute<bool>("waitForID", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#getErrorsID(int)
        /// </summary>
        public object[] GetErrorsID(int arg0)
        {
            return IExecuteArray<object>("getErrorsID", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#addImage(java.awt.Image,int,int,int)
        /// </summary>
        public void AddImage(Java.Awt.Image arg0, int arg1, int arg2, int arg3)
        {
            IExecute("addImage", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image,int,int,int)
        /// </summary>
        public void RemoveImage(Java.Awt.Image arg0, int arg1, int arg2, int arg3)
        {
            IExecute("removeImage", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image,int)
        /// </summary>
        public void RemoveImage(Java.Awt.Image arg0, int arg1)
        {
            IExecute("removeImage", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image)
        /// </summary>
        public void RemoveImage(Java.Awt.Image arg0)
        {
            IExecute("removeImage", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#addImage(java.awt.Image,int)
        /// </summary>
        public void AddImage(Java.Awt.Image arg0, int arg1)
        {
            IExecute("addImage", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#waitForAll() throws java.lang.InterruptedException
        /// </summary>
        public void WaitForAll()
        {
            IExecute("waitForAll");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/MediaTracker.html#waitForID(int) throws java.lang.InterruptedException
        /// </summary>
        public void WaitForID(int arg0)
        {
            IExecute("waitForID", arg0);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}