/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt.Datatransfer
{
    #region SystemFlavorMap
    public partial class SystemFlavorMap
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Awt.Datatransfer.FlavorMap(Java.Awt.Datatransfer.SystemFlavorMap t) => t.Cast<Java.Awt.Datatransfer.FlavorMap>();
        public static implicit operator Java.Awt.Datatransfer.FlavorTable(Java.Awt.Datatransfer.SystemFlavorMap t) => t.Cast<Java.Awt.Datatransfer.FlavorTable>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#getDefaultFlavorMap() 
        /// </summary>
        public static Java.Awt.Datatransfer.FlavorMap DefaultFlavorMap
        {
            get { return SExecute<Java.Awt.Datatransfer.FlavorMap>("getDefaultFlavorMap"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#isJavaMIMEType(java.lang.String)
        /// </summary>
        public static bool IsJavaMIMEType(string arg0)
        {
            return SExecute<bool>("isJavaMIMEType", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#decodeDataFlavor(java.lang.String) throws java.lang.ClassNotFoundException
        /// </summary>
        public static Java.Awt.Datatransfer.DataFlavor DecodeDataFlavor(string arg0)
        {
            return SExecute<Java.Awt.Datatransfer.DataFlavor>("decodeDataFlavor", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#decodeJavaMIMEType(java.lang.String)
        /// </summary>
        public static string DecodeJavaMIMEType(string arg0)
        {
            return SExecute<string>("decodeJavaMIMEType", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#encodeDataFlavor(java.awt.datatransfer.DataFlavor)
        /// </summary>
        public static string EncodeDataFlavor(Java.Awt.Datatransfer.DataFlavor arg0)
        {
            return SExecute<string>("encodeDataFlavor", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#encodeJavaMIMEType(java.lang.String)
        /// </summary>
        public static string EncodeJavaMIMEType(string arg0)
        {
            return SExecute<string>("encodeJavaMIMEType", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#addFlavorForUnencodedNative(java.lang.String,java.awt.datatransfer.DataFlavor)
        /// </summary>
        public void AddFlavorForUnencodedNative(string arg0, Java.Awt.Datatransfer.DataFlavor arg1)
        {
            IExecute("addFlavorForUnencodedNative", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#addUnencodedNativeForFlavor(java.awt.datatransfer.DataFlavor,java.lang.String)
        /// </summary>
        public void AddUnencodedNativeForFlavor(Java.Awt.Datatransfer.DataFlavor arg0, string arg1)
        {
            IExecute("addUnencodedNativeForFlavor", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#setFlavorsForNative(java.lang.String,java.awt.datatransfer.DataFlavor[])
        /// </summary>
        public void SetFlavorsForNative(string arg0, Java.Awt.Datatransfer.DataFlavor[] arg1)
        {
            IExecute("setFlavorsForNative", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.datatransfer/java/awt/datatransfer/SystemFlavorMap.html#setNativesForFlavor(java.awt.datatransfer.DataFlavor,java.lang.String[])
        /// </summary>
        public void SetNativesForFlavor(Java.Awt.Datatransfer.DataFlavor arg0, string[] arg1)
        {
            IExecute("setNativesForFlavor", arg0, arg1);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}