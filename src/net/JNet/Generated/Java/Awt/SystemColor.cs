/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.9.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt
{
    #region SystemColor declaration
    /// <summary>
    /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html"/>
    /// </summary>
    public partial class SystemColor : Java.Awt.Color
    {
        const string _bridgeClassName = "java.awt.SystemColor";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SystemColor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SystemColor(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region SystemColor implementation
    public partial class SystemColor
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#ACTIVE_CAPTION"/>
        /// </summary>
        public static int ACTIVE_CAPTION { get { if (!_ACTIVE_CAPTIONReady) { _ACTIVE_CAPTIONContent = SGetField<int>(LocalBridgeClazz, "ACTIVE_CAPTION"); _ACTIVE_CAPTIONReady = true; } return _ACTIVE_CAPTIONContent; } }
        private static int _ACTIVE_CAPTIONContent = default;
        private static bool _ACTIVE_CAPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#ACTIVE_CAPTION_BORDER"/>
        /// </summary>
        public static int ACTIVE_CAPTION_BORDER { get { if (!_ACTIVE_CAPTION_BORDERReady) { _ACTIVE_CAPTION_BORDERContent = SGetField<int>(LocalBridgeClazz, "ACTIVE_CAPTION_BORDER"); _ACTIVE_CAPTION_BORDERReady = true; } return _ACTIVE_CAPTION_BORDERContent; } }
        private static int _ACTIVE_CAPTION_BORDERContent = default;
        private static bool _ACTIVE_CAPTION_BORDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#ACTIVE_CAPTION_TEXT"/>
        /// </summary>
        public static int ACTIVE_CAPTION_TEXT { get { if (!_ACTIVE_CAPTION_TEXTReady) { _ACTIVE_CAPTION_TEXTContent = SGetField<int>(LocalBridgeClazz, "ACTIVE_CAPTION_TEXT"); _ACTIVE_CAPTION_TEXTReady = true; } return _ACTIVE_CAPTION_TEXTContent; } }
        private static int _ACTIVE_CAPTION_TEXTContent = default;
        private static bool _ACTIVE_CAPTION_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#CONTROL"/>
        /// </summary>
        public static int CONTROL { get { if (!_CONTROLReady) { _CONTROLContent = SGetField<int>(LocalBridgeClazz, "CONTROL"); _CONTROLReady = true; } return _CONTROLContent; } }
        private static int _CONTROLContent = default;
        private static bool _CONTROLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#CONTROL_DK_SHADOW"/>
        /// </summary>
        public static int CONTROL_DK_SHADOW { get { if (!_CONTROL_DK_SHADOWReady) { _CONTROL_DK_SHADOWContent = SGetField<int>(LocalBridgeClazz, "CONTROL_DK_SHADOW"); _CONTROL_DK_SHADOWReady = true; } return _CONTROL_DK_SHADOWContent; } }
        private static int _CONTROL_DK_SHADOWContent = default;
        private static bool _CONTROL_DK_SHADOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#CONTROL_HIGHLIGHT"/>
        /// </summary>
        public static int CONTROL_HIGHLIGHT { get { if (!_CONTROL_HIGHLIGHTReady) { _CONTROL_HIGHLIGHTContent = SGetField<int>(LocalBridgeClazz, "CONTROL_HIGHLIGHT"); _CONTROL_HIGHLIGHTReady = true; } return _CONTROL_HIGHLIGHTContent; } }
        private static int _CONTROL_HIGHLIGHTContent = default;
        private static bool _CONTROL_HIGHLIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#CONTROL_LT_HIGHLIGHT"/>
        /// </summary>
        public static int CONTROL_LT_HIGHLIGHT { get { if (!_CONTROL_LT_HIGHLIGHTReady) { _CONTROL_LT_HIGHLIGHTContent = SGetField<int>(LocalBridgeClazz, "CONTROL_LT_HIGHLIGHT"); _CONTROL_LT_HIGHLIGHTReady = true; } return _CONTROL_LT_HIGHLIGHTContent; } }
        private static int _CONTROL_LT_HIGHLIGHTContent = default;
        private static bool _CONTROL_LT_HIGHLIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#CONTROL_SHADOW"/>
        /// </summary>
        public static int CONTROL_SHADOW { get { if (!_CONTROL_SHADOWReady) { _CONTROL_SHADOWContent = SGetField<int>(LocalBridgeClazz, "CONTROL_SHADOW"); _CONTROL_SHADOWReady = true; } return _CONTROL_SHADOWContent; } }
        private static int _CONTROL_SHADOWContent = default;
        private static bool _CONTROL_SHADOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#CONTROL_TEXT"/>
        /// </summary>
        public static int CONTROL_TEXT { get { if (!_CONTROL_TEXTReady) { _CONTROL_TEXTContent = SGetField<int>(LocalBridgeClazz, "CONTROL_TEXT"); _CONTROL_TEXTReady = true; } return _CONTROL_TEXTContent; } }
        private static int _CONTROL_TEXTContent = default;
        private static bool _CONTROL_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#DESKTOP"/>
        /// </summary>
        public static int DESKTOP { get { if (!_DESKTOPReady) { _DESKTOPContent = SGetField<int>(LocalBridgeClazz, "DESKTOP"); _DESKTOPReady = true; } return _DESKTOPContent; } }
        private static int _DESKTOPContent = default;
        private static bool _DESKTOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#INACTIVE_CAPTION"/>
        /// </summary>
        public static int INACTIVE_CAPTION { get { if (!_INACTIVE_CAPTIONReady) { _INACTIVE_CAPTIONContent = SGetField<int>(LocalBridgeClazz, "INACTIVE_CAPTION"); _INACTIVE_CAPTIONReady = true; } return _INACTIVE_CAPTIONContent; } }
        private static int _INACTIVE_CAPTIONContent = default;
        private static bool _INACTIVE_CAPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#INACTIVE_CAPTION_BORDER"/>
        /// </summary>
        public static int INACTIVE_CAPTION_BORDER { get { if (!_INACTIVE_CAPTION_BORDERReady) { _INACTIVE_CAPTION_BORDERContent = SGetField<int>(LocalBridgeClazz, "INACTIVE_CAPTION_BORDER"); _INACTIVE_CAPTION_BORDERReady = true; } return _INACTIVE_CAPTION_BORDERContent; } }
        private static int _INACTIVE_CAPTION_BORDERContent = default;
        private static bool _INACTIVE_CAPTION_BORDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#INACTIVE_CAPTION_TEXT"/>
        /// </summary>
        public static int INACTIVE_CAPTION_TEXT { get { if (!_INACTIVE_CAPTION_TEXTReady) { _INACTIVE_CAPTION_TEXTContent = SGetField<int>(LocalBridgeClazz, "INACTIVE_CAPTION_TEXT"); _INACTIVE_CAPTION_TEXTReady = true; } return _INACTIVE_CAPTION_TEXTContent; } }
        private static int _INACTIVE_CAPTION_TEXTContent = default;
        private static bool _INACTIVE_CAPTION_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#INFO"/>
        /// </summary>
        public static int INFO { get { if (!_INFOReady) { _INFOContent = SGetField<int>(LocalBridgeClazz, "INFO"); _INFOReady = true; } return _INFOContent; } }
        private static int _INFOContent = default;
        private static bool _INFOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#INFO_TEXT"/>
        /// </summary>
        public static int INFO_TEXT { get { if (!_INFO_TEXTReady) { _INFO_TEXTContent = SGetField<int>(LocalBridgeClazz, "INFO_TEXT"); _INFO_TEXTReady = true; } return _INFO_TEXTContent; } }
        private static int _INFO_TEXTContent = default;
        private static bool _INFO_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#MENU"/>
        /// </summary>
        public static int MENU { get { if (!_MENUReady) { _MENUContent = SGetField<int>(LocalBridgeClazz, "MENU"); _MENUReady = true; } return _MENUContent; } }
        private static int _MENUContent = default;
        private static bool _MENUReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#MENU_TEXT"/>
        /// </summary>
        public static int MENU_TEXT { get { if (!_MENU_TEXTReady) { _MENU_TEXTContent = SGetField<int>(LocalBridgeClazz, "MENU_TEXT"); _MENU_TEXTReady = true; } return _MENU_TEXTContent; } }
        private static int _MENU_TEXTContent = default;
        private static bool _MENU_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#NUM_COLORS"/>
        /// </summary>
        public static int NUM_COLORS { get { if (!_NUM_COLORSReady) { _NUM_COLORSContent = SGetField<int>(LocalBridgeClazz, "NUM_COLORS"); _NUM_COLORSReady = true; } return _NUM_COLORSContent; } }
        private static int _NUM_COLORSContent = default;
        private static bool _NUM_COLORSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#SCROLLBAR"/>
        /// </summary>
        public static int SCROLLBAR { get { if (!_SCROLLBARReady) { _SCROLLBARContent = SGetField<int>(LocalBridgeClazz, "SCROLLBAR"); _SCROLLBARReady = true; } return _SCROLLBARContent; } }
        private static int _SCROLLBARContent = default;
        private static bool _SCROLLBARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#TEXT"/>
        /// </summary>
        public static int TEXT { get { if (!_TEXTReady) { _TEXTContent = SGetField<int>(LocalBridgeClazz, "TEXT"); _TEXTReady = true; } return _TEXTContent; } }
        private static int _TEXTContent = default;
        private static bool _TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#TEXT_HIGHLIGHT"/>
        /// </summary>
        public static int TEXT_HIGHLIGHT { get { if (!_TEXT_HIGHLIGHTReady) { _TEXT_HIGHLIGHTContent = SGetField<int>(LocalBridgeClazz, "TEXT_HIGHLIGHT"); _TEXT_HIGHLIGHTReady = true; } return _TEXT_HIGHLIGHTContent; } }
        private static int _TEXT_HIGHLIGHTContent = default;
        private static bool _TEXT_HIGHLIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#TEXT_HIGHLIGHT_TEXT"/>
        /// </summary>
        public static int TEXT_HIGHLIGHT_TEXT { get { if (!_TEXT_HIGHLIGHT_TEXTReady) { _TEXT_HIGHLIGHT_TEXTContent = SGetField<int>(LocalBridgeClazz, "TEXT_HIGHLIGHT_TEXT"); _TEXT_HIGHLIGHT_TEXTReady = true; } return _TEXT_HIGHLIGHT_TEXTContent; } }
        private static int _TEXT_HIGHLIGHT_TEXTContent = default;
        private static bool _TEXT_HIGHLIGHT_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#TEXT_INACTIVE_TEXT"/>
        /// </summary>
        public static int TEXT_INACTIVE_TEXT { get { if (!_TEXT_INACTIVE_TEXTReady) { _TEXT_INACTIVE_TEXTContent = SGetField<int>(LocalBridgeClazz, "TEXT_INACTIVE_TEXT"); _TEXT_INACTIVE_TEXTReady = true; } return _TEXT_INACTIVE_TEXTContent; } }
        private static int _TEXT_INACTIVE_TEXTContent = default;
        private static bool _TEXT_INACTIVE_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#TEXT_TEXT"/>
        /// </summary>
        public static int TEXT_TEXT { get { if (!_TEXT_TEXTReady) { _TEXT_TEXTContent = SGetField<int>(LocalBridgeClazz, "TEXT_TEXT"); _TEXT_TEXTReady = true; } return _TEXT_TEXTContent; } }
        private static int _TEXT_TEXTContent = default;
        private static bool _TEXT_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#WINDOW"/>
        /// </summary>
        public static int WINDOW { get { if (!_WINDOWReady) { _WINDOWContent = SGetField<int>(LocalBridgeClazz, "WINDOW"); _WINDOWReady = true; } return _WINDOWContent; } }
        private static int _WINDOWContent = default;
        private static bool _WINDOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#WINDOW_BORDER"/>
        /// </summary>
        public static int WINDOW_BORDER { get { if (!_WINDOW_BORDERReady) { _WINDOW_BORDERContent = SGetField<int>(LocalBridgeClazz, "WINDOW_BORDER"); _WINDOW_BORDERReady = true; } return _WINDOW_BORDERContent; } }
        private static int _WINDOW_BORDERContent = default;
        private static bool _WINDOW_BORDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#WINDOW_TEXT"/>
        /// </summary>
        public static int WINDOW_TEXT { get { if (!_WINDOW_TEXTReady) { _WINDOW_TEXTContent = SGetField<int>(LocalBridgeClazz, "WINDOW_TEXT"); _WINDOW_TEXTReady = true; } return _WINDOW_TEXTContent; } }
        private static int _WINDOW_TEXTContent = default;
        private static bool _WINDOW_TEXTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#activeCaption"/>
        /// </summary>
        public static Java.Awt.SystemColor activeCaption { get { if (!_activeCaptionReady) { _activeCaptionContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "activeCaption"); _activeCaptionReady = true; } return _activeCaptionContent; } }
        private static Java.Awt.SystemColor _activeCaptionContent = default;
        private static bool _activeCaptionReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#activeCaptionBorder"/>
        /// </summary>
        public static Java.Awt.SystemColor activeCaptionBorder { get { if (!_activeCaptionBorderReady) { _activeCaptionBorderContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "activeCaptionBorder"); _activeCaptionBorderReady = true; } return _activeCaptionBorderContent; } }
        private static Java.Awt.SystemColor _activeCaptionBorderContent = default;
        private static bool _activeCaptionBorderReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#activeCaptionText"/>
        /// </summary>
        public static Java.Awt.SystemColor activeCaptionText { get { if (!_activeCaptionTextReady) { _activeCaptionTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "activeCaptionText"); _activeCaptionTextReady = true; } return _activeCaptionTextContent; } }
        private static Java.Awt.SystemColor _activeCaptionTextContent = default;
        private static bool _activeCaptionTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#control"/>
        /// </summary>
        public static Java.Awt.SystemColor control { get { if (!_controlReady) { _controlContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "control"); _controlReady = true; } return _controlContent; } }
        private static Java.Awt.SystemColor _controlContent = default;
        private static bool _controlReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#controlDkShadow"/>
        /// </summary>
        public static Java.Awt.SystemColor controlDkShadow { get { if (!_controlDkShadowReady) { _controlDkShadowContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "controlDkShadow"); _controlDkShadowReady = true; } return _controlDkShadowContent; } }
        private static Java.Awt.SystemColor _controlDkShadowContent = default;
        private static bool _controlDkShadowReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#controlHighlight"/>
        /// </summary>
        public static Java.Awt.SystemColor controlHighlight { get { if (!_controlHighlightReady) { _controlHighlightContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "controlHighlight"); _controlHighlightReady = true; } return _controlHighlightContent; } }
        private static Java.Awt.SystemColor _controlHighlightContent = default;
        private static bool _controlHighlightReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#controlLtHighlight"/>
        /// </summary>
        public static Java.Awt.SystemColor controlLtHighlight { get { if (!_controlLtHighlightReady) { _controlLtHighlightContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "controlLtHighlight"); _controlLtHighlightReady = true; } return _controlLtHighlightContent; } }
        private static Java.Awt.SystemColor _controlLtHighlightContent = default;
        private static bool _controlLtHighlightReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#controlShadow"/>
        /// </summary>
        public static Java.Awt.SystemColor controlShadow { get { if (!_controlShadowReady) { _controlShadowContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "controlShadow"); _controlShadowReady = true; } return _controlShadowContent; } }
        private static Java.Awt.SystemColor _controlShadowContent = default;
        private static bool _controlShadowReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#controlText"/>
        /// </summary>
        public static Java.Awt.SystemColor controlText { get { if (!_controlTextReady) { _controlTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "controlText"); _controlTextReady = true; } return _controlTextContent; } }
        private static Java.Awt.SystemColor _controlTextContent = default;
        private static bool _controlTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#desktop"/>
        /// </summary>
        public static Java.Awt.SystemColor desktop { get { if (!_desktopReady) { _desktopContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "desktop"); _desktopReady = true; } return _desktopContent; } }
        private static Java.Awt.SystemColor _desktopContent = default;
        private static bool _desktopReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#inactiveCaption"/>
        /// </summary>
        public static Java.Awt.SystemColor inactiveCaption { get { if (!_inactiveCaptionReady) { _inactiveCaptionContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "inactiveCaption"); _inactiveCaptionReady = true; } return _inactiveCaptionContent; } }
        private static Java.Awt.SystemColor _inactiveCaptionContent = default;
        private static bool _inactiveCaptionReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#inactiveCaptionBorder"/>
        /// </summary>
        public static Java.Awt.SystemColor inactiveCaptionBorder { get { if (!_inactiveCaptionBorderReady) { _inactiveCaptionBorderContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "inactiveCaptionBorder"); _inactiveCaptionBorderReady = true; } return _inactiveCaptionBorderContent; } }
        private static Java.Awt.SystemColor _inactiveCaptionBorderContent = default;
        private static bool _inactiveCaptionBorderReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#inactiveCaptionText"/>
        /// </summary>
        public static Java.Awt.SystemColor inactiveCaptionText { get { if (!_inactiveCaptionTextReady) { _inactiveCaptionTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "inactiveCaptionText"); _inactiveCaptionTextReady = true; } return _inactiveCaptionTextContent; } }
        private static Java.Awt.SystemColor _inactiveCaptionTextContent = default;
        private static bool _inactiveCaptionTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#info"/>
        /// </summary>
        public static Java.Awt.SystemColor info { get { if (!_infoReady) { _infoContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "info"); _infoReady = true; } return _infoContent; } }
        private static Java.Awt.SystemColor _infoContent = default;
        private static bool _infoReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#infoText"/>
        /// </summary>
        public static Java.Awt.SystemColor infoText { get { if (!_infoTextReady) { _infoTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "infoText"); _infoTextReady = true; } return _infoTextContent; } }
        private static Java.Awt.SystemColor _infoTextContent = default;
        private static bool _infoTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#menu"/>
        /// </summary>
        public static Java.Awt.SystemColor menu { get { if (!_menuReady) { _menuContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "menu"); _menuReady = true; } return _menuContent; } }
        private static Java.Awt.SystemColor _menuContent = default;
        private static bool _menuReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#menuText"/>
        /// </summary>
        public static Java.Awt.SystemColor menuText { get { if (!_menuTextReady) { _menuTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "menuText"); _menuTextReady = true; } return _menuTextContent; } }
        private static Java.Awt.SystemColor _menuTextContent = default;
        private static bool _menuTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#scrollbar"/>
        /// </summary>
        public static Java.Awt.SystemColor scrollbar { get { if (!_scrollbarReady) { _scrollbarContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "scrollbar"); _scrollbarReady = true; } return _scrollbarContent; } }
        private static Java.Awt.SystemColor _scrollbarContent = default;
        private static bool _scrollbarReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#text"/>
        /// </summary>
        public static Java.Awt.SystemColor text { get { if (!_textReady) { _textContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "text"); _textReady = true; } return _textContent; } }
        private static Java.Awt.SystemColor _textContent = default;
        private static bool _textReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#textHighlight"/>
        /// </summary>
        public static Java.Awt.SystemColor textHighlight { get { if (!_textHighlightReady) { _textHighlightContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "textHighlight"); _textHighlightReady = true; } return _textHighlightContent; } }
        private static Java.Awt.SystemColor _textHighlightContent = default;
        private static bool _textHighlightReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#textHighlightText"/>
        /// </summary>
        public static Java.Awt.SystemColor textHighlightText { get { if (!_textHighlightTextReady) { _textHighlightTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "textHighlightText"); _textHighlightTextReady = true; } return _textHighlightTextContent; } }
        private static Java.Awt.SystemColor _textHighlightTextContent = default;
        private static bool _textHighlightTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#textInactiveText"/>
        /// </summary>
        public static Java.Awt.SystemColor textInactiveText { get { if (!_textInactiveTextReady) { _textInactiveTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "textInactiveText"); _textInactiveTextReady = true; } return _textInactiveTextContent; } }
        private static Java.Awt.SystemColor _textInactiveTextContent = default;
        private static bool _textInactiveTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#textText"/>
        /// </summary>
        public static Java.Awt.SystemColor textText { get { if (!_textTextReady) { _textTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "textText"); _textTextReady = true; } return _textTextContent; } }
        private static Java.Awt.SystemColor _textTextContent = default;
        private static bool _textTextReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#window"/>
        /// </summary>
        public static Java.Awt.SystemColor window { get { if (!_windowReady) { _windowContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "window"); _windowReady = true; } return _windowContent; } }
        private static Java.Awt.SystemColor _windowContent = default;
        private static bool _windowReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#windowBorder"/>
        /// </summary>
        public static Java.Awt.SystemColor windowBorder { get { if (!_windowBorderReady) { _windowBorderContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "windowBorder"); _windowBorderReady = true; } return _windowBorderContent; } }
        private static Java.Awt.SystemColor _windowBorderContent = default;
        private static bool _windowBorderReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/SystemColor.html#windowText"/>
        /// </summary>
        public static Java.Awt.SystemColor windowText { get { if (!_windowTextReady) { _windowTextContent = SGetField<Java.Awt.SystemColor>(LocalBridgeClazz, "windowText"); _windowTextReady = true; } return _windowTextContent; } }
        private static Java.Awt.SystemColor _windowTextContent = default;
        private static bool _windowTextReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}