/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Awt.Geom
{
    #region Line2D
    public partial class Line2D
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Awt.Shape(Java.Awt.Geom.Line2D t) => t.Cast<Java.Awt.Shape>();
        public static implicit operator Java.Lang.Cloneable(Java.Awt.Geom.Line2D t) => t.Cast<Java.Lang.Cloneable>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#linesIntersect(double,double,double,double,double,double,double,double)
        /// </summary>
        public static bool LinesIntersect(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7)
        {
            return SExecute<bool>("linesIntersect", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptLineDist(double,double,double,double,double,double)
        /// </summary>
        public static double PtLineDist(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5)
        {
            return SExecute<double>("ptLineDist", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptLineDistSq(double,double,double,double,double,double)
        /// </summary>
        public static double PtLineDistSq(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5)
        {
            return SExecute<double>("ptLineDistSq", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptSegDist(double,double,double,double,double,double)
        /// </summary>
        public static double PtSegDist(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5)
        {
            return SExecute<double>("ptSegDist", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptSegDistSq(double,double,double,double,double,double)
        /// </summary>
        public static double PtSegDistSq(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5)
        {
            return SExecute<double>("ptSegDistSq", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#relativeCCW(double,double,double,double,double,double)
        /// </summary>
        public static int RelativeCCW(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5)
        {
            return SExecute<int>("relativeCCW", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getBounds() 
        /// </summary>
        public Java.Awt.Rectangle Bounds
        {
            get { return IExecute<Java.Awt.Rectangle>("getBounds"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getP1() 
        /// </summary>
        public Java.Awt.Geom.Point2D P1
        {
            get { return IExecute<Java.Awt.Geom.Point2D>("getP1"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getP2() 
        /// </summary>
        public Java.Awt.Geom.Point2D P2
        {
            get { return IExecute<Java.Awt.Geom.Point2D>("getP2"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getX1() 
        /// </summary>
        public double X1
        {
            get { return IExecute<double>("getX1"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getX2() 
        /// </summary>
        public double X2
        {
            get { return IExecute<double>("getX2"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getY1() 
        /// </summary>
        public double Y1
        {
            get { return IExecute<double>("getY1"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getY2() 
        /// </summary>
        public double Y2
        {
            get { return IExecute<double>("getY2"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#setLine(double,double,double,double)
        /// </summary>
        public void SetLine(double arg0, double arg1, double arg2, double arg3)
        {
            IExecute("setLine", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#contains(double,double,double,double)
        /// </summary>
        public bool Contains(double arg0, double arg1, double arg2, double arg3)
        {
            return IExecute<bool>("contains", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#contains(double,double)
        /// </summary>
        public bool Contains(double arg0, double arg1)
        {
            return IExecute<bool>("contains", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#contains(java.awt.geom.Point2D)
        /// </summary>
        public bool Contains(Java.Awt.Geom.Point2D arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#contains(java.awt.geom.Rectangle2D)
        /// </summary>
        public bool Contains(Java.Awt.Geom.Rectangle2D arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#intersects(double,double,double,double)
        /// </summary>
        public bool Intersects(double arg0, double arg1, double arg2, double arg3)
        {
            return IExecute<bool>("intersects", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#intersects(java.awt.geom.Rectangle2D)
        /// </summary>
        public bool Intersects(Java.Awt.Geom.Rectangle2D arg0)
        {
            return IExecute<bool>("intersects", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#intersectsLine(double,double,double,double)
        /// </summary>
        public bool IntersectsLine(double arg0, double arg1, double arg2, double arg3)
        {
            return IExecute<bool>("intersectsLine", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#intersectsLine(java.awt.geom.Line2D)
        /// </summary>
        public bool IntersectsLine(Java.Awt.Geom.Line2D arg0)
        {
            return IExecute<bool>("intersectsLine", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptLineDist(double,double)
        /// </summary>
        public double PtLineDist(double arg0, double arg1)
        {
            return IExecute<double>("ptLineDist", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptLineDist(java.awt.geom.Point2D)
        /// </summary>
        public double PtLineDist(Java.Awt.Geom.Point2D arg0)
        {
            return IExecute<double>("ptLineDist", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptLineDistSq(double,double)
        /// </summary>
        public double PtLineDistSq(double arg0, double arg1)
        {
            return IExecute<double>("ptLineDistSq", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptLineDistSq(java.awt.geom.Point2D)
        /// </summary>
        public double PtLineDistSq(Java.Awt.Geom.Point2D arg0)
        {
            return IExecute<double>("ptLineDistSq", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptSegDist(double,double)
        /// </summary>
        public double PtSegDist(double arg0, double arg1)
        {
            return IExecute<double>("ptSegDist", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptSegDist(java.awt.geom.Point2D)
        /// </summary>
        public double PtSegDist(Java.Awt.Geom.Point2D arg0)
        {
            return IExecute<double>("ptSegDist", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptSegDistSq(double,double)
        /// </summary>
        public double PtSegDistSq(double arg0, double arg1)
        {
            return IExecute<double>("ptSegDistSq", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#ptSegDistSq(java.awt.geom.Point2D)
        /// </summary>
        public double PtSegDistSq(Java.Awt.Geom.Point2D arg0)
        {
            return IExecute<double>("ptSegDistSq", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#relativeCCW(double,double)
        /// </summary>
        public int RelativeCCW(double arg0, double arg1)
        {
            return IExecute<int>("relativeCCW", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#relativeCCW(java.awt.geom.Point2D)
        /// </summary>
        public int RelativeCCW(Java.Awt.Geom.Point2D arg0)
        {
            return IExecute<int>("relativeCCW", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getPathIterator(java.awt.geom.AffineTransform,double)
        /// </summary>
        public Java.Awt.Geom.PathIterator GetPathIterator(Java.Awt.Geom.AffineTransform arg0, double arg1)
        {
            return IExecute<Java.Awt.Geom.PathIterator>("getPathIterator", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#getPathIterator(java.awt.geom.AffineTransform)
        /// </summary>
        public Java.Awt.Geom.PathIterator GetPathIterator(Java.Awt.Geom.AffineTransform arg0)
        {
            return IExecute<Java.Awt.Geom.PathIterator>("getPathIterator", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#setLine(java.awt.geom.Line2D)
        /// </summary>
        public void SetLine(Java.Awt.Geom.Line2D arg0)
        {
            IExecute("setLine", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.html#setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)
        /// </summary>
        public void SetLine(Java.Awt.Geom.Point2D arg0, Java.Awt.Geom.Point2D arg1)
        {
            IExecute("setLine", arg0, arg1);
        }
        
        #endregion

        #region Nested classes
        #region Double
        public partial class Double
        {
            #region Constructors
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Double.html#<init>(double,double,double,double)
            /// </summary>
            public Double(double arg0, double arg1, double arg2, double arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Double.html#<init>(java.awt.geom.Point2D,java.awt.geom.Point2D)
            /// </summary>
            public Double(Java.Awt.Geom.Point2D arg0, Java.Awt.Geom.Point2D arg1)
                : base(arg0, arg1)
            {
            }
            
            #endregion

            #region Class/Interface conversion operators
            public static implicit operator Java.Io.Serializable(Java.Awt.Geom.Line2D.Double t) => t.Cast<Java.Io.Serializable>();
            
            #endregion

            #region Fields
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Double.html#x1
            /// </summary>
            public double x1 => Instance.GetField<double>("x1");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Double.html#x2
            /// </summary>
            public double x2 => Instance.GetField<double>("x2");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Double.html#y1
            /// </summary>
            public double y1 => Instance.GetField<double>("y1");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Double.html#y2
            /// </summary>
            public double y2 => Instance.GetField<double>("y2");
            
            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Float
        public partial class Float
        {
            #region Constructors
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#<init>(float,float,float,float)
            /// </summary>
            public Float(float arg0, float arg1, float arg2, float arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#<init>(java.awt.geom.Point2D,java.awt.geom.Point2D)
            /// </summary>
            public Float(Java.Awt.Geom.Point2D arg0, Java.Awt.Geom.Point2D arg1)
                : base(arg0, arg1)
            {
            }
            
            #endregion

            #region Class/Interface conversion operators
            public static implicit operator Java.Io.Serializable(Java.Awt.Geom.Line2D.Float t) => t.Cast<Java.Io.Serializable>();
            
            #endregion

            #region Fields
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#x1
            /// </summary>
            public float x1 => Instance.GetField<float>("x1");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#x2
            /// </summary>
            public float x2 => Instance.GetField<float>("x2");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#y1
            /// </summary>
            public float y1 => Instance.GetField<float>("y1");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#y2
            /// </summary>
            public float y2 => Instance.GetField<float>("y2");
            
            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/geom/Line2D.Float.html#setLine(float,float,float,float)
            /// </summary>
            public void SetLine(float arg0, float arg1, float arg2, float arg3)
            {
                IExecute("setLine", arg0, arg1, arg2, arg3);
            }
            
            #endregion

            // TODO: complete the class
        }
        #endregion


        #endregion

        // TODO: complete the class
    }
    #endregion
}