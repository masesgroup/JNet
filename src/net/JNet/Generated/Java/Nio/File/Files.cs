/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.4.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Nio.File
{
    #region Files
    public partial class Files
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="A"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static A ReadAttributes<A>(Java.Nio.File.Path arg0, Java.Lang.Class arg1, params Java.Nio.File.LinkOption[] arg2) where A: Java.Nio.File.Attribute.BasicFileAttributes
        {
            if (arg2.Length == 0) return SExecute<A>(LocalClazz, "readAttributes", arg0, arg1); else return SExecute<A>(LocalClazz, "readAttributes", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="V"/></returns>
        public static V GetFileAttributeView<V>(Java.Nio.File.Path arg0, Java.Lang.Class arg1, params Java.Nio.File.LinkOption[] arg2) where V: Java.Nio.File.Attribute.FileAttributeView
        {
            if (arg2.Length == 0) return SExecute<V>(LocalClazz, "getFileAttributeView", arg0, arg1); else return SExecute<V>(LocalClazz, "getFileAttributeView", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#deleteIfExists(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static bool DeleteIfExists(Java.Nio.File.Path arg0)
        {
            return SExecute<bool>(LocalClazz, "deleteIfExists", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#exists(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool Exists(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<bool>(LocalClazz, "exists", arg0); else return SExecute<bool>(LocalClazz, "exists", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsDirectory(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<bool>(LocalClazz, "isDirectory", arg0); else return SExecute<bool>(LocalClazz, "isDirectory", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isExecutable(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsExecutable(Java.Nio.File.Path arg0)
        {
            return SExecute<bool>(LocalClazz, "isExecutable", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isHidden(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static bool IsHidden(Java.Nio.File.Path arg0)
        {
            return SExecute<bool>(LocalClazz, "isHidden", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isReadable(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsReadable(Java.Nio.File.Path arg0)
        {
            return SExecute<bool>(LocalClazz, "isReadable", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsRegularFile(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<bool>(LocalClazz, "isRegularFile", arg0); else return SExecute<bool>(LocalClazz, "isRegularFile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isSameFile(java.nio.file.Path,java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static bool IsSameFile(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1)
        {
            return SExecute<bool>(LocalClazz, "isSameFile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isSymbolicLink(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsSymbolicLink(Java.Nio.File.Path arg0)
        {
            return SExecute<bool>(LocalClazz, "isSymbolicLink", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#isWritable(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsWritable(Java.Nio.File.Path arg0)
        {
            return SExecute<bool>(LocalClazz, "isWritable", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#notExists(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool NotExists(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<bool>(LocalClazz, "notExists", arg0); else return SExecute<bool>(LocalClazz, "notExists", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readAllBytes(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static byte[] ReadAllBytes(Java.Nio.File.Path arg0)
        {
            return SExecuteArray<byte>(LocalClazz, "readAllBytes", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newBufferedReader(java.nio.file.Path,java.nio.charset.Charset)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <returns><see cref="Java.Io.BufferedReader"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Io.BufferedReader NewBufferedReader(Java.Nio.File.Path arg0, Java.Nio.Charset.Charset arg1)
        {
            return SExecute<Java.Io.BufferedReader>(LocalClazz, "newBufferedReader", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newBufferedReader(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Io.BufferedReader"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Io.BufferedReader NewBufferedReader(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Io.BufferedReader>(LocalClazz, "newBufferedReader", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Io.BufferedWriter"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Io.BufferedWriter NewBufferedWriter(Java.Nio.File.Path arg0, Java.Nio.Charset.Charset arg1, params Java.Nio.File.OpenOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Io.BufferedWriter>(LocalClazz, "newBufferedWriter", arg0, arg1); else return SExecute<Java.Io.BufferedWriter>(LocalClazz, "newBufferedWriter", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Io.BufferedWriter"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Io.BufferedWriter NewBufferedWriter(Java.Nio.File.Path arg0, params Java.Nio.File.OpenOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Io.BufferedWriter>(LocalClazz, "newBufferedWriter", arg0); else return SExecute<Java.Io.BufferedWriter>(LocalClazz, "newBufferedWriter", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Io.InputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Io.InputStream NewInputStream(Java.Nio.File.Path arg0, params Java.Nio.File.OpenOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Io.InputStream>(LocalClazz, "newInputStream", arg0); else return SExecute<Java.Io.InputStream>(LocalClazz, "newInputStream", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Io.OutputStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Io.OutputStream NewOutputStream(Java.Nio.File.Path arg0, params Java.Nio.File.OpenOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Io.OutputStream>(LocalClazz, "newOutputStream", arg0); else return SExecute<Java.Io.OutputStream>(LocalClazz, "newOutputStream", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="object"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static object GetAttribute(Java.Nio.File.Path arg0, string arg1, params Java.Nio.File.LinkOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute(LocalClazz, "getAttribute", arg0, arg1); else return SExecute(LocalClazz, "getAttribute", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#probeContentType(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="string"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static string ProbeContentType(Java.Nio.File.Path arg0)
        {
            return SExecute<string>(LocalClazz, "probeContentType", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readString(java.nio.file.Path,java.nio.charset.Charset)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <returns><see cref="string"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static string ReadString(Java.Nio.File.Path arg0, Java.Nio.Charset.Charset arg1)
        {
            return SExecute<string>(LocalClazz, "readString", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readString(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="string"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static string ReadString(Java.Nio.File.Path arg0)
        {
            return SExecute<string>(LocalClazz, "readString", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newByteChannel(java.nio.file.Path,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Nio.Channels.SeekableByteChannel"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.Channels.SeekableByteChannel NewByteChannel(Java.Nio.File.Path arg0, params Java.Nio.File.OpenOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.Channels.SeekableByteChannel>(LocalClazz, "newByteChannel", arg0); else return SExecute<Java.Nio.Channels.SeekableByteChannel>(LocalClazz, "newByteChannel", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.Channels.SeekableByteChannel"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.Channels.SeekableByteChannel NewByteChannel<Arg1ExtendsJava_Nio_File_OpenOption, Arg2Extendsobject>(Java.Nio.File.Path arg0, Java.Util.Set<Arg1ExtendsJava_Nio_File_OpenOption> arg1, params Java.Nio.File.Attribute.FileAttribute<Arg2Extendsobject>[] arg2) where Arg1ExtendsJava_Nio_File_OpenOption: Java.Nio.File.OpenOption
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.Channels.SeekableByteChannel>(LocalClazz, "newByteChannel", arg0, arg1); else return SExecute<Java.Nio.Channels.SeekableByteChannel>(LocalClazz, "newByteChannel", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="Java.Nio.File.Attribute.FileTime"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Attribute.FileTime GetLastModifiedTime(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.File.Attribute.FileTime>(LocalClazz, "getLastModifiedTime", arg0); else return SExecute<Java.Nio.File.Attribute.FileTime>(LocalClazz, "getLastModifiedTime", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#getOwner(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="Java.Nio.File.Attribute.UserPrincipal"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Attribute.UserPrincipal GetOwner(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.File.Attribute.UserPrincipal>(LocalClazz, "getOwner", arg0); else return SExecute<Java.Nio.File.Attribute.UserPrincipal>(LocalClazz, "getOwner", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newDirectoryStream(java.nio.file.Path,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <returns><see cref="Java.Nio.File.DirectoryStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.DirectoryStream<Java.Nio.File.Path> NewDirectoryStream(Java.Nio.File.Path arg0, string arg1)
        {
            return SExecute<Java.Nio.File.DirectoryStream<Java.Nio.File.Path>>(LocalClazz, "newDirectoryStream", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.DirectoryStream.Filter"/></param>
        /// <returns><see cref="Java.Nio.File.DirectoryStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.DirectoryStream<Java.Nio.File.Path> NewDirectoryStream<Arg1objectSuperJava_Nio_File_Path>(Java.Nio.File.Path arg0, Java.Nio.File.DirectoryStream.Filter<Arg1objectSuperJava_Nio_File_Path> arg1) where Arg1objectSuperJava_Nio_File_Path: Java.Nio.File.Path
        {
            return SExecute<Java.Nio.File.DirectoryStream<Java.Nio.File.Path>>(LocalClazz, "newDirectoryStream", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#newDirectoryStream(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Nio.File.DirectoryStream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.DirectoryStream<Java.Nio.File.Path> NewDirectoryStream(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Nio.File.DirectoryStream<Java.Nio.File.Path>>(LocalClazz, "newDirectoryStream", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#getFileStore(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Nio.File.FileStore"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.FileStore GetFileStore(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Nio.File.FileStore>(LocalClazz, "getFileStore", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.CopyOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path Copy(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1, params Java.Nio.File.CopyOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "copy", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "copy", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateDirectories<Arg1Extendsobject>(Java.Nio.File.Path arg0, params Java.Nio.File.Attribute.FileAttribute<Arg1Extendsobject>[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createDirectories", arg0); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createDirectories", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateDirectory<Arg1Extendsobject>(Java.Nio.File.Path arg0, params Java.Nio.File.Attribute.FileAttribute<Arg1Extendsobject>[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createDirectory", arg0); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createDirectory", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateFile<Arg1Extendsobject>(Java.Nio.File.Path arg0, params Java.Nio.File.Attribute.FileAttribute<Arg1Extendsobject>[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createFile", arg0); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createFile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createLink(java.nio.file.Path,java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateLink(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1)
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "createLink", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateSymbolicLink<Arg2Extendsobject>(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1, params Java.Nio.File.Attribute.FileAttribute<Arg2Extendsobject>[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createSymbolicLink", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createSymbolicLink", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateTempDirectory<Arg1Extendsobject>(string arg0, params Java.Nio.File.Attribute.FileAttribute<Arg1Extendsobject>[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempDirectory", arg0); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempDirectory", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateTempDirectory<Arg2Extendsobject>(Java.Nio.File.Path arg0, string arg1, params Java.Nio.File.Attribute.FileAttribute<Arg2Extendsobject>[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempDirectory", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempDirectory", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateTempFile<Arg2Extendsobject>(string arg0, string arg1, params Java.Nio.File.Attribute.FileAttribute<Arg2Extendsobject>[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempFile", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempFile", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="Java.Nio.File.Attribute.FileAttribute"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path CreateTempFile<Arg3Extendsobject>(Java.Nio.File.Path arg0, string arg1, string arg2, params Java.Nio.File.Attribute.FileAttribute<Arg3Extendsobject>[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempFile", arg0, arg1, arg2); else return SExecute<Java.Nio.File.Path>(LocalClazz, "createTempFile", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.CopyOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path Move(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1, params Java.Nio.File.CopyOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "move", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "move", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readSymbolicLink(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path ReadSymbolicLink(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "readSymbolicLink", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path SetAttribute(Java.Nio.File.Path arg0, string arg1, object arg2, params Java.Nio.File.LinkOption[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "setAttribute", arg0, arg1, arg2); else return SExecute<Java.Nio.File.Path>(LocalClazz, "setAttribute", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Attribute.FileTime"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path SetLastModifiedTime(Java.Nio.File.Path arg0, Java.Nio.File.Attribute.FileTime arg1)
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "setLastModifiedTime", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Attribute.UserPrincipal"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path SetOwner(Java.Nio.File.Path arg0, Java.Nio.File.Attribute.UserPrincipal arg1)
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "setOwner", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#setPosixFilePermissions(java.nio.file.Path,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path SetPosixFilePermissions(Java.Nio.File.Path arg0, Java.Util.Set<Java.Nio.File.Attribute.PosixFilePermission> arg1)
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "setPosixFilePermissions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.FileVisitor"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path WalkFileTree<Arg1objectSuperJava_Nio_File_Path>(Java.Nio.File.Path arg0, Java.Nio.File.FileVisitor<Arg1objectSuperJava_Nio_File_Path> arg1) where Arg1objectSuperJava_Nio_File_Path: Java.Nio.File.Path
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "walkFileTree", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Java.Nio.File.FileVisitor"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path WalkFileTree<Arg3objectSuperJava_Nio_File_Path>(Java.Nio.File.Path arg0, Java.Util.Set<Java.Nio.File.FileVisitOption> arg1, int arg2, Java.Nio.File.FileVisitor<Arg3objectSuperJava_Nio_File_Path> arg3) where Arg3objectSuperJava_Nio_File_Path: Java.Nio.File.Path
        {
            return SExecute<Java.Nio.File.Path>(LocalClazz, "walkFileTree", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path Write(Java.Nio.File.Path arg0, byte[] arg1, params Java.Nio.File.OpenOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "write", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "write", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#write(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Iterable"/></param>
        /// <param name="arg2"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <param name="arg3"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path Write<Arg1ExtendsJava_Lang_CharSequence>(Java.Nio.File.Path arg0, Java.Lang.Iterable<Arg1ExtendsJava_Lang_CharSequence> arg1, Java.Nio.Charset.Charset arg2, params Java.Nio.File.OpenOption[] arg3) where Arg1ExtendsJava_Lang_CharSequence: Java.Lang.CharSequence
        {
            if (arg3.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "write", arg0, arg1, arg2); else return SExecute<Java.Nio.File.Path>(LocalClazz, "write", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#write(java.nio.file.Path,java.lang.Iterable,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Iterable"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path Write<Arg1ExtendsJava_Lang_CharSequence>(Java.Nio.File.Path arg0, Java.Lang.Iterable<Arg1ExtendsJava_Lang_CharSequence> arg1, params Java.Nio.File.OpenOption[] arg2) where Arg1ExtendsJava_Lang_CharSequence: Java.Lang.CharSequence
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "write", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "write", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg2"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <param name="arg3"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path WriteString(Java.Nio.File.Path arg0, Java.Lang.CharSequence arg1, Java.Nio.Charset.Charset arg2, params Java.Nio.File.OpenOption[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "writeString", arg0, arg1, arg2); else return SExecute<Java.Nio.File.Path>(LocalClazz, "writeString", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.file.OpenOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Lang.CharSequence"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.OpenOption"/></param>
        /// <returns><see cref="Java.Nio.File.Path"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Nio.File.Path WriteString(Java.Nio.File.Path arg0, Java.Lang.CharSequence arg1, params Java.Nio.File.OpenOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Nio.File.Path>(LocalClazz, "writeString", arg0, arg1); else return SExecute<Java.Nio.File.Path>(LocalClazz, "writeString", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readAllLines(java.nio.file.Path,java.nio.charset.Charset)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.List<string> ReadAllLines(Java.Nio.File.Path arg0, Java.Nio.Charset.Charset arg1)
        {
            return SExecute<Java.Util.List<string>>(LocalClazz, "readAllLines", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readAllLines(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.List<string> ReadAllLines(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Util.List<string>>(LocalClazz, "readAllLines", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Map<string, object> ReadAttributes(Java.Nio.File.Path arg0, string arg1, params Java.Nio.File.LinkOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Util.Map<string, object>>(LocalClazz, "readAttributes", arg0, arg1); else return SExecute<Java.Util.Map<string, object>>(LocalClazz, "readAttributes", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.LinkOption"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Set<Java.Nio.File.Attribute.PosixFilePermission> GetPosixFilePermissions(Java.Nio.File.Path arg0, params Java.Nio.File.LinkOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Util.Set<Java.Nio.File.Attribute.PosixFilePermission>>(LocalClazz, "getPosixFilePermissions", arg0); else return SExecute<Java.Util.Set<Java.Nio.File.Attribute.PosixFilePermission>>(LocalClazz, "getPosixFilePermissions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#lines(java.nio.file.Path,java.nio.charset.Charset)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.Charset.Charset"/></param>
        /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Stream.Stream<string> Lines(Java.Nio.File.Path arg0, Java.Nio.Charset.Charset arg1)
        {
            return SExecute<Java.Util.Stream.Stream<string>>(LocalClazz, "lines", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#lines(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Stream.Stream<string> Lines(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Util.Stream.Stream<string>>(LocalClazz, "lines", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#find(java.nio.file.Path,int,java.util.function.BiPredicate,java.nio.file.FileVisitOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Function.BiPredicate"/></param>
        /// <param name="arg3"><see cref="Java.Nio.File.FileVisitOption"/></param>
        /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Stream.Stream<Java.Nio.File.Path> Find(Java.Nio.File.Path arg0, int arg1, Java.Util.Function.BiPredicate<Java.Nio.File.Path, Java.Nio.File.Attribute.BasicFileAttributes> arg2, params Java.Nio.File.FileVisitOption[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "find", arg0, arg1, arg2); else return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "find", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#list(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Stream.Stream<Java.Nio.File.Path> List(Java.Nio.File.Path arg0)
        {
            return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "list", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#walk(java.nio.file.Path,int,java.nio.file.FileVisitOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.FileVisitOption"/></param>
        /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Stream.Stream<Java.Nio.File.Path> Walk(Java.Nio.File.Path arg0, int arg1, params Java.Nio.File.FileVisitOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "walk", arg0, arg1); else return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "walk", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#walk(java.nio.file.Path,java.nio.file.FileVisitOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.FileVisitOption"/></param>
        /// <returns><see cref="Java.Util.Stream.Stream"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Stream.Stream<Java.Nio.File.Path> Walk(Java.Nio.File.Path arg0, params Java.Nio.File.FileVisitOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "walk", arg0); else return SExecute<Java.Util.Stream.Stream<Java.Nio.File.Path>>(LocalClazz, "walk", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg2"><see cref="Java.Nio.File.CopyOption"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static long Copy(Java.Io.InputStream arg0, Java.Nio.File.Path arg1, params Java.Nio.File.CopyOption[] arg2)
        {
            if (arg2.Length == 0) return SExecute<long>(LocalClazz, "copy", arg0, arg1); else return SExecute<long>(LocalClazz, "copy", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#copy(java.nio.file.Path,java.io.OutputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Io.OutputStream"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static long Copy(Java.Nio.File.Path arg0, Java.Io.OutputStream arg1)
        {
            return SExecute<long>(LocalClazz, "copy", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#size(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static long Size(Java.Nio.File.Path arg0)
        {
            return SExecute<long>(LocalClazz, "size", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#delete(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void Delete(Java.Nio.File.Path arg0)
        {
            SExecute(LocalClazz, "delete", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}