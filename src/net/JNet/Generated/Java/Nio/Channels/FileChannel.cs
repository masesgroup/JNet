/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Nio.Channels
{
    #region FileChannel
    public partial class FileChannel
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Nio.Channels.SeekableByteChannel(Java.Nio.Channels.FileChannel t) => t.Cast<Java.Nio.Channels.SeekableByteChannel>();
        public static implicit operator Java.Nio.Channels.GatheringByteChannel(Java.Nio.Channels.FileChannel t) => t.Cast<Java.Nio.Channels.GatheringByteChannel>();
        public static implicit operator Java.Nio.Channels.ScatteringByteChannel(Java.Nio.Channels.FileChannel t) => t.Cast<Java.Nio.Channels.ScatteringByteChannel>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#open(java.nio.file.Path,java.nio.file.OpenOption...) throws java.io.IOException
        /// </summary>
        public static Java.Nio.Channels.FileChannel Open(Java.Nio.File.Path arg0, params Java.Nio.File.OpenOption[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Nio.Channels.FileChannel>("open", arg0); else return SExecute<Java.Nio.Channels.FileChannel>("open", arg0, arg1);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#read(java.nio.ByteBuffer,long) throws java.io.IOException
        /// </summary>
        public int Read(Java.Nio.ByteBuffer arg0, long arg1)
        {
            return IExecute<int>("read", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#read(java.nio.ByteBuffer) throws java.io.IOException
        /// </summary>
        public int Read(Java.Nio.ByteBuffer arg0)
        {
            return IExecute<int>("read", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#write(java.nio.ByteBuffer,long) throws java.io.IOException
        /// </summary>
        public int Write(Java.Nio.ByteBuffer arg0, long arg1)
        {
            return IExecute<int>("write", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#write(java.nio.ByteBuffer) throws java.io.IOException
        /// </summary>
        public int Write(Java.Nio.ByteBuffer arg0)
        {
            return IExecute<int>("write", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#lock(long,long,boolean) throws java.io.IOException
        /// </summary>
        public Java.Nio.Channels.FileLock Lock(long arg0, long arg1, bool arg2)
        {
            return IExecute<Java.Nio.Channels.FileLock>("lock", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#tryLock(long,long,boolean) throws java.io.IOException
        /// </summary>
        public Java.Nio.Channels.FileLock TryLock(long arg0, long arg1, bool arg2)
        {
            return IExecute<Java.Nio.Channels.FileLock>("tryLock", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#map(java.nio.channels.FileChannel$MapMode,long,long) throws java.io.IOException
        /// </summary>
        public Java.Nio.MappedByteBuffer Map(Java.Nio.Channels.FileChannel.MapMode arg0, long arg1, long arg2)
        {
            return IExecute<Java.Nio.MappedByteBuffer>("map", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#position() throws java.io.IOException
        /// </summary>
        public long Position()
        {
            return IExecute<long>("position");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#read(java.nio.ByteBuffer[],int,int) throws java.io.IOException
        /// </summary>
        public long Read(Java.Nio.ByteBuffer[] arg0, int arg1, int arg2)
        {
            return IExecute<long>("read", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#size() throws java.io.IOException
        /// </summary>
        public long Size()
        {
            return IExecute<long>("size");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#transferFrom(java.nio.channels.ReadableByteChannel,long,long) throws java.io.IOException
        /// </summary>
        public long TransferFrom(Java.Nio.Channels.ReadableByteChannel arg0, long arg1, long arg2)
        {
            return IExecute<long>("transferFrom", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#transferTo(long,long,java.nio.channels.WritableByteChannel) throws java.io.IOException
        /// </summary>
        public long TransferTo(long arg0, long arg1, Java.Nio.Channels.WritableByteChannel arg2)
        {
            return IExecute<long>("transferTo", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#write(java.nio.ByteBuffer[],int,int) throws java.io.IOException
        /// </summary>
        public long Write(Java.Nio.ByteBuffer[] arg0, int arg1, int arg2)
        {
            return IExecute<long>("write", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#force(boolean) throws java.io.IOException
        /// </summary>
        public void Force(bool arg0)
        {
            IExecute("force", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#lock() throws java.io.IOException
        /// </summary>
        public Java.Nio.Channels.FileLock Lock()
        {
            return IExecute<Java.Nio.Channels.FileLock>("lock");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#tryLock() throws java.io.IOException
        /// </summary>
        public Java.Nio.Channels.FileLock TryLock()
        {
            return IExecute<Java.Nio.Channels.FileLock>("tryLock");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#read(java.nio.ByteBuffer[]) throws java.io.IOException
        /// </summary>
        public long Read(Java.Nio.ByteBuffer[] arg0)
        {
            return IExecute<long>("read", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#write(java.nio.ByteBuffer[]) throws java.io.IOException
        /// </summary>
        public long Write(Java.Nio.ByteBuffer[] arg0)
        {
            return IExecute<long>("write", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#position(long) throws java.io.IOException
        /// </summary>
        public Java.Nio.Channels.SeekableByteChannel Position(long arg0)
        {
            return IExecute<Java.Nio.Channels.SeekableByteChannel>("position", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.html#truncate(long) throws java.io.IOException
        /// </summary>
        public Java.Nio.Channels.SeekableByteChannel Truncate(long arg0)
        {
            return IExecute<Java.Nio.Channels.SeekableByteChannel>("truncate", arg0);
        }
        
        #endregion

        #region Nested classes
        #region MapMode
        public partial class MapMode
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.MapMode.html#PRIVATE
            /// </summary>
            public static Java.Nio.Channels.FileChannel.MapMode PRIVATE => Clazz.GetField<Java.Nio.Channels.FileChannel.MapMode>("PRIVATE");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.MapMode.html#READ_ONLY
            /// </summary>
            public static Java.Nio.Channels.FileChannel.MapMode READ_ONLY => Clazz.GetField<Java.Nio.Channels.FileChannel.MapMode>("READ_ONLY");
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/FileChannel.MapMode.html#READ_WRITE
            /// </summary>
            public static Java.Nio.Channels.FileChannel.MapMode READ_WRITE => Clazz.GetField<Java.Nio.Channels.FileChannel.MapMode>("READ_WRITE");
            
            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            // TODO: complete the class
        }
        #endregion


        #endregion

        // TODO: complete the class
    }
    #endregion
}