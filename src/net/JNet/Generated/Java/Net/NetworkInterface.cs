/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Net
{
    #region NetworkInterface
    public partial class NetworkInterface
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getByIndex(int) throws java.net.SocketException
        /// </summary>
        public static Java.Net.NetworkInterface GetByIndex(int arg0)
        {
            return SExecute<Java.Net.NetworkInterface>("getByIndex", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getByInetAddress(java.net.InetAddress) throws java.net.SocketException
        /// </summary>
        public static Java.Net.NetworkInterface GetByInetAddress(Java.Net.InetAddress arg0)
        {
            return SExecute<Java.Net.NetworkInterface>("getByInetAddress", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getByName(java.lang.String) throws java.net.SocketException
        /// </summary>
        public static Java.Net.NetworkInterface GetByName(string arg0)
        {
            return SExecute<Java.Net.NetworkInterface>("getByName", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getDisplayName() 
        /// </summary>
        public string DisplayName
        {
            get { return IExecute<string>("getDisplayName"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getHardwareAddress() throws java.net.SocketException 
        /// </summary>
        public byte[] HardwareAddress
        {
            get { return IExecuteArray<byte>("getHardwareAddress"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getIndex() 
        /// </summary>
        public int Index
        {
            get { return IExecute<int>("getIndex"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getMTU() throws java.net.SocketException 
        /// </summary>
        public int MTU
        {
            get { return IExecute<int>("getMTU"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getName() 
        /// </summary>
        public string Name
        {
            get { return IExecute<string>("getName"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#getParent() 
        /// </summary>
        public Java.Net.NetworkInterface Parent
        {
            get { return IExecute<Java.Net.NetworkInterface>("getParent"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#isLoopback() throws java.net.SocketException
        /// </summary>
        public bool IsLoopback()
        {
            return IExecute<bool>("isLoopback");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#isPointToPoint() throws java.net.SocketException
        /// </summary>
        public bool IsPointToPoint()
        {
            return IExecute<bool>("isPointToPoint");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#isUp() throws java.net.SocketException
        /// </summary>
        public bool IsUp()
        {
            return IExecute<bool>("isUp");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#isVirtual()
        /// </summary>
        public bool IsVirtual()
        {
            return IExecute<bool>("isVirtual");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/NetworkInterface.html#supportsMulticast() throws java.net.SocketException
        /// </summary>
        public bool SupportsMulticast()
        {
            return IExecute<bool>("supportsMulticast");
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}