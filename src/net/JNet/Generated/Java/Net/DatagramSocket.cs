/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Net
{
    #region DatagramSocket
    public partial class DatagramSocket
    {
        #region Constructors
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#<init>(int,java.net.InetAddress) throws java.net.SocketException
        /// </summary>
        public DatagramSocket(int arg0, Java.Net.InetAddress arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#<init>(int) throws java.net.SocketException
        /// </summary>
        public DatagramSocket(int arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#<init>(java.net.SocketAddress) throws java.net.SocketException
        /// </summary>
        public DatagramSocket(Java.Net.SocketAddress arg0)
            : base(arg0)
        {
        }
        
        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Io.Closeable(Java.Net.DatagramSocket t) => t.Cast<Java.Io.Closeable>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory) throws java.io.IOException
        /// </summary>
        public static void SetDatagramSocketImplFactory(Java.Net.DatagramSocketImplFactory arg0)
        {
            SExecute("setDatagramSocketImplFactory", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getBroadcast() throws java.net.SocketException https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setBroadcast(boolean) throws java.net.SocketException
        /// </summary>
        public bool Broadcast
        {
            get { return IExecute<bool>("getBroadcast"); } set { IExecute("setBroadcast", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getChannel() 
        /// </summary>
        public Java.Nio.Channels.DatagramChannel Channel
        {
            get { return IExecute<Java.Nio.Channels.DatagramChannel>("getChannel"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getInetAddress() 
        /// </summary>
        public Java.Net.InetAddress InetAddress
        {
            get { return IExecute<Java.Net.InetAddress>("getInetAddress"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getLocalAddress() 
        /// </summary>
        public Java.Net.InetAddress LocalAddress
        {
            get { return IExecute<Java.Net.InetAddress>("getLocalAddress"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getLocalPort() 
        /// </summary>
        public int LocalPort
        {
            get { return IExecute<int>("getLocalPort"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getLocalSocketAddress() 
        /// </summary>
        public Java.Net.SocketAddress LocalSocketAddress
        {
            get { return IExecute<Java.Net.SocketAddress>("getLocalSocketAddress"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getPort() 
        /// </summary>
        public int Port
        {
            get { return IExecute<int>("getPort"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getReceiveBufferSize() throws java.net.SocketException https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setReceiveBufferSize(int) throws java.net.SocketException
        /// </summary>
        public int ReceiveBufferSize
        {
            get { return IExecute<int>("getReceiveBufferSize"); } set { IExecute("setReceiveBufferSize", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getRemoteSocketAddress() 
        /// </summary>
        public Java.Net.SocketAddress RemoteSocketAddress
        {
            get { return IExecute<Java.Net.SocketAddress>("getRemoteSocketAddress"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getReuseAddress() throws java.net.SocketException https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setReuseAddress(boolean) throws java.net.SocketException
        /// </summary>
        public bool ReuseAddress
        {
            get { return IExecute<bool>("getReuseAddress"); } set { IExecute("setReuseAddress", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getSendBufferSize() throws java.net.SocketException https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setSendBufferSize(int) throws java.net.SocketException
        /// </summary>
        public int SendBufferSize
        {
            get { return IExecute<int>("getSendBufferSize"); } set { IExecute("setSendBufferSize", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getSoTimeout() throws java.net.SocketException https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setSoTimeout(int) throws java.net.SocketException
        /// </summary>
        public int SoTimeout
        {
            get { return IExecute<int>("getSoTimeout"); } set { IExecute("setSoTimeout", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#getTrafficClass() throws java.net.SocketException https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#setTrafficClass(int) throws java.net.SocketException
        /// </summary>
        public int TrafficClass
        {
            get { return IExecute<int>("getTrafficClass"); } set { IExecute("setTrafficClass", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#isBound()
        /// </summary>
        public bool IsBound()
        {
            return IExecute<bool>("isBound");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#isClosed()
        /// </summary>
        public bool IsClosed()
        {
            return IExecute<bool>("isClosed");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#isConnected()
        /// </summary>
        public bool IsConnected()
        {
            return IExecute<bool>("isConnected");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#bind(java.net.SocketAddress) throws java.net.SocketException
        /// </summary>
        public void Bind(Java.Net.SocketAddress arg0)
        {
            IExecute("bind", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#receive(java.net.DatagramPacket) throws java.io.IOException
        /// </summary>
        public void Receive(Java.Net.DatagramPacket arg0)
        {
            IExecute("receive", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#close()
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#connect(java.net.InetAddress,int)
        /// </summary>
        public void Connect(Java.Net.InetAddress arg0, int arg1)
        {
            IExecute("connect", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#connect(java.net.SocketAddress) throws java.net.SocketException
        /// </summary>
        public void Connect(Java.Net.SocketAddress arg0)
        {
            IExecute("connect", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#disconnect()
        /// </summary>
        public void Disconnect()
        {
            IExecute("disconnect");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramSocket.html#send(java.net.DatagramPacket) throws java.io.IOException
        /// </summary>
        public void Send(Java.Net.DatagramPacket arg0)
        {
            IExecute("send", arg0);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}