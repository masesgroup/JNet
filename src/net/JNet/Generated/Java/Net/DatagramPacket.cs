/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Net
{
    #region DatagramPacket
    public partial class DatagramPacket
    {
        #region Constructors
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#<init>(byte[],int,int,java.net.InetAddress,int)
        /// </summary>
        public DatagramPacket(byte[] arg0, int arg1, int arg2, Java.Net.InetAddress arg3, int arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#<init>(byte[],int,int,java.net.SocketAddress)
        /// </summary>
        public DatagramPacket(byte[] arg0, int arg1, int arg2, Java.Net.SocketAddress arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#<init>(byte[],int,int)
        /// </summary>
        public DatagramPacket(byte[] arg0, int arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#<init>(byte[],int,java.net.InetAddress,int)
        /// </summary>
        public DatagramPacket(byte[] arg0, int arg1, Java.Net.InetAddress arg2, int arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#<init>(byte[],int,java.net.SocketAddress)
        /// </summary>
        public DatagramPacket(byte[] arg0, int arg1, Java.Net.SocketAddress arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#<init>(byte[],int)
        /// </summary>
        public DatagramPacket(byte[] arg0, int arg1)
            : base(arg0, arg1)
        {
        }
        
        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#getAddress() https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#setAddress(java.net.InetAddress)
        /// </summary>
        public Java.Net.InetAddress Address
        {
            get { return IExecute<Java.Net.InetAddress>("getAddress"); } set { IExecute("setAddress", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#getData() https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#setData(byte[])
        /// </summary>
        public byte[] Data
        {
            get { return IExecuteArray<byte>("getData"); } set { IExecute("setData", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#getLength() https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#setLength(int)
        /// </summary>
        public int Length
        {
            get { return IExecute<int>("getLength"); } set { IExecute("setLength", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#getOffset() 
        /// </summary>
        public int Offset
        {
            get { return IExecute<int>("getOffset"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#getPort() https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#setPort(int)
        /// </summary>
        public int Port
        {
            get { return IExecute<int>("getPort"); } set { IExecute("setPort", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#getSocketAddress() https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#setSocketAddress(java.net.SocketAddress)
        /// </summary>
        public Java.Net.SocketAddress SocketAddress
        {
            get { return IExecute<Java.Net.SocketAddress>("getSocketAddress"); } set { IExecute("setSocketAddress", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/DatagramPacket.html#setData(byte[],int,int)
        /// </summary>
        public void SetData(byte[] arg0, int arg1, int arg2)
        {
            IExecute("setData", arg0, arg1, arg2);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}