/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.4.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Net
{
    #region Proxy
    public partial class Proxy
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.html#%3Cinit%3E(java.net.Proxy.Type,java.net.SocketAddress)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.Proxy.Type"/></param>
        /// <param name="arg1"><see cref="Java.Net.SocketAddress"/></param>
        public Proxy(Java.Net.Proxy.Type arg0, Java.Net.SocketAddress arg1)
            : base(arg0, arg1)
        {
        }
        
        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.html#NO_PROXY"/>
        /// </summary>
        public static Java.Net.Proxy NO_PROXY { get { return LocalClazz.GetField<Java.Net.Proxy>("NO_PROXY"); } }
        
        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.html#address()"/> 
        /// </summary>
        public Java.Net.SocketAddress Address
        {
            get { return IExecute<Java.Net.SocketAddress>("address"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.html#type()"/>
        /// </summary>
        
        /// <returns><see cref="Java.Net.Proxy.Type"/></returns>
        public Java.Net.Proxy.Type TypeMethod()
        {
            return IExecute<Java.Net.Proxy.Type>("type");
        }
        
        #endregion

        #region Nested classes
        #region Type
        public partial class Type
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.Type.html#DIRECT"/>
            /// </summary>
            public static Java.Net.Proxy.Type DIRECT { get { return LocalClazz.GetField<Java.Net.Proxy.Type>("DIRECT"); } }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.Type.html#HTTP"/>
            /// </summary>
            public static Java.Net.Proxy.Type HTTP { get { return LocalClazz.GetField<Java.Net.Proxy.Type>("HTTP"); } }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.Type.html#SOCKS"/>
            /// </summary>
            public static Java.Net.Proxy.Type SOCKS { get { return LocalClazz.GetField<Java.Net.Proxy.Type>("SOCKS"); } }
            
            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.Type.html#values()"/> 
            /// </summary>
            public static Java.Net.Proxy.Type[] Values
            {
                get { return SExecuteArray<Java.Net.Proxy.Type>(LocalClazz, "values"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/Proxy.Type.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Net.Proxy.Type"/></returns>
            public static Java.Net.Proxy.Type ValueOf(string arg0)
            {
                return SExecute<Java.Net.Proxy.Type>(LocalClazz, "valueOf", arg0);
            }
            
            #endregion

            #region Instance methods

            #endregion

            // TODO: complete the class
        }
        #endregion


        #endregion

        // TODO: complete the class
    }
    #endregion
}