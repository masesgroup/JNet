/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.0.0.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Lang.ModuleNs
{
    #region ModuleDescriptor
    public partial class ModuleDescriptor
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#read(java.io.InputStream,java.util.function.Supplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Supplier"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Lang.ModuleNs.ModuleDescriptor Read(Java.Io.InputStream arg0, Java.Util.Function.Supplier<Java.Util.Set<string>> arg1)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor>(LocalBridgeClazz, "read", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#read(java.io.InputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Lang.ModuleNs.ModuleDescriptor Read(Java.Io.InputStream arg0)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor>(LocalBridgeClazz, "read", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#read(java.nio.ByteBuffer,java.util.function.Supplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Supplier"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor"/></returns>
        public static Java.Lang.ModuleNs.ModuleDescriptor Read(Java.Nio.ByteBuffer arg0, Java.Util.Function.Supplier<Java.Util.Set<string>> arg1)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor>(LocalBridgeClazz, "read", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#read(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor"/></returns>
        public static Java.Lang.ModuleNs.ModuleDescriptor Read(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor>(LocalBridgeClazz, "read", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#newAutomaticModule(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
        public static Java.Lang.ModuleNs.ModuleDescriptor.Builder NewAutomaticModule(string arg0)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>(LocalBridgeClazz, "newAutomaticModule", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#newModule(java.lang.String,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
        public static Java.Lang.ModuleNs.ModuleDescriptor.Builder NewModule(string arg0, Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Modifier> arg1)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>(LocalBridgeClazz, "newModule", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#newModule(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
        public static Java.Lang.ModuleNs.ModuleDescriptor.Builder NewModule(string arg0)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>(LocalBridgeClazz, "newModule", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#newOpenModule(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
        public static Java.Lang.ModuleNs.ModuleDescriptor.Builder NewOpenModule(string arg0)
        {
            return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>(LocalBridgeClazz, "newOpenModule", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#isAutomatic()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsAutomatic()
        {
            return IExecute<bool>("isAutomatic");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#isOpen()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsOpen()
        {
            return IExecute<bool>("isOpen");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#compareTo(java.lang.module.ModuleDescriptor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(Java.Lang.ModuleNs.ModuleDescriptor arg0)
        {
            return IExecute<int>("compareTo", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#compareTo(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(object arg0)
        {
            return IExecute<int>("compareTo", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#name()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string Name()
        {
            return IExecute<string>("name");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#toNameAndVersion()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string ToNameAndVersion()
        {
            return IExecute<string>("toNameAndVersion");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#version()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Java.Lang.ModuleNs.ModuleDescriptor.Version> VersionMethod()
        {
            return IExecute<Java.Util.Optional<Java.Lang.ModuleNs.ModuleDescriptor.Version>>("version");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#mainClass()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<string> MainClass()
        {
            return IExecute<Java.Util.Optional<string>>("mainClass");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#rawVersion()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<string> RawVersion()
        {
            return IExecute<Java.Util.Optional<string>>("rawVersion");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#exports()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Exports> ExportsMethod()
        {
            return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Exports>>("exports");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#modifiers()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Modifier> Modifiers()
        {
            return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>>("modifiers");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#opens()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Opens> OpensMethod()
        {
            return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Opens>>("opens");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#provides()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Provides> ProvidesMethod()
        {
            return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Provides>>("provides");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#requires()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Requires> RequiresMethod()
        {
            return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Requires>>("requires");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#packages()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<string> Packages()
        {
            return IExecute<Java.Util.Set<string>>("packages");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.html#uses()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<string> Uses()
        {
            return IExecute<Java.Util.Set<string>>("uses");
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#build()"/>
            /// </summary>

            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor Build()
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor>("build");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#exports(java.lang.module.ModuleDescriptor.Exports)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Exports"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ExportsMethod(Java.Lang.ModuleNs.ModuleDescriptor.Exports arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("exports", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#exports(java.lang.String,java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ExportsMethod(string arg0, Java.Util.Set<string> arg1)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("exports", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#exports(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ExportsMethod(string arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("exports", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#exports(java.util.Set,java.lang.String,java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ExportsMethod(Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier> arg0, string arg1, Java.Util.Set<string> arg2)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("exports", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#exports(java.util.Set,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ExportsMethod(Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier> arg0, string arg1)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("exports", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#mainClass(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder MainClass(string arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("mainClass", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#opens(java.lang.module.ModuleDescriptor.Opens)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Opens"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder OpensMethod(Java.Lang.ModuleNs.ModuleDescriptor.Opens arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("opens", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#opens(java.lang.String,java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder OpensMethod(string arg0, Java.Util.Set<string> arg1)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("opens", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#opens(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder OpensMethod(string arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("opens", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#opens(java.util.Set,java.lang.String,java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder OpensMethod(Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier> arg0, string arg1, Java.Util.Set<string> arg2)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("opens", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#opens(java.util.Set,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder OpensMethod(Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier> arg0, string arg1)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("opens", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#packages(java.util.Set)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder Packages(Java.Util.Set<string> arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("packages", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#provides(java.lang.module.ModuleDescriptor.Provides)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Provides"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ProvidesMethod(Java.Lang.ModuleNs.ModuleDescriptor.Provides arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("provides", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#provides(java.lang.String,java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder ProvidesMethod(string arg0, Java.Util.List<string> arg1)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("provides", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#requires(java.lang.module.ModuleDescriptor.Requires)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Requires"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder RequiresMethod(Java.Lang.ModuleNs.ModuleDescriptor.Requires arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("requires", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#requires(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder RequiresMethod(string arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("requires", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#requires(java.util.Set,java.lang.String,java.lang.module.ModuleDescriptor.Version)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Version"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder RequiresMethod(Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier> arg0, string arg1, Java.Lang.ModuleNs.ModuleDescriptor.Version arg2)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("requires", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#requires(java.util.Set,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder RequiresMethod(Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier> arg0, string arg1)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("requires", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#uses(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder Uses(string arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("uses", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#version(java.lang.module.ModuleDescriptor.Version)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Version"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder VersionMethod(Java.Lang.ModuleNs.ModuleDescriptor.Version arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("version", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#version(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Builder"/></returns>
            public Java.Lang.ModuleNs.ModuleDescriptor.Builder VersionMethod(string arg0)
            {
                return IExecute<Java.Lang.ModuleNs.ModuleDescriptor.Builder>("version", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Exports
        public partial class Exports
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#isQualified()"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool IsQualified()
            {
                return IExecute<bool>("isQualified");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#compareTo(java.lang.module.ModuleDescriptor.Exports)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Exports"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(Java.Lang.ModuleNs.ModuleDescriptor.Exports arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#compareTo(java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="object"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(object arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#source()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Source()
            {
                return IExecute<string>("source");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#modifiers()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Set"/></returns>
            public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier> Modifiers()
            {
                return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier>>("modifiers");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#targets()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Set"/></returns>
            public Java.Util.Set<string> Targets()
            {
                return IExecute<Java.Util.Set<string>>("targets");
            }

            #endregion

            #region Nested classes
            #region Modifier
            public partial class Modifier
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.Modifier.html#MANDATED"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier MANDATED { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier>(LocalBridgeClazz, "MANDATED"); } }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.Modifier.html#SYNTHETIC"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier SYNTHETIC { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier>(LocalBridgeClazz, "SYNTHETIC"); } }

                #endregion

                #region Static methods
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.Modifier.html#valueOf(java.lang.String)"/>
                /// </summary>
                /// <param name="arg0"><see cref="string"/></param>
                /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier"/></returns>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier ValueOf(string arg0)
                {
                    return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier>(LocalBridgeClazz, "valueOf", arg0);
                }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.Modifier.html#values()"/>
                /// </summary>

                /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier"/></returns>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier[] Values()
                {
                    return SExecuteArray<Java.Lang.ModuleNs.ModuleDescriptor.Exports.Modifier>(LocalBridgeClazz, "values");
                }

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Modifier
        public partial class Modifier
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Modifier.html#AUTOMATIC"/>
            /// </summary>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Modifier AUTOMATIC { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>(LocalBridgeClazz, "AUTOMATIC"); } }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Modifier.html#MANDATED"/>
            /// </summary>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Modifier MANDATED { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>(LocalBridgeClazz, "MANDATED"); } }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Modifier.html#OPEN"/>
            /// </summary>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Modifier OPEN { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>(LocalBridgeClazz, "OPEN"); } }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Modifier.html#SYNTHETIC"/>
            /// </summary>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Modifier SYNTHETIC { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>(LocalBridgeClazz, "SYNTHETIC"); } }

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Modifier.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Modifier"/></returns>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Modifier ValueOf(string arg0)
            {
                return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>(LocalBridgeClazz, "valueOf", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Modifier.html#values()"/>
            /// </summary>

            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Modifier"/></returns>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Modifier[] Values()
            {
                return SExecuteArray<Java.Lang.ModuleNs.ModuleDescriptor.Modifier>(LocalBridgeClazz, "values");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Opens
        public partial class Opens
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.html#isQualified()"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool IsQualified()
            {
                return IExecute<bool>("isQualified");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.html#compareTo(java.lang.module.ModuleDescriptor.Opens)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Opens"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(Java.Lang.ModuleNs.ModuleDescriptor.Opens arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.html#compareTo(java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="object"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(object arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.html#source()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Source()
            {
                return IExecute<string>("source");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.html#modifiers()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Set"/></returns>
            public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier> Modifiers()
            {
                return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier>>("modifiers");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.html#targets()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Set"/></returns>
            public Java.Util.Set<string> Targets()
            {
                return IExecute<Java.Util.Set<string>>("targets");
            }

            #endregion

            #region Nested classes
            #region Modifier
            public partial class Modifier
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.Modifier.html#MANDATED"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier MANDATED { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier>(LocalBridgeClazz, "MANDATED"); } }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.Modifier.html#SYNTHETIC"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier SYNTHETIC { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier>(LocalBridgeClazz, "SYNTHETIC"); } }

                #endregion

                #region Static methods
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.Modifier.html#valueOf(java.lang.String)"/>
                /// </summary>
                /// <param name="arg0"><see cref="string"/></param>
                /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier"/></returns>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier ValueOf(string arg0)
                {
                    return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier>(LocalBridgeClazz, "valueOf", arg0);
                }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Opens.Modifier.html#values()"/>
                /// </summary>

                /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier"/></returns>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier[] Values()
                {
                    return SExecuteArray<Java.Lang.ModuleNs.ModuleDescriptor.Opens.Modifier>(LocalBridgeClazz, "values");
                }

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Provides
        public partial class Provides
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Provides.html#compareTo(java.lang.module.ModuleDescriptor.Provides)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Provides"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(Java.Lang.ModuleNs.ModuleDescriptor.Provides arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Provides.html#compareTo(java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="object"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(object arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Provides.html#service()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Service()
            {
                return IExecute<string>("service");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Provides.html#providers()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<string> Providers()
            {
                return IExecute<Java.Util.List<string>>("providers");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Requires
        public partial class Requires
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.html#compareTo(java.lang.module.ModuleDescriptor.Requires)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Requires"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(Java.Lang.ModuleNs.ModuleDescriptor.Requires arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.html#compareTo(java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="object"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(object arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.html#name()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Name()
            {
                return IExecute<string>("name");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.html#compiledVersion()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Optional"/></returns>
            public Java.Util.Optional<Java.Lang.ModuleNs.ModuleDescriptor.Version> CompiledVersion()
            {
                return IExecute<Java.Util.Optional<Java.Lang.ModuleNs.ModuleDescriptor.Version>>("compiledVersion");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.html#rawCompiledVersion()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Optional"/></returns>
            public Java.Util.Optional<string> RawCompiledVersion()
            {
                return IExecute<Java.Util.Optional<string>>("rawCompiledVersion");
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.html#modifiers()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Set"/></returns>
            public Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier> Modifiers()
            {
                return IExecute<Java.Util.Set<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>>("modifiers");
            }

            #endregion

            #region Nested classes
            #region Modifier
            public partial class Modifier
            {
                #region Constructors

                #endregion

                #region Class/Interface conversion operators

                #endregion

                #region Fields
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.Modifier.html#MANDATED"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier MANDATED { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>(LocalBridgeClazz, "MANDATED"); } }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.Modifier.html#STATIC"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier STATIC { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>(LocalBridgeClazz, "STATIC"); } }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.Modifier.html#SYNTHETIC"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier SYNTHETIC { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>(LocalBridgeClazz, "SYNTHETIC"); } }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.Modifier.html#TRANSITIVE"/>
                /// </summary>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier TRANSITIVE { get { return SGetField<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>(LocalBridgeClazz, "TRANSITIVE"); } }

                #endregion

                #region Static methods
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.Modifier.html#valueOf(java.lang.String)"/>
                /// </summary>
                /// <param name="arg0"><see cref="string"/></param>
                /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier"/></returns>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier ValueOf(string arg0)
                {
                    return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>(LocalBridgeClazz, "valueOf", arg0);
                }
                /// <summary>
                /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Requires.Modifier.html#values()"/>
                /// </summary>

                /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier"/></returns>
                public static Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier[] Values()
                {
                    return SExecuteArray<Java.Lang.ModuleNs.ModuleDescriptor.Requires.Modifier>(LocalBridgeClazz, "values");
                }

                #endregion

                #region Instance methods

                #endregion

                #region Nested classes

                #endregion

                // TODO: complete the class
            }
            #endregion

        
            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Version
        public partial class Version
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Version.html#parse(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Version"/></returns>
            public static Java.Lang.ModuleNs.ModuleDescriptor.Version Parse(string arg0)
            {
                return SExecute<Java.Lang.ModuleNs.ModuleDescriptor.Version>(LocalBridgeClazz, "parse", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Version.html#compareTo(java.lang.module.ModuleDescriptor.Version)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.ModuleNs.ModuleDescriptor.Version"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(Java.Lang.ModuleNs.ModuleDescriptor.Version arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/module/ModuleDescriptor.Version.html#compareTo(java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="object"/></param>
            /// <returns><see cref="int"/></returns>
            public int CompareTo(object arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}