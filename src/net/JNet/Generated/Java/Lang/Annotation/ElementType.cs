/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Lang.Annotation
{
    #region ElementType
    public partial class ElementType
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#ANNOTATION_TYPE"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType ANNOTATION_TYPE { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "ANNOTATION_TYPE"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#CONSTRUCTOR"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType CONSTRUCTOR { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "CONSTRUCTOR"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#FIELD"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType FIELD { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "FIELD"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#LOCAL_VARIABLE"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType LOCAL_VARIABLE { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "LOCAL_VARIABLE"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#METHOD"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType METHOD { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "METHOD"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#MODULE"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType MODULE { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "MODULE"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#PACKAGE"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType PACKAGE { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "PACKAGE"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#PARAMETER"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType PARAMETER { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "PARAMETER"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#TYPE"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType TYPE { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "TYPE"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#TYPE_PARAMETER"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType TYPE_PARAMETER { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "TYPE_PARAMETER"); } }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#TYPE_USE"/>
        /// </summary>
        public static Java.Lang.Annotation.ElementType TYPE_USE { get { return SGetField<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "TYPE_USE"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#values()"/> 
        /// </summary>
        public static Java.Lang.Annotation.ElementType[] Values
        {
            get { return SExecuteArray<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "values"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/annotation/ElementType.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Lang.Annotation.ElementType"/></returns>
        public static Java.Lang.Annotation.ElementType ValueOf(string arg0)
        {
            return SExecute<Java.Lang.Annotation.ElementType>(LocalBridgeClazz, "valueOf", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}