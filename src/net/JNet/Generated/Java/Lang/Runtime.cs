/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Lang
{
    #region Runtime
    public partial class Runtime
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#getRuntime()
        /// </summary>
        public static Java.Lang.Runtime GetRuntime()
        {
            return SExecute<Java.Lang.Runtime>("getRuntime");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#version()
        /// </summary>
        public static Java.Lang.Runtime.Version VersionMethod()
        {
            return SExecute<Java.Lang.Runtime.Version>("version");
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#removeShutdownHook(java.lang.Thread)
        /// </summary>
        public bool RemoveShutdownHook(Java.Lang.Thread arg0)
        {
            return IExecute<bool>("removeShutdownHook", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exec(java.lang.String,java.lang.String[],java.io.File) throws java.io.IOException
        /// </summary>
        public Java.Lang.Process Exec(string arg0, string[] arg1, Java.Io.File arg2)
        {
            return IExecute<Java.Lang.Process>("exec", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exec(java.lang.String,java.lang.String[]) throws java.io.IOException
        /// </summary>
        public Java.Lang.Process Exec(string arg0, string[] arg1)
        {
            return IExecute<Java.Lang.Process>("exec", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exec(java.lang.String) throws java.io.IOException
        /// </summary>
        public Java.Lang.Process Exec(string arg0)
        {
            return IExecute<Java.Lang.Process>("exec", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exec(java.lang.String[],java.lang.String[],java.io.File) throws java.io.IOException
        /// </summary>
        public Java.Lang.Process Exec(string[] arg0, string[] arg1, Java.Io.File arg2)
        {
            return IExecute<Java.Lang.Process>("exec", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exec(java.lang.String[],java.lang.String[]) throws java.io.IOException
        /// </summary>
        public Java.Lang.Process Exec(string[] arg0, string[] arg1)
        {
            return IExecute<Java.Lang.Process>("exec", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exec(java.lang.String[]) throws java.io.IOException
        /// </summary>
        public Java.Lang.Process Exec(string[] arg0)
        {
            return IExecute<Java.Lang.Process>("exec", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#availableProcessors()
        /// </summary>
        public int AvailableProcessors()
        {
            return IExecute<int>("availableProcessors");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#freeMemory()
        /// </summary>
        public long FreeMemory()
        {
            return IExecute<long>("freeMemory");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#maxMemory()
        /// </summary>
        public long MaxMemory()
        {
            return IExecute<long>("maxMemory");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#totalMemory()
        /// </summary>
        public long TotalMemory()
        {
            return IExecute<long>("totalMemory");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#gc()
        /// </summary>
        public void Gc()
        {
            IExecute("gc");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#addShutdownHook(java.lang.Thread)
        /// </summary>
        public void AddShutdownHook(Java.Lang.Thread arg0)
        {
            IExecute("addShutdownHook", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#exit(int)
        /// </summary>
        public void Exit(int arg0)
        {
            IExecute("exit", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#halt(int)
        /// </summary>
        public void Halt(int arg0)
        {
            IExecute("halt", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#load(java.lang.String)
        /// </summary>
        public void Load(string arg0)
        {
            IExecute("load", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#loadLibrary(java.lang.String)
        /// </summary>
        public void LoadLibrary(string arg0)
        {
            IExecute("loadLibrary", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html#runFinalization()
        /// </summary>
        public void RunFinalization()
        {
            IExecute("runFinalization");
        }
        
        #endregion

        #region Nested classes
        #region Version
        public partial class Version
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#parse(java.lang.String)
            /// </summary>
            public static Java.Lang.Runtime.Version Parse(string arg0)
            {
                return SExecute<Java.Lang.Runtime.Version>("parse", arg0);
            }
            
            #endregion

            #region Instance methods
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#equalsIgnoreOptional(java.lang.Object)
            /// </summary>
            public bool EqualsIgnoreOptional(object arg0)
            {
                return IExecute<bool>("equalsIgnoreOptional", arg0);
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#compareTo(java.lang.Object)
            /// </summary>
            public int CompareTo(object arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#compareTo(java.lang.Runtime$Version)
            /// </summary>
            public int CompareTo(Java.Lang.Runtime.Version arg0)
            {
                return IExecute<int>("compareTo", arg0);
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#compareToIgnoreOptional(java.lang.Runtime$Version)
            /// </summary>
            public int CompareToIgnoreOptional(Java.Lang.Runtime.Version arg0)
            {
                return IExecute<int>("compareToIgnoreOptional", arg0);
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#feature()
            /// </summary>
            public int Feature()
            {
                return IExecute<int>("feature");
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#interim()
            /// </summary>
            public int Interim()
            {
                return IExecute<int>("interim");
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#patch()
            /// </summary>
            public int Patch()
            {
                return IExecute<int>("patch");
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.Version.html#update()
            /// </summary>
            public int Update()
            {
                return IExecute<int>("update");
            }
            
            #endregion

            // TODO: complete the class
        }
        #endregion


        #endregion

        // TODO: complete the class
    }
    #endregion
}