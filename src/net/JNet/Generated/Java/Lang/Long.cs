/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Lang
{
    #region Long
    public partial class Long
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#BYTES
        /// </summary>
        public static int BYTES => Clazz.GetField<int>("BYTES");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#SIZE
        /// </summary>
        public static int SIZE => Clazz.GetField<int>("SIZE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#TYPE
        /// </summary>
        public static Java.Lang.Class TYPE => Clazz.GetField<Java.Lang.Class>("TYPE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#MAX_VALUE
        /// </summary>
        public static long MAX_VALUE => Clazz.GetField<long>("MAX_VALUE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#MIN_VALUE
        /// </summary>
        public static long MIN_VALUE => Clazz.GetField<long>("MIN_VALUE");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#bitCount(long)
        /// </summary>
        public static int BitCount(long arg0)
        {
            return SExecute<int>("bitCount", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#compare(long,long)
        /// </summary>
        public static int Compare(long arg0, long arg1)
        {
            return SExecute<int>("compare", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#compareUnsigned(long,long)
        /// </summary>
        public static int CompareUnsigned(long arg0, long arg1)
        {
            return SExecute<int>("compareUnsigned", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#hashCode(long)
        /// </summary>
        public static int HashCode(long arg0)
        {
            return SExecute<int>("hashCode", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#numberOfLeadingZeros(long)
        /// </summary>
        public static int NumberOfLeadingZeros(long arg0)
        {
            return SExecute<int>("numberOfLeadingZeros", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#numberOfTrailingZeros(long)
        /// </summary>
        public static int NumberOfTrailingZeros(long arg0)
        {
            return SExecute<int>("numberOfTrailingZeros", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#signum(long)
        /// </summary>
        public static int Signum(long arg0)
        {
            return SExecute<int>("signum", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#decode(java.lang.String) throws java.lang.NumberFormatException
        /// </summary>
        public static long? Decode(string arg0)
        {
            return SExecute<long?>("decode", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#getLong(java.lang.String,java.lang.Long)
        /// </summary>
        public static long? GetLong(string arg0, long? arg1)
        {
            return SExecute<long?>("getLong", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#getLong(java.lang.String,long)
        /// </summary>
        public static long? GetLong(string arg0, long arg1)
        {
            return SExecute<long?>("getLong", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#getLong(java.lang.String)
        /// </summary>
        public static long? GetLong(string arg0)
        {
            return SExecute<long?>("getLong", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#valueOf(java.lang.String,int) throws java.lang.NumberFormatException
        /// </summary>
        public static long? ValueOf(string arg0, int arg1)
        {
            return SExecute<long?>("valueOf", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#valueOf(java.lang.String) throws java.lang.NumberFormatException
        /// </summary>
        public static long? ValueOf(string arg0)
        {
            return SExecute<long?>("valueOf", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#valueOf(long)
        /// </summary>
        public static long? ValueOf(long arg0)
        {
            return SExecute<long?>("valueOf", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toBinaryString(long)
        /// </summary>
        public static string ToBinaryString(long arg0)
        {
            return SExecute<string>("toBinaryString", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toHexString(long)
        /// </summary>
        public static string ToHexString(long arg0)
        {
            return SExecute<string>("toHexString", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toOctalString(long)
        /// </summary>
        public static string ToOctalString(long arg0)
        {
            return SExecute<string>("toOctalString", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toString(long,int)
        /// </summary>
        public static string ToString(long arg0, int arg1)
        {
            return SExecute<string>("toString", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toString(long)
        /// </summary>
        public static string ToString(long arg0)
        {
            return SExecute<string>("toString", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toUnsignedString(long,int)
        /// </summary>
        public static string ToUnsignedString(long arg0, int arg1)
        {
            return SExecute<string>("toUnsignedString", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#toUnsignedString(long)
        /// </summary>
        public static string ToUnsignedString(long arg0)
        {
            return SExecute<string>("toUnsignedString", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#divideUnsigned(long,long)
        /// </summary>
        public static long DivideUnsigned(long arg0, long arg1)
        {
            return SExecute<long>("divideUnsigned", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#highestOneBit(long)
        /// </summary>
        public static long HighestOneBit(long arg0)
        {
            return SExecute<long>("highestOneBit", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#lowestOneBit(long)
        /// </summary>
        public static long LowestOneBit(long arg0)
        {
            return SExecute<long>("lowestOneBit", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#max(long,long)
        /// </summary>
        public static long Max(long arg0, long arg1)
        {
            return SExecute<long>("max", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#min(long,long)
        /// </summary>
        public static long Min(long arg0, long arg1)
        {
            return SExecute<long>("min", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#parseLong(java.lang.CharSequence,int,int,int) throws java.lang.NumberFormatException
        /// </summary>
        public static long ParseLong(Java.Lang.CharSequence arg0, int arg1, int arg2, int arg3)
        {
            return SExecute<long>("parseLong", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#parseLong(java.lang.String,int) throws java.lang.NumberFormatException
        /// </summary>
        public static long ParseLong(string arg0, int arg1)
        {
            return SExecute<long>("parseLong", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#parseLong(java.lang.String) throws java.lang.NumberFormatException
        /// </summary>
        public static long ParseLong(string arg0)
        {
            return SExecute<long>("parseLong", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#parseUnsignedLong(java.lang.CharSequence,int,int,int) throws java.lang.NumberFormatException
        /// </summary>
        public static long ParseUnsignedLong(Java.Lang.CharSequence arg0, int arg1, int arg2, int arg3)
        {
            return SExecute<long>("parseUnsignedLong", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#parseUnsignedLong(java.lang.String,int) throws java.lang.NumberFormatException
        /// </summary>
        public static long ParseUnsignedLong(string arg0, int arg1)
        {
            return SExecute<long>("parseUnsignedLong", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#parseUnsignedLong(java.lang.String) throws java.lang.NumberFormatException
        /// </summary>
        public static long ParseUnsignedLong(string arg0)
        {
            return SExecute<long>("parseUnsignedLong", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#remainderUnsigned(long,long)
        /// </summary>
        public static long RemainderUnsigned(long arg0, long arg1)
        {
            return SExecute<long>("remainderUnsigned", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#reverse(long)
        /// </summary>
        public static long Reverse(long arg0)
        {
            return SExecute<long>("reverse", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#reverseBytes(long)
        /// </summary>
        public static long ReverseBytes(long arg0)
        {
            return SExecute<long>("reverseBytes", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#rotateLeft(long,int)
        /// </summary>
        public static long RotateLeft(long arg0, int arg1)
        {
            return SExecute<long>("rotateLeft", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#rotateRight(long,int)
        /// </summary>
        public static long RotateRight(long arg0, int arg1)
        {
            return SExecute<long>("rotateRight", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#sum(long,long)
        /// </summary>
        public static long Sum(long arg0, long arg1)
        {
            return SExecute<long>("sum", arg0, arg1);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#compareTo(java.lang.Long)
        /// </summary>
        public int CompareTo(long? arg0)
        {
            return IExecute<int>("compareTo", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html#compareTo(java.lang.Object)
        /// </summary>
        public int CompareTo(object arg0)
        {
            return IExecute<int>("compareTo", arg0);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}