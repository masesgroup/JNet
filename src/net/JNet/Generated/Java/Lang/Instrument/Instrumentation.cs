/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Lang.Instrument
{
    #region Instrumentation
    public partial class Instrumentation
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#getAllLoadedClasses() 
        /// </summary>
        public Java.Lang.Class[] AllLoadedClasses
        {
            get { return IExecuteArray<Java.Lang.Class>("getAllLoadedClasses"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#isModifiableModule(java.lang.Module)
        /// </summary>
        public bool IsModifiableModule(Java.Lang.Module arg0)
        {
            return IExecute<bool>("isModifiableModule", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#isNativeMethodPrefixSupported()
        /// </summary>
        public bool IsNativeMethodPrefixSupported()
        {
            return IExecute<bool>("isNativeMethodPrefixSupported");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#isRedefineClassesSupported()
        /// </summary>
        public bool IsRedefineClassesSupported()
        {
            return IExecute<bool>("isRedefineClassesSupported");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#isRetransformClassesSupported()
        /// </summary>
        public bool IsRetransformClassesSupported()
        {
            return IExecute<bool>("isRetransformClassesSupported");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#removeTransformer(java.lang.instrument.ClassFileTransformer)
        /// </summary>
        public bool RemoveTransformer(Java.Lang.Instrument.ClassFileTransformer arg0)
        {
            return IExecute<bool>("removeTransformer", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#getInitiatedClasses(java.lang.ClassLoader)
        /// </summary>
        public Java.Lang.Class[] GetInitiatedClasses(Java.Lang.ClassLoader arg0)
        {
            return IExecuteArray<Java.Lang.Class>("getInitiatedClasses", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#getObjectSize(java.lang.Object)
        /// </summary>
        public long GetObjectSize(object arg0)
        {
            return IExecute<long>("getObjectSize", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)
        /// </summary>
        public void AddTransformer(Java.Lang.Instrument.ClassFileTransformer arg0, bool arg1)
        {
            IExecute("addTransformer", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#addTransformer(java.lang.instrument.ClassFileTransformer)
        /// </summary>
        public void AddTransformer(Java.Lang.Instrument.ClassFileTransformer arg0)
        {
            IExecute("addTransformer", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#appendToBootstrapClassLoaderSearch(java.util.jar.JarFile)
        /// </summary>
        public void AppendToBootstrapClassLoaderSearch(Java.Util.Jar.JarFile arg0)
        {
            IExecute("appendToBootstrapClassLoaderSearch", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#appendToSystemClassLoaderSearch(java.util.jar.JarFile)
        /// </summary>
        public void AppendToSystemClassLoaderSearch(Java.Util.Jar.JarFile arg0)
        {
            IExecute("appendToSystemClassLoaderSearch", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#redefineClasses(java.lang.instrument.ClassDefinition...) throws java.lang.ClassNotFoundException,java.lang.instrument.UnmodifiableClassException
        /// </summary>
        public void RedefineClasses(params Java.Lang.Instrument.ClassDefinition[] arg0)
        {
            if (arg0.Length == 0) IExecute("redefineClasses"); else IExecute("redefineClasses", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#retransformClasses(java.lang.Class<?>...) throws java.lang.instrument.UnmodifiableClassException
        /// </summary>
        public void RetransformClasses(params Java.Lang.Class[] arg0)
        {
            if (arg0.Length == 0) IExecute("retransformClasses"); else IExecute("retransformClasses", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.instrument/java/lang/instrument/Instrumentation.html#setNativeMethodPrefix(java.lang.instrument.ClassFileTransformer,java.lang.String)
        /// </summary>
        public void SetNativeMethodPrefix(Java.Lang.Instrument.ClassFileTransformer arg0, string arg1)
        {
            IExecute("setNativeMethodPrefix", arg0, arg1);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}