/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Lang.Invoke
{
    #region VarHandle
    public partial class VarHandle
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#acquireFence()"/>
        /// </summary>
        public static void AcquireFence()
        {
            SExecute("acquireFence");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#fullFence()"/>
        /// </summary>
        public static void FullFence()
        {
            SExecute("fullFence");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#loadLoadFence()"/>
        /// </summary>
        public static void LoadLoadFence()
        {
            SExecute("loadLoadFence");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#releaseFence()"/>
        /// </summary>
        public static void ReleaseFence()
        {
            SExecute("releaseFence");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#storeStoreFence()"/>
        /// </summary>
        public static void StoreStoreFence()
        {
            SExecute("storeStoreFence");
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#isAccessModeSupported(java.lang.invoke.VarHandle$AccessMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Invoke.VarHandle.AccessMode"/></param>
        /// <returns><see langword="bool"/></returns>
        public bool IsAccessModeSupported(Java.Lang.Invoke.VarHandle.AccessMode arg0)
        {
            return IExecute<bool>("isAccessModeSupported", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#varType()"/>
        /// </summary>
        
        /// <returns><see cref="Java.Lang.Class"/></returns>
        public Java.Lang.Class VarType()
        {
            return IExecute<Java.Lang.Class>("varType");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#toMethodHandle(java.lang.invoke.VarHandle$AccessMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Invoke.VarHandle.AccessMode"/></param>
        /// <returns><see cref="Java.Lang.Invoke.MethodHandle"/></returns>
        public Java.Lang.Invoke.MethodHandle ToMethodHandle(Java.Lang.Invoke.VarHandle.AccessMode arg0)
        {
            return IExecute<Java.Lang.Invoke.MethodHandle>("toMethodHandle", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#accessModeType(java.lang.invoke.VarHandle$AccessMode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Invoke.VarHandle.AccessMode"/></param>
        /// <returns><see cref="Java.Lang.Invoke.MethodType"/></returns>
        public Java.Lang.Invoke.MethodType AccessModeType(Java.Lang.Invoke.VarHandle.AccessMode arg0)
        {
            return IExecute<Java.Lang.Invoke.MethodType>("accessModeType", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#coordinateTypes()"/>
        /// </summary>
        
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List CoordinateTypes()
        {
            return IExecute<Java.Util.List>("coordinateTypes");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#compareAndSet(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="bool"/></returns>
        public bool CompareAndSet(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute<bool>("compareAndSet"); else return IExecute<bool>("compareAndSet", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#weakCompareAndSet(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="bool"/></returns>
        public bool WeakCompareAndSet(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute<bool>("weakCompareAndSet"); else return IExecute<bool>("weakCompareAndSet", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#weakCompareAndSetAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="bool"/></returns>
        public bool WeakCompareAndSetAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute<bool>("weakCompareAndSetAcquire"); else return IExecute<bool>("weakCompareAndSetAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#weakCompareAndSetPlain(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="bool"/></returns>
        public bool WeakCompareAndSetPlain(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute<bool>("weakCompareAndSetPlain"); else return IExecute<bool>("weakCompareAndSetPlain", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#weakCompareAndSetRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="bool"/></returns>
        public bool WeakCompareAndSetRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute<bool>("weakCompareAndSetRelease"); else return IExecute<bool>("weakCompareAndSetRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#compareAndExchange(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object CompareAndExchange(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("compareAndExchange"); else return IExecute("compareAndExchange", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#compareAndExchangeAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object CompareAndExchangeAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("compareAndExchangeAcquire"); else return IExecute("compareAndExchangeAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#compareAndExchangeRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object CompareAndExchangeRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("compareAndExchangeRelease"); else return IExecute("compareAndExchangeRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#get(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object Get(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("get"); else return IExecute("get", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAcquire"); else return IExecute("getAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndAdd(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndAdd(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndAdd"); else return IExecute("getAndAdd", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndAddAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndAddAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndAddAcquire"); else return IExecute("getAndAddAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndAddRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndAddRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndAddRelease"); else return IExecute("getAndAddRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseAnd(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseAnd(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseAnd"); else return IExecute("getAndBitwiseAnd", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseAndAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseAndAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseAndAcquire"); else return IExecute("getAndBitwiseAndAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseAndRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseAndRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseAndRelease"); else return IExecute("getAndBitwiseAndRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseOr(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseOr(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseOr"); else return IExecute("getAndBitwiseOr", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseOrAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseOrAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseOrAcquire"); else return IExecute("getAndBitwiseOrAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseOrRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseOrRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseOrRelease"); else return IExecute("getAndBitwiseOrRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseXor(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseXor(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseXor"); else return IExecute("getAndBitwiseXor", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseXorAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseXorAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseXorAcquire"); else return IExecute("getAndBitwiseXorAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndBitwiseXorRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndBitwiseXorRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndBitwiseXorRelease"); else return IExecute("getAndBitwiseXorRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndSet(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndSet(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndSet"); else return IExecute("getAndSet", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndSetAcquire(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndSetAcquire(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndSetAcquire"); else return IExecute("getAndSetAcquire", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getAndSetRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetAndSetRelease(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getAndSetRelease"); else return IExecute("getAndSetRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getOpaque(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetOpaque(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getOpaque"); else return IExecute("getOpaque", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#getVolatile(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see langword="object"/></returns>
        public object GetVolatile(params object[] arg0)
        {
            if (arg0.Length == 0) return IExecute("getVolatile"); else return IExecute("getVolatile", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#set(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void Set(params object[] arg0)
        {
            if (arg0.Length == 0) IExecute("set"); else IExecute("set", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#setOpaque(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void SetOpaque(params object[] arg0)
        {
            if (arg0.Length == 0) IExecute("setOpaque"); else IExecute("setOpaque", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#setRelease(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void SetRelease(params object[] arg0)
        {
            if (arg0.Length == 0) IExecute("setRelease"); else IExecute("setRelease", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.html#setVolatile(java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void SetVolatile(params object[] arg0)
        {
            if (arg0.Length == 0) IExecute("setVolatile"); else IExecute("setVolatile", arg0);
        }
        
        #endregion

        #region Nested classes
        #region AccessMode
        public partial class AccessMode
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#COMPARE_AND_EXCHANGE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode COMPARE_AND_EXCHANGE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("COMPARE_AND_EXCHANGE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#COMPARE_AND_EXCHANGE_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode COMPARE_AND_EXCHANGE_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("COMPARE_AND_EXCHANGE_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#COMPARE_AND_EXCHANGE_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode COMPARE_AND_EXCHANGE_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("COMPARE_AND_EXCHANGE_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#COMPARE_AND_SET"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode COMPARE_AND_SET => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("COMPARE_AND_SET");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_ADD"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_ADD => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_ADD");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_ADD_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_ADD_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_ADD_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_ADD_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_ADD_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_ADD_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_AND"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_AND => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_AND");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_AND_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_AND_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_AND_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_AND_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_AND_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_AND_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_OR"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_OR => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_OR");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_OR_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_OR_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_OR_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_OR_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_OR_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_OR_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_XOR"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_XOR => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_XOR");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_XOR_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_XOR_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_XOR_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_BITWISE_XOR_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_BITWISE_XOR_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_BITWISE_XOR_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_SET"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_SET => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_SET");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_SET_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_SET_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_SET_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_AND_SET_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_AND_SET_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_AND_SET_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_OPAQUE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_OPAQUE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_OPAQUE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#GET_VOLATILE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode GET_VOLATILE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("GET_VOLATILE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#SET"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode SET => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("SET");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#SET_OPAQUE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode SET_OPAQUE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("SET_OPAQUE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#SET_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode SET_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("SET_RELEASE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#SET_VOLATILE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode SET_VOLATILE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("SET_VOLATILE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#WEAK_COMPARE_AND_SET"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode WEAK_COMPARE_AND_SET => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("WEAK_COMPARE_AND_SET");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#WEAK_COMPARE_AND_SET_ACQUIRE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode WEAK_COMPARE_AND_SET_ACQUIRE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("WEAK_COMPARE_AND_SET_ACQUIRE");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#WEAK_COMPARE_AND_SET_PLAIN"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode WEAK_COMPARE_AND_SET_PLAIN => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("WEAK_COMPARE_AND_SET_PLAIN");
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#WEAK_COMPARE_AND_SET_RELEASE"/>
            /// </summary>
            public static Java.Lang.Invoke.VarHandle.AccessMode WEAK_COMPARE_AND_SET_RELEASE => Clazz.GetField<Java.Lang.Invoke.VarHandle.AccessMode>("WEAK_COMPARE_AND_SET_RELEASE");
            
            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#valueFromMethodName(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.Invoke.VarHandle.AccessMode"/></returns>
            public static Java.Lang.Invoke.VarHandle.AccessMode ValueFromMethodName(string arg0)
            {
                return SExecute<Java.Lang.Invoke.VarHandle.AccessMode>("valueFromMethodName", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Java.Lang.Invoke.VarHandle.AccessMode"/></returns>
            public static Java.Lang.Invoke.VarHandle.AccessMode ValueOf(string arg0)
            {
                return SExecute<Java.Lang.Invoke.VarHandle.AccessMode>("valueOf", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#values()"/>
            /// </summary>
            
            /// <returns><see cref="Java.Lang.Invoke.VarHandle.AccessMode"/></returns>
            public static Java.Lang.Invoke.VarHandle.AccessMode[] Values()
            {
                return SExecuteArray<Java.Lang.Invoke.VarHandle.AccessMode>("values");
            }
            
            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/invoke/VarHandle.AccessMode.html#methodName()"/>
            /// </summary>
            
            /// <returns><see langword="string"/></returns>
            public string MethodName()
            {
                return IExecute<string>("methodName");
            }
            
            #endregion

            // TODO: complete the class
        }
        #endregion


        #endregion

        // TODO: complete the class
    }
    #endregion
}