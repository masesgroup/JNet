/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Rmi.Activation
{
    #region ActivationGroupDesc
    public partial class ActivationGroupDesc
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Io.Serializable(Java.Rmi.Activation.ActivationGroupDesc t) => t.Cast<Java.Io.Serializable>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.html#getLocation() 
        /// </summary>
        public string Location
        {
            get { return IExecute<string>("getLocation"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.html#getClassName()
        /// </summary>
        public string GetClassName()
        {
            return IExecute<string>("getClassName");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.html#getCommandEnvironment()
        /// </summary>
        public Java.Rmi.Activation.ActivationGroupDesc.CommandEnvironment GetCommandEnvironment()
        {
            return IExecute<Java.Rmi.Activation.ActivationGroupDesc.CommandEnvironment>("getCommandEnvironment");
        }
        
        #endregion

        #region Nested classes
        #region CommandEnvironment
        public partial class CommandEnvironment
        {
            #region Constructors
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.CommandEnvironment.html#<init>(java.lang.String,java.lang.String[])
            /// </summary>
            public CommandEnvironment(string arg0, string[] arg1)
                : base(arg0, arg1)
            {
            }
            
            #endregion

            #region Class/Interface conversion operators
            public static implicit operator Java.Io.Serializable(Java.Rmi.Activation.ActivationGroupDesc.CommandEnvironment t) => t.Cast<Java.Io.Serializable>();
            
            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.CommandEnvironment.html#getCommandOptions() 
            /// </summary>
            public string[] CommandOptions
            {
                get { return IExecuteArray<string>("getCommandOptions"); }
            }
            /// <summary>
            /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.CommandEnvironment.html#getCommandPath() 
            /// </summary>
            public string CommandPath
            {
                get { return IExecute<string>("getCommandPath"); }
            }
            
            #endregion

            // TODO: complete the class
        }
        #endregion


        #endregion

        // TODO: complete the class
    }
    #endregion
}