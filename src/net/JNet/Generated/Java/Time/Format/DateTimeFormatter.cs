/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Time.Format
{
    #region DateTimeFormatter
    public partial class DateTimeFormatter
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#BASIC_ISO_DATE
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter BASIC_ISO_DATE => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("BASIC_ISO_DATE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_DATE
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_DATE => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_DATE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_DATE_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_DATE_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_DATE_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_INSTANT
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_INSTANT => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_INSTANT");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_LOCAL_DATE => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_LOCAL_DATE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_LOCAL_DATE_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_LOCAL_DATE_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_LOCAL_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_LOCAL_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_LOCAL_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_OFFSET_DATE
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_OFFSET_DATE => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_OFFSET_DATE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_OFFSET_DATE_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_OFFSET_DATE_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_OFFSET_DATE_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_OFFSET_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_OFFSET_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_OFFSET_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_ORDINAL_DATE
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_ORDINAL_DATE => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_ORDINAL_DATE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_WEEK_DATE
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_WEEK_DATE => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_WEEK_DATE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter ISO_ZONED_DATE_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("ISO_ZONED_DATE_TIME");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#RFC_1123_DATE_TIME
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter RFC_1123_DATE_TIME => Clazz.GetField<Java.Time.Format.DateTimeFormatter>("RFC_1123_DATE_TIME");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ofPattern(java.lang.String,java.util.Locale)
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter OfPattern(string arg0, Java.Util.Locale arg1)
        {
            return SExecute<Java.Time.Format.DateTimeFormatter>("ofPattern", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ofPattern(java.lang.String)
        /// </summary>
        public static Java.Time.Format.DateTimeFormatter OfPattern(string arg0)
        {
            return SExecute<Java.Time.Format.DateTimeFormatter>("ofPattern", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#getChronology() 
        /// </summary>
        public Java.Time.Chrono.Chronology Chronology
        {
            get { return IExecute<Java.Time.Chrono.Chronology>("getChronology"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#getDecimalStyle() 
        /// </summary>
        public Java.Time.Format.DecimalStyle DecimalStyle
        {
            get { return IExecute<Java.Time.Format.DecimalStyle>("getDecimalStyle"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#getLocale() 
        /// </summary>
        public Java.Util.Locale Locale
        {
            get { return IExecute<Java.Util.Locale>("getLocale"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#getZone() 
        /// </summary>
        public Java.Time.ZoneId Zone
        {
            get { return IExecute<Java.Time.ZoneId>("getZone"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#format.DateTimeFormatter.format(java.time.temporal.TemporalAccessor)
        /// </summary>
        public string Format(Java.Time.Temporal.TemporalAccessor arg0)
        {
            return IExecute<string>("format", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#toFormat()
        /// </summary>
        public Java.Text.Format ToFormat()
        {
            return IExecute<Java.Text.Format>("toFormat");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#localizedBy(java.util.Locale)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter LocalizedBy(Java.Util.Locale arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("localizedBy", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#withChronology(java.time.chrono.Chronology)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter WithChronology(Java.Time.Chrono.Chronology arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("withChronology", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#withDecimalStyle(java.time.format.DecimalStyle)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter WithDecimalStyle(Java.Time.Format.DecimalStyle arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("withDecimalStyle", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#withLocale(java.util.Locale)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter WithLocale(Java.Util.Locale arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("withLocale", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#withResolverFields(java.time.temporal.TemporalField...)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter WithResolverFields(params Java.Time.Temporal.TemporalField[] arg0)
        {
            if (arg0.Length == 0) return IExecute<Java.Time.Format.DateTimeFormatter>("withResolverFields"); else return IExecute<Java.Time.Format.DateTimeFormatter>("withResolverFields", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#withZone(java.time.ZoneId)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter WithZone(Java.Time.ZoneId arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("withZone", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#parse(java.lang.CharSequence,java.text.ParsePosition)
        /// </summary>
        public Java.Time.Temporal.TemporalAccessor Parse(Java.Lang.CharSequence arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<Java.Time.Temporal.TemporalAccessor>("parse", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#parse(java.lang.CharSequence)
        /// </summary>
        public Java.Time.Temporal.TemporalAccessor Parse(Java.Lang.CharSequence arg0)
        {
            return IExecute<Java.Time.Temporal.TemporalAccessor>("parse", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery<?>...)
        /// </summary>
        public Java.Time.Temporal.TemporalAccessor ParseBest(Java.Lang.CharSequence arg0, params Java.Time.Temporal.TemporalQuery[] arg1)
        {
            if (arg1.Length == 0) return IExecute<Java.Time.Temporal.TemporalAccessor>("parseBest", arg0); else return IExecute<Java.Time.Temporal.TemporalAccessor>("parseBest", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)
        /// </summary>
        public Java.Time.Temporal.TemporalAccessor ParseUnresolved(Java.Lang.CharSequence arg0, Java.Text.ParsePosition arg1)
        {
            return IExecute<Java.Time.Temporal.TemporalAccessor>("parseUnresolved", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#formatTo(java.time.temporal.TemporalAccessor,java.lang.Appendable)
        /// </summary>
        public void FormatTo(Java.Time.Temporal.TemporalAccessor arg0, Java.Lang.Appendable arg1)
        {
            IExecute("formatTo", arg0, arg1);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}