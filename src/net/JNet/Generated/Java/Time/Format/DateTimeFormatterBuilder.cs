/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Time.Format
{
    #region DateTimeFormatterBuilder
    public partial class DateTimeFormatterBuilder
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#toFormatter()
        /// </summary>
        public Java.Time.Format.DateTimeFormatter ToFormatter()
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("toFormatter");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#toFormatter(java.util.Locale)
        /// </summary>
        public Java.Time.Format.DateTimeFormatter ToFormatter(Java.Util.Locale arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatter>("toFormatter", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#append(java.time.format.DateTimeFormatter)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder Append(Java.Time.Format.DateTimeFormatter arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("append", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendChronologyId()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendChronologyId()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendChronologyId");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendFraction(java.time.temporal.TemporalField,int,int,boolean)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendFraction(Java.Time.Temporal.TemporalField arg0, int arg1, int arg2, bool arg3)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendFraction", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendInstant()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendInstant()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendInstant");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendInstant(int)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendInstant(int arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendInstant", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendLiteral(char)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendLiteral(char arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendLiteral", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendLiteral(java.lang.String)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendLiteral(string arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendLiteral", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendOffset(java.lang.String,java.lang.String)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendOffset(string arg0, string arg1)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendOffset", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendOffsetId()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendOffsetId()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendOffsetId");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendOptional(java.time.format.DateTimeFormatter)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendOptional(Java.Time.Format.DateTimeFormatter arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendOptional", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendPattern(java.lang.String)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendPattern(string arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendPattern", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendText(java.time.temporal.TemporalField)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendText(Java.Time.Temporal.TemporalField arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendText", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendValue(java.time.temporal.TemporalField,int)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendValue(Java.Time.Temporal.TemporalField arg0, int arg1)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendValue", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendValue(java.time.temporal.TemporalField)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendValue(Java.Time.Temporal.TemporalField arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendValue", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendValueReduced(java.time.temporal.TemporalField,int,int,int)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendValueReduced(Java.Time.Temporal.TemporalField arg0, int arg1, int arg2, int arg3)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendValueReduced", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendValueReduced(java.time.temporal.TemporalField,int,int,java.time.chrono.ChronoLocalDate)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendValueReduced(Java.Time.Temporal.TemporalField arg0, int arg1, int arg2, Java.Time.Chrono.ChronoLocalDate arg3)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendValueReduced", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendZoneId()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendZoneId()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendZoneId");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendZoneOrOffsetId()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendZoneOrOffsetId()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendZoneOrOffsetId");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#appendZoneRegionId()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder AppendZoneRegionId()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("appendZoneRegionId");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#optionalEnd()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder OptionalEnd()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("optionalEnd");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#optionalStart()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder OptionalStart()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("optionalStart");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#padNext(int,char)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder PadNext(int arg0, char arg1)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("padNext", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#padNext(int)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder PadNext(int arg0)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("padNext", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#parseCaseInsensitive()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder ParseCaseInsensitive()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("parseCaseInsensitive");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#parseCaseSensitive()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder ParseCaseSensitive()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("parseCaseSensitive");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#parseDefaulting(java.time.temporal.TemporalField,long)
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder ParseDefaulting(Java.Time.Temporal.TemporalField arg0, long arg1)
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("parseDefaulting", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#parseLenient()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder ParseLenient()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("parseLenient");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatterBuilder.html#parseStrict()
        /// </summary>
        public Java.Time.Format.DateTimeFormatterBuilder ParseStrict()
        {
            return IExecute<Java.Time.Format.DateTimeFormatterBuilder>("parseStrict");
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}