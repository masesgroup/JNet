/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Time
{
    #region LocalDate
    public partial class LocalDate
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Time.Temporal.Temporal(Java.Time.LocalDate t) => t.Cast<Java.Time.Temporal.Temporal>();
        public static implicit operator Java.Time.Temporal.TemporalAdjuster(Java.Time.LocalDate t) => t.Cast<Java.Time.Temporal.TemporalAdjuster>();
        public static implicit operator Java.Time.Chrono.ChronoLocalDate(Java.Time.LocalDate t) => t.Cast<Java.Time.Chrono.ChronoLocalDate>();
        public static implicit operator Java.Io.Serializable(Java.Time.LocalDate t) => t.Cast<Java.Io.Serializable>();
        
        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#EPOCH
        /// </summary>
        public static Java.Time.LocalDate EPOCH => Clazz.GetField<Java.Time.LocalDate>("EPOCH");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#MAX
        /// </summary>
        public static Java.Time.LocalDate MAX => Clazz.GetField<Java.Time.LocalDate>("MAX");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#MIN
        /// </summary>
        public static Java.Time.LocalDate MIN => Clazz.GetField<Java.Time.LocalDate>("MIN");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#now()
        /// </summary>
        public static Java.Time.LocalDate Now()
        {
            return SExecute<Java.Time.LocalDate>("now");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#now(java.time.Clock)
        /// </summary>
        public static Java.Time.LocalDate Now(Java.Time.Clock arg0)
        {
            return SExecute<Java.Time.LocalDate>("now", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#now(java.time.ZoneId)
        /// </summary>
        public static Java.Time.LocalDate Now(Java.Time.ZoneId arg0)
        {
            return SExecute<Java.Time.LocalDate>("now", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#of(int,int,int)
        /// </summary>
        public static Java.Time.LocalDate Of(int arg0, int arg1, int arg2)
        {
            return SExecute<Java.Time.LocalDate>("of", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#ofEpochDay(long)
        /// </summary>
        public static Java.Time.LocalDate OfEpochDay(long arg0)
        {
            return SExecute<Java.Time.LocalDate>("ofEpochDay", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#ofInstant(java.time.Instant,java.time.ZoneId)
        /// </summary>
        public static Java.Time.LocalDate OfInstant(Java.Time.Instant arg0, Java.Time.ZoneId arg1)
        {
            return SExecute<Java.Time.LocalDate>("ofInstant", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#ofYearDay(int,int)
        /// </summary>
        public static Java.Time.LocalDate OfYearDay(int arg0, int arg1)
        {
            return SExecute<Java.Time.LocalDate>("ofYearDay", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)
        /// </summary>
        public static Java.Time.LocalDate Parse(Java.Lang.CharSequence arg0, Java.Time.Format.DateTimeFormatter arg1)
        {
            return SExecute<Java.Time.LocalDate>("parse", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#parse(java.lang.CharSequence)
        /// </summary>
        public static Java.Time.LocalDate Parse(Java.Lang.CharSequence arg0)
        {
            return SExecute<Java.Time.LocalDate>("parse", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getChronology() 
        /// </summary>
        public Java.Time.Chrono.Chronology Chronology
        {
            get { return IExecute<Java.Time.Chrono.Chronology>("getChronology"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getDayOfMonth() 
        /// </summary>
        public int DayOfMonth
        {
            get { return IExecute<int>("getDayOfMonth"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getDayOfYear() 
        /// </summary>
        public int DayOfYear
        {
            get { return IExecute<int>("getDayOfYear"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getEra() 
        /// </summary>
        public Java.Time.Chrono.Era Era
        {
            get { return IExecute<Java.Time.Chrono.Era>("getEra"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getMonthValue() 
        /// </summary>
        public int MonthValue
        {
            get { return IExecute<int>("getMonthValue"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getYear() 
        /// </summary>
        public int Year
        {
            get { return IExecute<int>("getYear"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#isAfter(java.time.chrono.ChronoLocalDate)
        /// </summary>
        public bool IsAfter(Java.Time.Chrono.ChronoLocalDate arg0)
        {
            return IExecute<bool>("isAfter", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#isBefore(java.time.chrono.ChronoLocalDate)
        /// </summary>
        public bool IsBefore(Java.Time.Chrono.ChronoLocalDate arg0)
        {
            return IExecute<bool>("isBefore", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#isEqual(java.time.chrono.ChronoLocalDate)
        /// </summary>
        public bool IsEqual(Java.Time.Chrono.ChronoLocalDate arg0)
        {
            return IExecute<bool>("isEqual", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#isLeapYear()
        /// </summary>
        public bool IsLeapYear()
        {
            return IExecute<bool>("isLeapYear");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#isSupported(java.time.temporal.TemporalField)
        /// </summary>
        public bool IsSupported(Java.Time.Temporal.TemporalField arg0)
        {
            return IExecute<bool>("isSupported", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#isSupported(java.time.temporal.TemporalUnit)
        /// </summary>
        public bool IsSupported(Java.Time.Temporal.TemporalUnit arg0)
        {
            return IExecute<bool>("isSupported", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#compareTo(java.lang.Object)
        /// </summary>
        public int CompareTo(object arg0)
        {
            return IExecute<int>("compareTo", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#compareTo(java.time.chrono.ChronoLocalDate)
        /// </summary>
        public int CompareTo(Java.Time.Chrono.ChronoLocalDate arg0)
        {
            return IExecute<int>("compareTo", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#get(java.time.temporal.TemporalField)
        /// </summary>
        public int Get(Java.Time.Temporal.TemporalField arg0)
        {
            return IExecute<int>("get", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#lengthOfMonth()
        /// </summary>
        public int LengthOfMonth()
        {
            return IExecute<int>("lengthOfMonth");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#lengthOfYear()
        /// </summary>
        public int LengthOfYear()
        {
            return IExecute<int>("lengthOfYear");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#format(java.time.format.DateTimeFormatter)
        /// </summary>
        public string Format(Java.Time.Format.DateTimeFormatter arg0)
        {
            return IExecute<string>("format", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#until(java.time.chrono.ChronoLocalDate)
        /// </summary>
        public Java.Time.Chrono.ChronoPeriod Until(Java.Time.Chrono.ChronoLocalDate arg0)
        {
            return IExecute<Java.Time.Chrono.ChronoPeriod>("until", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#minusDays(long)
        /// </summary>
        public Java.Time.LocalDate MinusDays(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("minusDays", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#minusMonths(long)
        /// </summary>
        public Java.Time.LocalDate MinusMonths(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("minusMonths", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#minusWeeks(long)
        /// </summary>
        public Java.Time.LocalDate MinusWeeks(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("minusWeeks", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#minusYears(long)
        /// </summary>
        public Java.Time.LocalDate MinusYears(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("minusYears", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#plusDays(long)
        /// </summary>
        public Java.Time.LocalDate PlusDays(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("plusDays", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#plusMonths(long)
        /// </summary>
        public Java.Time.LocalDate PlusMonths(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("plusMonths", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#plusWeeks(long)
        /// </summary>
        public Java.Time.LocalDate PlusWeeks(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("plusWeeks", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#plusYears(long)
        /// </summary>
        public Java.Time.LocalDate PlusYears(long arg0)
        {
            return IExecute<Java.Time.LocalDate>("plusYears", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#withDayOfMonth(int)
        /// </summary>
        public Java.Time.LocalDate WithDayOfMonth(int arg0)
        {
            return IExecute<Java.Time.LocalDate>("withDayOfMonth", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#withDayOfYear(int)
        /// </summary>
        public Java.Time.LocalDate WithDayOfYear(int arg0)
        {
            return IExecute<Java.Time.LocalDate>("withDayOfYear", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#withMonth(int)
        /// </summary>
        public Java.Time.LocalDate WithMonth(int arg0)
        {
            return IExecute<Java.Time.LocalDate>("withMonth", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#withYear(int)
        /// </summary>
        public Java.Time.LocalDate WithYear(int arg0)
        {
            return IExecute<Java.Time.LocalDate>("withYear", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#atStartOfDay()
        /// </summary>
        public Java.Time.LocalDateTime AtStartOfDay()
        {
            return IExecute<Java.Time.LocalDateTime>("atStartOfDay");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#atTime(int,int,int,int)
        /// </summary>
        public Java.Time.LocalDateTime AtTime(int arg0, int arg1, int arg2, int arg3)
        {
            return IExecute<Java.Time.LocalDateTime>("atTime", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#atTime(int,int,int)
        /// </summary>
        public Java.Time.LocalDateTime AtTime(int arg0, int arg1, int arg2)
        {
            return IExecute<Java.Time.LocalDateTime>("atTime", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#atTime(int,int)
        /// </summary>
        public Java.Time.LocalDateTime AtTime(int arg0, int arg1)
        {
            return IExecute<Java.Time.LocalDateTime>("atTime", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#atTime(java.time.OffsetTime)
        /// </summary>
        public Java.Time.OffsetDateTime AtTime(Java.Time.OffsetTime arg0)
        {
            return IExecute<Java.Time.OffsetDateTime>("atTime", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#adjustInto(java.time.temporal.Temporal)
        /// </summary>
        public Java.Time.Temporal.Temporal AdjustInto(Java.Time.Temporal.Temporal arg0)
        {
            return IExecute<Java.Time.Temporal.Temporal>("adjustInto", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#range(java.time.temporal.TemporalField)
        /// </summary>
        public Java.Time.Temporal.ValueRange Range(Java.Time.Temporal.TemporalField arg0)
        {
            return IExecute<Java.Time.Temporal.ValueRange>("range", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#atStartOfDay(java.time.ZoneId)
        /// </summary>
        public Java.Time.ZonedDateTime AtStartOfDay(Java.Time.ZoneId arg0)
        {
            return IExecute<Java.Time.ZonedDateTime>("atStartOfDay", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#getLong(java.time.temporal.TemporalField)
        /// </summary>
        public long GetLong(Java.Time.Temporal.TemporalField arg0)
        {
            return IExecute<long>("getLong", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#toEpochDay()
        /// </summary>
        public long ToEpochDay()
        {
            return IExecute<long>("toEpochDay");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#toEpochSecond(java.time.LocalTime,java.time.ZoneOffset)
        /// </summary>
        public long ToEpochSecond(Java.Time.LocalTime arg0, Java.Time.ZoneOffset arg1)
        {
            return IExecute<long>("toEpochSecond", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html#until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)
        /// </summary>
        public long Until(Java.Time.Temporal.Temporal arg0, Java.Time.Temporal.TemporalUnit arg1)
        {
            return IExecute<long>("until", arg0, arg1);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}