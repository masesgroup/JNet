/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Util.Concurrent
{
    #region TimeUnit
    public partial class TimeUnit
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#DAYS
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit DAYS => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("DAYS");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#HOURS
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit HOURS => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("HOURS");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#MICROSECONDS
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit MICROSECONDS => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("MICROSECONDS");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#MILLISECONDS
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit MILLISECONDS => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("MILLISECONDS");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#MINUTES
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit MINUTES => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("MINUTES");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#NANOSECONDS
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit NANOSECONDS => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("NANOSECONDS");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#SECONDS
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit SECONDS => Clazz.GetField<Java.Util.Concurrent.TimeUnit>("SECONDS");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#values()
        /// </summary>
        public static Java.Util.Concurrent.TimeUnit[] Values()
        {
            return SExecuteArray<Java.Util.Concurrent.TimeUnit>("values");
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#convert(java.time.Duration)
        /// </summary>
        public long Convert(Java.Time.Duration arg0)
        {
            return IExecute<long>("convert", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toDays(long)
        /// </summary>
        public long ToDays(long arg0)
        {
            return IExecute<long>("toDays", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toHours(long)
        /// </summary>
        public long ToHours(long arg0)
        {
            return IExecute<long>("toHours", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toMicros(long)
        /// </summary>
        public long ToMicros(long arg0)
        {
            return IExecute<long>("toMicros", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toMillis(long)
        /// </summary>
        public long ToMillis(long arg0)
        {
            return IExecute<long>("toMillis", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toMinutes(long)
        /// </summary>
        public long ToMinutes(long arg0)
        {
            return IExecute<long>("toMinutes", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toNanos(long)
        /// </summary>
        public long ToNanos(long arg0)
        {
            return IExecute<long>("toNanos", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#toSeconds(long)
        /// </summary>
        public long ToSeconds(long arg0)
        {
            return IExecute<long>("toSeconds", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#sleep(long) throws java.lang.InterruptedException
        /// </summary>
        public void Sleep(long arg0)
        {
            IExecute("sleep", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#timedJoin(java.lang.Thread,long) throws java.lang.InterruptedException
        /// </summary>
        public void TimedJoin(Java.Lang.Thread arg0, long arg1)
        {
            IExecute("timedJoin", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/TimeUnit.html#timedWait(java.lang.Object,long) throws java.lang.InterruptedException
        /// </summary>
        public void TimedWait(object arg0, long arg1)
        {
            IExecute("timedWait", arg0, arg1);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}