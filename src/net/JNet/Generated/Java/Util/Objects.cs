/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Util
{
    #region Objects
    public partial class Objects
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#requireNonNull(T,java.lang.String)
        /// </summary>
        public static object RequireNonNull(object arg0, string arg1)
        {
            return SExecute("requireNonNull", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#requireNonNull(T)
        /// </summary>
        public static object RequireNonNull(object arg0)
        {
            return SExecute("requireNonNull", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#requireNonNullElse(T,T)
        /// </summary>
        public static object RequireNonNullElse(object arg0, object arg1)
        {
            return SExecute("requireNonNullElse", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#deepEquals(java.lang.Object,java.lang.Object)
        /// </summary>
        public static bool DeepEquals(object arg0, object arg1)
        {
            return SExecute<bool>("deepEquals", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#equals(java.lang.Object,java.lang.Object)
        /// </summary>
        public static bool Equals(object arg0, object arg1)
        {
            return SExecute<bool>("equals", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#isNull(java.lang.Object)
        /// </summary>
        public static bool IsNull(object arg0)
        {
            return SExecute<bool>("isNull", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#nonNull(java.lang.Object)
        /// </summary>
        public static bool NonNull(object arg0)
        {
            return SExecute<bool>("nonNull", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#checkFromIndexSize(int,int,int)
        /// </summary>
        public static int CheckFromIndexSize(int arg0, int arg1, int arg2)
        {
            return SExecute<int>("checkFromIndexSize", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#checkFromToIndex(int,int,int)
        /// </summary>
        public static int CheckFromToIndex(int arg0, int arg1, int arg2)
        {
            return SExecute<int>("checkFromToIndex", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#checkIndex(int,int)
        /// </summary>
        public static int CheckIndex(int arg0, int arg1)
        {
            return SExecute<int>("checkIndex", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#hash(java.lang.Object...)
        /// </summary>
        public static int Hash(params object[] arg0)
        {
            if (arg0.Length == 0) return SExecute<int>("hash"); else return SExecute<int>("hash", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#hashCode(java.lang.Object)
        /// </summary>
        public static int HashCode(object arg0)
        {
            return SExecute<int>("hashCode", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#toString(java.lang.Object,java.lang.String)
        /// </summary>
        public static string ToString(object arg0, string arg1)
        {
            return SExecute<string>("toString", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Objects.html#toString(java.lang.Object)
        /// </summary>
        public static string ToString(object arg0)
        {
            return SExecute<string>("toString", arg0);
        }
        
        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}