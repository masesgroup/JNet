/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Java.Util
{
    #region Collections declaration
    /// <summary>
    /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html"/>
    /// </summary>
    public partial class Collections : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Collections>
    {
        const string _bridgeClassName = "java.util.Collections";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Collections() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public Collections(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Collections(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region Collections implementation
    public partial class Collections
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#EMPTY_LIST"/>
        /// </summary>
        public static Java.Util.List EMPTY_LIST { get { if (!_EMPTY_LISTReady) { _EMPTY_LISTContent = SGetField<Java.Util.List>(LocalBridgeClazz, "EMPTY_LIST"); _EMPTY_LISTReady = true; } return _EMPTY_LISTContent; } }
        private static Java.Util.List _EMPTY_LISTContent = default;
        private static bool _EMPTY_LISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#EMPTY_MAP"/>
        /// </summary>
        public static Java.Util.Map EMPTY_MAP { get { if (!_EMPTY_MAPReady) { _EMPTY_MAPContent = SGetField<Java.Util.Map>(LocalBridgeClazz, "EMPTY_MAP"); _EMPTY_MAPReady = true; } return _EMPTY_MAPContent; } }
        private static Java.Util.Map _EMPTY_MAPContent = default;
        private static bool _EMPTY_MAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#EMPTY_SET"/>
        /// </summary>
        public static Java.Util.Set EMPTY_SET { get { if (!_EMPTY_SETReady) { _EMPTY_SETContent = SGetField<Java.Util.Set>(LocalBridgeClazz, "EMPTY_SET"); _EMPTY_SETReady = true; } return _EMPTY_SETContent; } }
        private static Java.Util.Set _EMPTY_SETContent = default;
        private static bool _EMPTY_SETReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedCollection(java.util.Collection,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Collection CheckedCollectionMethod(Java.Util.Collection arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<Java.Util.Collection>(LocalBridgeClazz, "checkedCollection", "(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedList(java.util.List,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.List CheckedListMethod(Java.Util.List arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<Java.Util.List>(LocalBridgeClazz, "checkedList", "(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedNavigableSet(java.util.NavigableSet,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableSet CheckedNavigableSetMethod(Java.Util.NavigableSet arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<Java.Util.NavigableSet>(LocalBridgeClazz, "checkedNavigableSet", "(Ljava/util/NavigableSet;Ljava/lang/Class;)Ljava/util/NavigableSet;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyNavigableSet()"/>
        /// </summary>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableSet EmptyNavigableSet()
        {
            return SExecuteWithSignature<Java.Util.NavigableSet>(LocalBridgeClazz, "emptyNavigableSet", "()Ljava/util/NavigableSet;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedQueue(java.util.Queue,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Queue CheckedQueueMethod(Java.Util.Queue arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<Java.Util.Queue>(LocalBridgeClazz, "checkedQueue", "(Ljava/util/Queue;Ljava/lang/Class;)Ljava/util/Queue;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedSet(java.util.Set,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Set CheckedSetMethod(Java.Util.Set arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<Java.Util.Set>(LocalBridgeClazz, "checkedSet", "(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#newSetFromMap(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Set NewSetFromMap(Java.Util.Map<, > arg0)
        {
            return SExecuteWithSignature<Java.Util.Set>(LocalBridgeClazz, "newSetFromMap", "(Ljava/util/Map;)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedSortedSet(java.util.SortedSet,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedSet CheckedSortedSetMethod(Java.Util.SortedSet arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<Java.Util.SortedSet>(LocalBridgeClazz, "checkedSortedSet", "(Ljava/util/SortedSet;Ljava/lang/Class;)Ljava/util/SortedSet;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptySortedSet()"/>
        /// </summary>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedSet EmptySortedSet()
        {
            return SExecuteWithSignature<Java.Util.SortedSet>(LocalBridgeClazz, "emptySortedSet", "()Ljava/util/SortedSet;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedMap(java.util.Map,java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <param name="arg2"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Map<, > CheckedMapMethod<, >(Java.Util.Map<, > arg0, Java.Lang.Class arg1, Java.Lang.Class arg2)
        {
            return SExecuteWithSignature<Java.Util.Map<, >>(LocalBridgeClazz, "checkedMap", "(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#singletonMap(java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Map<, > SingletonMapMethod<, >(K arg0, V arg1)
        {
            return SExecuteWithSignature<Java.Util.Map<, >>(LocalBridgeClazz, "singletonMap", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedMap(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Map<, > SynchronizedMapMethod<, >(Java.Util.Map<, > arg0)
        {
            return SExecuteWithSignature<Java.Util.Map<, >>(LocalBridgeClazz, "synchronizedMap", "(Ljava/util/Map;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableMap(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <typeparam name="Arg0ExtendsK"><see cref=""/></typeparam>
        /// <typeparam name="Arg0ExtendsV"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Map<, > UnmodifiableMapMethod<, , , >(Java.Util.Map<, > arg0) where Arg0ExtendsK : K where Arg0ExtendsV : V
        {
            return SExecuteWithSignature<Java.Util.Map<, >>(LocalBridgeClazz, "unmodifiableMap", "(Ljava/util/Map;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedNavigableMap(java.util.NavigableMap,java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <param name="arg2"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableMap<, > CheckedNavigableMapMethod<, >(Java.Util.NavigableMap<, > arg0, Java.Lang.Class arg1, Java.Lang.Class arg2)
        {
            return SExecuteWithSignature<Java.Util.NavigableMap<, >>(LocalBridgeClazz, "checkedNavigableMap", "(Ljava/util/NavigableMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/NavigableMap;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedNavigableMap(java.util.NavigableMap)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableMap<, > SynchronizedNavigableMapMethod<, >(Java.Util.NavigableMap<, > arg0)
        {
            return SExecuteWithSignature<Java.Util.NavigableMap<, >>(LocalBridgeClazz, "synchronizedNavigableMap", "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableNavigableMap(java.util.NavigableMap)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <typeparam name="Arg0ExtendsV"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableMap<, > UnmodifiableNavigableMapMethod<, , >(Java.Util.NavigableMap<, > arg0) where Arg0ExtendsV : V
        {
            return SExecuteWithSignature<Java.Util.NavigableMap<, >>(LocalBridgeClazz, "unmodifiableNavigableMap", "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#checkedSortedMap(java.util.SortedMap,java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <param name="arg2"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedMap<, > CheckedSortedMapMethod<, >(Java.Util.SortedMap<, > arg0, Java.Lang.Class arg1, Java.Lang.Class arg2)
        {
            return SExecuteWithSignature<Java.Util.SortedMap<, >>(LocalBridgeClazz, "checkedSortedMap", "(Ljava/util/SortedMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/SortedMap;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedSortedMap(java.util.SortedMap)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedMap<, > SynchronizedSortedMapMethod<, >(Java.Util.SortedMap<, > arg0)
        {
            return SExecuteWithSignature<Java.Util.SortedMap<, >>(LocalBridgeClazz, "synchronizedSortedMap", "(Ljava/util/SortedMap;)Ljava/util/SortedMap;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableSortedMap(java.util.SortedMap)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <typeparam name="Arg0ExtendsV"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedMap<, > UnmodifiableSortedMapMethod<, , >(Java.Util.SortedMap<, > arg0) where Arg0ExtendsV : V
        {
            return SExecuteWithSignature<Java.Util.SortedMap<, >>(LocalBridgeClazz, "unmodifiableSortedMap", "(Ljava/util/SortedMap;)Ljava/util/SortedMap;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#addAll(java.util.Collection,java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="Arg0objectSuperT"><see cref=""/></typeparam>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static bool AddAll<, >(Java.Util.Collection arg0, params T[] arg1) where Arg0objectSuperT : T
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "addAll", "(Ljava/util/Collection;[Ljava/lang/Object;)Z", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg1, arg0));
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#replaceAll(java.util.List,java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <param name="arg2"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static bool ReplaceAll(Java.Util.List arg0, T arg1, T arg2)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "replaceAll", "(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Object;)Z", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#binarySearch(java.util.List,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="Arg0ExtendsJava_Lang_Comparable"><see cref=""/></typeparam>
        /// <typeparam name="Arg0objectSuperT"><see cref=""/></typeparam>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static int BinarySearch<, , >(Java.Util.List arg0, T arg1) where Arg0ExtendsJava_Lang_Comparable : Java.Lang.Comparable where Arg0objectSuperT : T
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "binarySearch", "(Ljava/util/List;Ljava/lang/Object;)I", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#binarySearch(java.util.List,java.lang.Object,java.util.Comparator)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <param name="arg2"><see cref=""/></param>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg2objectSuperT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static int BinarySearch<, , >(Java.Util.List arg0, T arg1, Java.Util.Comparator arg2) where Arg0ExtendsT : T where Arg2objectSuperT : T
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "binarySearch", "(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#list(java.util.Enumeration)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.ArrayList List(Java.Util.Enumeration arg0)
        {
            return SExecuteWithSignature<Java.Util.ArrayList>(LocalBridgeClazz, "list", "(Ljava/util/Enumeration;)Ljava/util/ArrayList;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedCollection(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Collection SynchronizedCollectionMethod(Java.Util.Collection arg0)
        {
            return SExecuteWithSignature<Java.Util.Collection>(LocalBridgeClazz, "synchronizedCollection", "(Ljava/util/Collection;)Ljava/util/Collection;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableCollection(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Collection UnmodifiableCollectionMethod<, >(Java.Util.Collection arg0) where Arg0ExtendsT : T
        {
            return SExecuteWithSignature<Java.Util.Collection>(LocalBridgeClazz, "unmodifiableCollection", "(Ljava/util/Collection;)Ljava/util/Collection;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#reverseOrder()"/>
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Comparator ReverseOrder()
        {
            return SExecuteWithSignature<Java.Util.Comparator>(LocalBridgeClazz, "reverseOrder", "()Ljava/util/Comparator;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#reverseOrder(java.util.Comparator)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Comparator ReverseOrder(Java.Util.Comparator arg0)
        {
            return SExecuteWithSignature<Java.Util.Comparator>(LocalBridgeClazz, "reverseOrder", "(Ljava/util/Comparator;)Ljava/util/Comparator;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyEnumeration()"/>
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Enumeration EmptyEnumerationMethod()
        {
            return SExecuteWithSignature<Java.Util.Enumeration>(LocalBridgeClazz, "emptyEnumeration", "()Ljava/util/Enumeration;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#enumeration(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Enumeration Enumeration(Java.Util.Collection arg0)
        {
            return SExecuteWithSignature<Java.Util.Enumeration>(LocalBridgeClazz, "enumeration", "(Ljava/util/Collection;)Ljava/util/Enumeration;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyIterator()"/>
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Iterator EmptyIteratorMethod()
        {
            return SExecuteWithSignature<Java.Util.Iterator>(LocalBridgeClazz, "emptyIterator", "()Ljava/util/Iterator;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#nCopies(int,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.List NCopies(int arg0, T arg1)
        {
            return SExecuteWithSignature<Java.Util.List>(LocalBridgeClazz, "nCopies", "(ILjava/lang/Object;)Ljava/util/List;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#singletonList(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.List SingletonListMethod(T arg0)
        {
            return SExecuteWithSignature<Java.Util.List>(LocalBridgeClazz, "singletonList", "(Ljava/lang/Object;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedList(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.List SynchronizedListMethod(Java.Util.List arg0)
        {
            return SExecuteWithSignature<Java.Util.List>(LocalBridgeClazz, "synchronizedList", "(Ljava/util/List;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableList(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.List UnmodifiableListMethod<, >(Java.Util.List arg0) where Arg0ExtendsT : T
        {
            return SExecuteWithSignature<Java.Util.List>(LocalBridgeClazz, "unmodifiableList", "(Ljava/util/List;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyListIterator()"/>
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.ListIterator EmptyListIteratorMethod()
        {
            return SExecuteWithSignature<Java.Util.ListIterator>(LocalBridgeClazz, "emptyListIterator", "()Ljava/util/ListIterator;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedNavigableSet(java.util.NavigableSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableSet SynchronizedNavigableSetMethod(Java.Util.NavigableSet arg0)
        {
            return SExecuteWithSignature<Java.Util.NavigableSet>(LocalBridgeClazz, "synchronizedNavigableSet", "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableNavigableSet(java.util.NavigableSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableSet UnmodifiableNavigableSetMethod(Java.Util.NavigableSet arg0)
        {
            return SExecuteWithSignature<Java.Util.NavigableSet>(LocalBridgeClazz, "unmodifiableNavigableSet", "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#asLifoQueue(java.util.Deque)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Queue AsLifoQueue(Java.Util.Deque arg0)
        {
            return SExecuteWithSignature<Java.Util.Queue>(LocalBridgeClazz, "asLifoQueue", "(Ljava/util/Deque;)Ljava/util/Queue;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#singleton(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Set Singleton(T arg0)
        {
            return SExecuteWithSignature<Java.Util.Set>(LocalBridgeClazz, "singleton", "(Ljava/lang/Object;)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedSet(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Set SynchronizedSetMethod(Java.Util.Set arg0)
        {
            return SExecuteWithSignature<Java.Util.Set>(LocalBridgeClazz, "synchronizedSet", "(Ljava/util/Set;)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableSet(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Set UnmodifiableSetMethod<, >(Java.Util.Set arg0) where Arg0ExtendsT : T
        {
            return SExecuteWithSignature<Java.Util.Set>(LocalBridgeClazz, "unmodifiableSet", "(Ljava/util/Set;)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedSortedSet(java.util.SortedSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedSet SynchronizedSortedSetMethod(Java.Util.SortedSet arg0)
        {
            return SExecuteWithSignature<Java.Util.SortedSet>(LocalBridgeClazz, "synchronizedSortedSet", "(Ljava/util/SortedSet;)Ljava/util/SortedSet;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#unmodifiableSortedSet(java.util.SortedSet)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedSet UnmodifiableSortedSetMethod(Java.Util.SortedSet arg0)
        {
            return SExecuteWithSignature<Java.Util.SortedSet>(LocalBridgeClazz, "unmodifiableSortedSet", "(Ljava/util/SortedSet;)Ljava/util/SortedSet;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#max(java.util.Collection,java.util.Comparator)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <typeparam name="Arg1objectSuperT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static T Max<, , >(Java.Util.Collection arg0, Java.Util.Comparator arg1) where Arg0ExtendsT : T where Arg1objectSuperT : T
        {
            return SExecuteWithSignature<T>(LocalBridgeClazz, "max", "(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#max(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static T Max<, >(Java.Util.Collection arg0) where Arg0ExtendsT : T
        {
            return SExecute<T>(LocalBridgeClazz, "max", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#min(java.util.Collection,java.util.Comparator)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <typeparam name="Arg1objectSuperT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static T Min<, , >(Java.Util.Collection arg0, Java.Util.Comparator arg1) where Arg0ExtendsT : T where Arg1objectSuperT : T
        {
            return SExecuteWithSignature<T>(LocalBridgeClazz, "min", "(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#min(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg0ExtendsT"><see cref=""/></typeparam>
        /// <returns><see cref=""/></returns>
        public static T Min<, >(Java.Util.Collection arg0) where Arg0ExtendsT : T
        {
            return SExecute<T>(LocalBridgeClazz, "min", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#copy(java.util.List,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="Arg0objectSuperT"><see cref=""/></typeparam>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg1ExtendsT"><see cref=""/></typeparam>
        public static void Copy<, , >(Java.Util.List arg0, Java.Util.List arg1) where Arg0objectSuperT : T where Arg1ExtendsT : T
        {
            SExecuteWithSignature(LocalBridgeClazz, "copy", "(Ljava/util/List;Ljava/util/List;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#fill(java.util.List,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="Arg0objectSuperT"><see cref=""/></typeparam>
        /// <typeparam name="T"></typeparam>
        public static void Fill<, >(Java.Util.List arg0, T arg1) where Arg0objectSuperT : T
        {
            SExecuteWithSignature(LocalBridgeClazz, "fill", "(Ljava/util/List;Ljava/lang/Object;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#sort(java.util.List,java.util.Comparator)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        /// <typeparam name="Arg1objectSuperT"><see cref=""/></typeparam>
        public static void Sort<, >(Java.Util.List arg0, Java.Util.Comparator arg1) where Arg1objectSuperT : T
        {
            SExecuteWithSignature(LocalBridgeClazz, "sort", "(Ljava/util/List;Ljava/util/Comparator;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#sort(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <typeparam name="T"></typeparam>
        public static void Sort(Java.Util.List arg0)
        {
            SExecute(LocalBridgeClazz, "sort", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#disjoint(java.util.Collection,java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <returns><see cref=""/></returns>
        public static bool Disjoint(Java.Util.Collection arg0, Java.Util.Collection arg1)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "disjoint", "(Ljava/util/Collection;Ljava/util/Collection;)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyMap()"/>
        /// </summary>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Map<, > EmptyMapMethod<, >()
        {
            return SExecuteWithSignature<Java.Util.Map<, >>(LocalBridgeClazz, "emptyMap", "()Ljava/util/Map;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyNavigableMap()"/>
        /// </summary>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.NavigableMap<, > EmptyNavigableMap<, >()
        {
            return SExecuteWithSignature<Java.Util.NavigableMap<, >>(LocalBridgeClazz, "emptyNavigableMap", "()Ljava/util/NavigableMap;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptySortedMap()"/>
        /// </summary>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.SortedMap<, > EmptySortedMap<, >()
        {
            return SExecuteWithSignature<Java.Util.SortedMap<, >>(LocalBridgeClazz, "emptySortedMap", "()Ljava/util/SortedMap;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptyList()"/>
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.List EmptyListMethod()
        {
            return SExecuteWithSignature<Java.Util.List>(LocalBridgeClazz, "emptyList", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#emptySet()"/>
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref=""/></returns>
        public static Java.Util.Set EmptySetMethod()
        {
            return SExecuteWithSignature<Java.Util.Set>(LocalBridgeClazz, "emptySet", "()Ljava/util/Set;");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#frequency(java.util.Collection,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <returns><see cref=""/></returns>
        public static int Frequency(Java.Util.Collection arg0, object arg1)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "frequency", "(Ljava/util/Collection;Ljava/lang/Object;)I", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#indexOfSubList(java.util.List,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <returns><see cref=""/></returns>
        public static int IndexOfSubList(Java.Util.List arg0, Java.Util.List arg1)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "indexOfSubList", "(Ljava/util/List;Ljava/util/List;)I", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#lastIndexOfSubList(java.util.List,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <returns><see cref=""/></returns>
        public static int LastIndexOfSubList(Java.Util.List arg0, Java.Util.List arg1)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "lastIndexOfSubList", "(Ljava/util/List;Ljava/util/List;)I", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#reverse(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        public static void Reverse(Java.Util.List arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "reverse", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#rotate(java.util.List,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        public static void Rotate(Java.Util.List arg0, int arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "rotate", "(Ljava/util/List;I)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#shuffle(java.util.List,java.util.Random)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        public static void Shuffle(Java.Util.List arg0, Java.Util.Random arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "shuffle", "(Ljava/util/List;Ljava/util/Random;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#shuffle(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        public static void Shuffle(Java.Util.List arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "shuffle", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#swap(java.util.List,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <param name="arg1"><see cref=""/></param>
        /// <param name="arg2"><see cref=""/></param>
        public static void Swap(Java.Util.List arg0, int arg1, int arg2)
        {
            SExecuteWithSignature(LocalBridgeClazz, "swap", "(Ljava/util/List;II)V", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}