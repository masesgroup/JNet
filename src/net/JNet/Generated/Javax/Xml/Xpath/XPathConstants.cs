/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.2.3.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Xml.Xpath
{
    #region XPathConstants
    public partial class XPathConstants
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/xpath/XPathConstants.html#DOM_OBJECT_MODEL"/>
        /// </summary>
        public static string DOM_OBJECT_MODEL { get { if (!_DOM_OBJECT_MODELReady) { _DOM_OBJECT_MODELContent = SGetField<string>(LocalBridgeClazz, "DOM_OBJECT_MODEL"); _DOM_OBJECT_MODELReady = true; } return _DOM_OBJECT_MODELContent; } }
        private static string _DOM_OBJECT_MODELContent = default;
        private static bool _DOM_OBJECT_MODELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/xpath/XPathConstants.html#BOOLEAN"/>
        /// </summary>
        public static Javax.Xml.Namespace.QName BOOLEAN { get { if (!_BOOLEANReady) { _BOOLEANContent = SGetField<Javax.Xml.Namespace.QName>(LocalBridgeClazz, "BOOLEAN"); _BOOLEANReady = true; } return _BOOLEANContent; } }
        private static Javax.Xml.Namespace.QName _BOOLEANContent = default;
        private static bool _BOOLEANReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/xpath/XPathConstants.html#NODE"/>
        /// </summary>
        public static Javax.Xml.Namespace.QName NODE { get { if (!_NODEReady) { _NODEContent = SGetField<Javax.Xml.Namespace.QName>(LocalBridgeClazz, "NODE"); _NODEReady = true; } return _NODEContent; } }
        private static Javax.Xml.Namespace.QName _NODEContent = default;
        private static bool _NODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/xpath/XPathConstants.html#NODESET"/>
        /// </summary>
        public static Javax.Xml.Namespace.QName NODESET { get { if (!_NODESETReady) { _NODESETContent = SGetField<Javax.Xml.Namespace.QName>(LocalBridgeClazz, "NODESET"); _NODESETReady = true; } return _NODESETContent; } }
        private static Javax.Xml.Namespace.QName _NODESETContent = default;
        private static bool _NODESETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/xpath/XPathConstants.html#NUMBER"/>
        /// </summary>
        public static Javax.Xml.Namespace.QName NUMBER { get { if (!_NUMBERReady) { _NUMBERContent = SGetField<Javax.Xml.Namespace.QName>(LocalBridgeClazz, "NUMBER"); _NUMBERReady = true; } return _NUMBERContent; } }
        private static Javax.Xml.Namespace.QName _NUMBERContent = default;
        private static bool _NUMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/xpath/XPathConstants.html#STRING"/>
        /// </summary>
        public static Javax.Xml.Namespace.QName STRING { get { if (!_STRINGReady) { _STRINGContent = SGetField<Javax.Xml.Namespace.QName>(LocalBridgeClazz, "STRING"); _STRINGReady = true; } return _STRINGContent; } }
        private static Javax.Xml.Namespace.QName _STRINGContent = default;
        private static bool _STRINGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}