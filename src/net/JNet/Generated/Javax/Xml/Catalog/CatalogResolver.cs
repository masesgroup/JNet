/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Xml.Catalog
{
    #region CatalogResolver
    public partial class CatalogResolver
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Org.Xml.Sax.EntityResolver(Javax.Xml.Catalog.CatalogResolver t) => t.Cast<Org.Xml.Sax.EntityResolver>();
        public static implicit operator Javax.Xml.Stream.XMLResolver(Javax.Xml.Catalog.CatalogResolver t) => t.Cast<Javax.Xml.Stream.XMLResolver>();
        public static implicit operator Javax.Xml.Transform.URIResolver(Javax.Xml.Catalog.CatalogResolver t) => t.Cast<Javax.Xml.Transform.URIResolver>();
        public static implicit operator Org.W3c.Dom.Ls.LSResourceResolver(Javax.Xml.Catalog.CatalogResolver t) => t.Cast<Org.W3c.Dom.Ls.LSResourceResolver>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/catalog/CatalogResolver.html#resolve(java.lang.String,java.lang.String)
        /// </summary>
        public Javax.Xml.Transform.Source Resolve(string arg0, string arg1)
        {
            return IExecute<Javax.Xml.Transform.Source>("resolve", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/catalog/CatalogResolver.html#resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
        /// </summary>
        public Org.W3c.Dom.Ls.LSInput ResolveResource(string arg0, string arg1, string arg2, string arg3, string arg4)
        {
            return IExecute<Org.W3c.Dom.Ls.LSInput>("resolveResource", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/catalog/CatalogResolver.html#resolveEntity(java.lang.String,java.lang.String)
        /// </summary>
        public Org.Xml.Sax.InputSource ResolveEntity(string arg0, string arg1)
        {
            return IExecute<Org.Xml.Sax.InputSource>("resolveEntity", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/javax/xml/catalog/CatalogResolver.html#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws javax.xml.stream.XMLStreamException
        /// </summary>
        public object ResolveEntity(string arg0, string arg1, string arg2, string arg3)
        {
            return IExecute("resolveEntity", arg0, arg1, arg2, arg3);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}