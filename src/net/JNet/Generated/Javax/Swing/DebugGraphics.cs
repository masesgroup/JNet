/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing
{
    #region DebugGraphics
    public partial class DebugGraphics
    {
        #region Constructors
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#<init>(java.awt.Graphics,javax.swing.JComponent)
        /// </summary>
        public DebugGraphics(Java.Awt.Graphics arg0, Javax.Swing.JComponent arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#<init>(java.awt.Graphics)
        /// </summary>
        public DebugGraphics(Java.Awt.Graphics arg0)
            : base(arg0)
        {
        }
        
        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#BUFFERED_OPTION
        /// </summary>
        public static int BUFFERED_OPTION => Clazz.GetField<int>("BUFFERED_OPTION");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#FLASH_OPTION
        /// </summary>
        public static int FLASH_OPTION => Clazz.GetField<int>("FLASH_OPTION");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#LOG_OPTION
        /// </summary>
        public static int LOG_OPTION => Clazz.GetField<int>("LOG_OPTION");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#NONE_OPTION
        /// </summary>
        public static int NONE_OPTION => Clazz.GetField<int>("NONE_OPTION");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#flashCount()
        /// </summary>
        public static int FlashCount()
        {
            return SExecute<int>("flashCount");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#flashTime()
        /// </summary>
        public static int FlashTime()
        {
            return SExecute<int>("flashTime");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#flashColor()
        /// </summary>
        public static Java.Awt.Color FlashColor()
        {
            return SExecute<Java.Awt.Color>("flashColor");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#logStream()
        /// </summary>
        public static Java.Io.PrintStream LogStream()
        {
            return SExecute<Java.Io.PrintStream>("logStream");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#setFlashColor(java.awt.Color)
        /// </summary>
        public static void SetFlashColor(Java.Awt.Color arg0)
        {
            SExecute("setFlashColor", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#setFlashCount(int)
        /// </summary>
        public static void SetFlashCount(int arg0)
        {
            SExecute("setFlashCount", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#setFlashTime(int)
        /// </summary>
        public static void SetFlashTime(int arg0)
        {
            SExecute("setFlashTime", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#setLogStream(java.io.PrintStream)
        /// </summary>
        public static void SetLogStream(Java.Io.PrintStream arg0)
        {
            SExecute("setLogStream", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#getDebugOptions() https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#setDebugOptions(int)
        /// </summary>
        public int DebugOptions
        {
            get { return IExecute<int>("getDebugOptions"); } set { IExecute("setDebugOptions", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/DebugGraphics.html#isDrawingBuffer()
        /// </summary>
        public bool IsDrawingBuffer()
        {
            return IExecute<bool>("isDrawingBuffer");
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}