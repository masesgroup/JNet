/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing
{
    #region RepaintManager
    public partial class RepaintManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#currentManager(java.awt.Component)
        /// </summary>
        public static Javax.Swing.RepaintManager CurrentManager(Java.Awt.Component arg0)
        {
            return SExecute<Javax.Swing.RepaintManager>("currentManager", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#currentManager(javax.swing.JComponent)
        /// </summary>
        public static Javax.Swing.RepaintManager CurrentManager(Javax.Swing.JComponent arg0)
        {
            return SExecute<Javax.Swing.RepaintManager>("currentManager", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#setCurrentManager(javax.swing.RepaintManager)
        /// </summary>
        public static void SetCurrentManager(Javax.Swing.RepaintManager arg0)
        {
            SExecute("setCurrentManager", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#getDoubleBufferMaximumSize() https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#setDoubleBufferMaximumSize(java.awt.Dimension)
        /// </summary>
        public Java.Awt.Dimension DoubleBufferMaximumSize
        {
            get { return IExecute<Java.Awt.Dimension>("getDoubleBufferMaximumSize"); } set { IExecute("setDoubleBufferMaximumSize", value); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#isCompletelyDirty(javax.swing.JComponent)
        /// </summary>
        public bool IsCompletelyDirty(Javax.Swing.JComponent arg0)
        {
            return IExecute<bool>("isCompletelyDirty", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#isDoubleBufferingEnabled()
        /// </summary>
        public bool IsDoubleBufferingEnabled()
        {
            return IExecute<bool>("isDoubleBufferingEnabled");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#getOffscreenBuffer(java.awt.Component,int,int)
        /// </summary>
        public Java.Awt.Image GetOffscreenBuffer(Java.Awt.Component arg0, int arg1, int arg2)
        {
            return IExecute<Java.Awt.Image>("getOffscreenBuffer", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#getVolatileOffscreenBuffer(java.awt.Component,int,int)
        /// </summary>
        public Java.Awt.Image GetVolatileOffscreenBuffer(Java.Awt.Component arg0, int arg1, int arg2)
        {
            return IExecute<Java.Awt.Image>("getVolatileOffscreenBuffer", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#getDirtyRegion(javax.swing.JComponent)
        /// </summary>
        public Java.Awt.Rectangle GetDirtyRegion(Javax.Swing.JComponent arg0)
        {
            return IExecute<Java.Awt.Rectangle>("getDirtyRegion", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#addInvalidComponent(javax.swing.JComponent)
        /// </summary>
        public void AddInvalidComponent(Javax.Swing.JComponent arg0)
        {
            IExecute("addInvalidComponent", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#removeInvalidComponent(javax.swing.JComponent)
        /// </summary>
        public void RemoveInvalidComponent(Javax.Swing.JComponent arg0)
        {
            IExecute("removeInvalidComponent", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#addDirtyRegion(java.awt.Window,int,int,int,int)
        /// </summary>
        public void AddDirtyRegion(Java.Awt.Window arg0, int arg1, int arg2, int arg3, int arg4)
        {
            IExecute("addDirtyRegion", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#addDirtyRegion(javax.swing.JComponent,int,int,int,int)
        /// </summary>
        public void AddDirtyRegion(Javax.Swing.JComponent arg0, int arg1, int arg2, int arg3, int arg4)
        {
            IExecute("addDirtyRegion", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#markCompletelyClean(javax.swing.JComponent)
        /// </summary>
        public void MarkCompletelyClean(Javax.Swing.JComponent arg0)
        {
            IExecute("markCompletelyClean", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#markCompletelyDirty(javax.swing.JComponent)
        /// </summary>
        public void MarkCompletelyDirty(Javax.Swing.JComponent arg0)
        {
            IExecute("markCompletelyDirty", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#paintDirtyRegions()
        /// </summary>
        public void PaintDirtyRegions()
        {
            IExecute("paintDirtyRegions");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#setDoubleBufferingEnabled(boolean)
        /// </summary>
        public void SetDoubleBufferingEnabled(bool arg0)
        {
            IExecute("setDoubleBufferingEnabled", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/RepaintManager.html#validateInvalidComponents()
        /// </summary>
        public void ValidateInvalidComponents()
        {
            IExecute("validateInvalidComponents");
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}