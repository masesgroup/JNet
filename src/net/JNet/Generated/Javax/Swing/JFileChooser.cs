/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.0.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing
{
    #region JFileChooser
    public partial class JFileChooser
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#%3Cinit%3E(java.io.File,javax.swing.filechooser.FileSystemView)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Filechooser.FileSystemView"/></param>
        public JFileChooser(Java.Io.File arg0, Javax.Swing.Filechooser.FileSystemView arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#%3Cinit%3E(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        public JFileChooser(Java.Io.File arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#%3Cinit%3E(java.lang.String,javax.swing.filechooser.FileSystemView)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Filechooser.FileSystemView"/></param>
        public JFileChooser(Java.Lang.String arg0, Javax.Swing.Filechooser.FileSystemView arg1)
            : base(arg0, arg1)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public JFileChooser(Java.Lang.String arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#%3Cinit%3E(javax.swing.filechooser.FileSystemView)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Filechooser.FileSystemView"/></param>
        public JFileChooser(Javax.Swing.Filechooser.FileSystemView arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JFileChooser"/> to <see cref="Javax.Accessibility.Accessible"/>
        /// </summary>
        public static implicit operator Javax.Accessibility.Accessible(Javax.Swing.JFileChooser t) => t.Cast<Javax.Accessibility.Accessible>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#APPROVE_OPTION"/>
        /// </summary>
        public static int APPROVE_OPTION { get { if (!_APPROVE_OPTIONReady) { _APPROVE_OPTIONContent = SGetField<int>(LocalBridgeClazz, "APPROVE_OPTION"); _APPROVE_OPTIONReady = true; } return _APPROVE_OPTIONContent; } }
        private static int _APPROVE_OPTIONContent = default;
        private static bool _APPROVE_OPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#CANCEL_OPTION"/>
        /// </summary>
        public static int CANCEL_OPTION { get { if (!_CANCEL_OPTIONReady) { _CANCEL_OPTIONContent = SGetField<int>(LocalBridgeClazz, "CANCEL_OPTION"); _CANCEL_OPTIONReady = true; } return _CANCEL_OPTIONContent; } }
        private static int _CANCEL_OPTIONContent = default;
        private static bool _CANCEL_OPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#CUSTOM_DIALOG"/>
        /// </summary>
        public static int CUSTOM_DIALOG { get { if (!_CUSTOM_DIALOGReady) { _CUSTOM_DIALOGContent = SGetField<int>(LocalBridgeClazz, "CUSTOM_DIALOG"); _CUSTOM_DIALOGReady = true; } return _CUSTOM_DIALOGContent; } }
        private static int _CUSTOM_DIALOGContent = default;
        private static bool _CUSTOM_DIALOGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#DIRECTORIES_ONLY"/>
        /// </summary>
        public static int DIRECTORIES_ONLY { get { if (!_DIRECTORIES_ONLYReady) { _DIRECTORIES_ONLYContent = SGetField<int>(LocalBridgeClazz, "DIRECTORIES_ONLY"); _DIRECTORIES_ONLYReady = true; } return _DIRECTORIES_ONLYContent; } }
        private static int _DIRECTORIES_ONLYContent = default;
        private static bool _DIRECTORIES_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#ERROR_OPTION"/>
        /// </summary>
        public static int ERROR_OPTION { get { if (!_ERROR_OPTIONReady) { _ERROR_OPTIONContent = SGetField<int>(LocalBridgeClazz, "ERROR_OPTION"); _ERROR_OPTIONReady = true; } return _ERROR_OPTIONContent; } }
        private static int _ERROR_OPTIONContent = default;
        private static bool _ERROR_OPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILES_AND_DIRECTORIES"/>
        /// </summary>
        public static int FILES_AND_DIRECTORIES { get { if (!_FILES_AND_DIRECTORIESReady) { _FILES_AND_DIRECTORIESContent = SGetField<int>(LocalBridgeClazz, "FILES_AND_DIRECTORIES"); _FILES_AND_DIRECTORIESReady = true; } return _FILES_AND_DIRECTORIESContent; } }
        private static int _FILES_AND_DIRECTORIESContent = default;
        private static bool _FILES_AND_DIRECTORIESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILES_ONLY"/>
        /// </summary>
        public static int FILES_ONLY { get { if (!_FILES_ONLYReady) { _FILES_ONLYContent = SGetField<int>(LocalBridgeClazz, "FILES_ONLY"); _FILES_ONLYReady = true; } return _FILES_ONLYContent; } }
        private static int _FILES_ONLYContent = default;
        private static bool _FILES_ONLYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#OPEN_DIALOG"/>
        /// </summary>
        public static int OPEN_DIALOG { get { if (!_OPEN_DIALOGReady) { _OPEN_DIALOGContent = SGetField<int>(LocalBridgeClazz, "OPEN_DIALOG"); _OPEN_DIALOGReady = true; } return _OPEN_DIALOGContent; } }
        private static int _OPEN_DIALOGContent = default;
        private static bool _OPEN_DIALOGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#SAVE_DIALOG"/>
        /// </summary>
        public static int SAVE_DIALOG { get { if (!_SAVE_DIALOGReady) { _SAVE_DIALOGContent = SGetField<int>(LocalBridgeClazz, "SAVE_DIALOG"); _SAVE_DIALOGReady = true; } return _SAVE_DIALOGContent; } }
        private static int _SAVE_DIALOGContent = default;
        private static bool _SAVE_DIALOGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY { get { if (!_ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTYReady) { _ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY"); _ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTYReady = true; } return _ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTYContent = default;
        private static bool _ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#ACCESSORY_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String ACCESSORY_CHANGED_PROPERTY { get { if (!_ACCESSORY_CHANGED_PROPERTYReady) { _ACCESSORY_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "ACCESSORY_CHANGED_PROPERTY"); _ACCESSORY_CHANGED_PROPERTYReady = true; } return _ACCESSORY_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _ACCESSORY_CHANGED_PROPERTYContent = default;
        private static bool _ACCESSORY_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY { get { if (!_APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTYReady) { _APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY"); _APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTYReady = true; } return _APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTYContent = default;
        private static bool _APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#APPROVE_BUTTON_TEXT_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String APPROVE_BUTTON_TEXT_CHANGED_PROPERTY { get { if (!_APPROVE_BUTTON_TEXT_CHANGED_PROPERTYReady) { _APPROVE_BUTTON_TEXT_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPROVE_BUTTON_TEXT_CHANGED_PROPERTY"); _APPROVE_BUTTON_TEXT_CHANGED_PROPERTYReady = true; } return _APPROVE_BUTTON_TEXT_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _APPROVE_BUTTON_TEXT_CHANGED_PROPERTYContent = default;
        private static bool _APPROVE_BUTTON_TEXT_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY { get { if (!_APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTYReady) { _APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY"); _APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTYReady = true; } return _APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTYContent = default;
        private static bool _APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#APPROVE_SELECTION"/>
        /// </summary>
        public static Java.Lang.String APPROVE_SELECTION { get { if (!_APPROVE_SELECTIONReady) { _APPROVE_SELECTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "APPROVE_SELECTION"); _APPROVE_SELECTIONReady = true; } return _APPROVE_SELECTIONContent; } }
        private static Java.Lang.String _APPROVE_SELECTIONContent = default;
        private static bool _APPROVE_SELECTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#CANCEL_SELECTION"/>
        /// </summary>
        public static Java.Lang.String CANCEL_SELECTION { get { if (!_CANCEL_SELECTIONReady) { _CANCEL_SELECTIONContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CANCEL_SELECTION"); _CANCEL_SELECTIONReady = true; } return _CANCEL_SELECTIONContent; } }
        private static Java.Lang.String _CANCEL_SELECTIONContent = default;
        private static bool _CANCEL_SELECTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY { get { if (!_CHOOSABLE_FILE_FILTER_CHANGED_PROPERTYReady) { _CHOOSABLE_FILE_FILTER_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY"); _CHOOSABLE_FILE_FILTER_CHANGED_PROPERTYReady = true; } return _CHOOSABLE_FILE_FILTER_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _CHOOSABLE_FILE_FILTER_CHANGED_PROPERTYContent = default;
        private static bool _CHOOSABLE_FILE_FILTER_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY { get { if (!_CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTYReady) { _CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY"); _CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTYReady = true; } return _CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTYContent = default;
        private static bool _CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#DIALOG_TITLE_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String DIALOG_TITLE_CHANGED_PROPERTY { get { if (!_DIALOG_TITLE_CHANGED_PROPERTYReady) { _DIALOG_TITLE_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DIALOG_TITLE_CHANGED_PROPERTY"); _DIALOG_TITLE_CHANGED_PROPERTYReady = true; } return _DIALOG_TITLE_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _DIALOG_TITLE_CHANGED_PROPERTYContent = default;
        private static bool _DIALOG_TITLE_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#DIALOG_TYPE_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String DIALOG_TYPE_CHANGED_PROPERTY { get { if (!_DIALOG_TYPE_CHANGED_PROPERTYReady) { _DIALOG_TYPE_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DIALOG_TYPE_CHANGED_PROPERTY"); _DIALOG_TYPE_CHANGED_PROPERTYReady = true; } return _DIALOG_TYPE_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _DIALOG_TYPE_CHANGED_PROPERTYContent = default;
        private static bool _DIALOG_TYPE_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#DIRECTORY_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String DIRECTORY_CHANGED_PROPERTY { get { if (!_DIRECTORY_CHANGED_PROPERTYReady) { _DIRECTORY_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DIRECTORY_CHANGED_PROPERTY"); _DIRECTORY_CHANGED_PROPERTYReady = true; } return _DIRECTORY_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _DIRECTORY_CHANGED_PROPERTYContent = default;
        private static bool _DIRECTORY_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILE_FILTER_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String FILE_FILTER_CHANGED_PROPERTY { get { if (!_FILE_FILTER_CHANGED_PROPERTYReady) { _FILE_FILTER_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILE_FILTER_CHANGED_PROPERTY"); _FILE_FILTER_CHANGED_PROPERTYReady = true; } return _FILE_FILTER_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _FILE_FILTER_CHANGED_PROPERTYContent = default;
        private static bool _FILE_FILTER_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILE_HIDING_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String FILE_HIDING_CHANGED_PROPERTY { get { if (!_FILE_HIDING_CHANGED_PROPERTYReady) { _FILE_HIDING_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILE_HIDING_CHANGED_PROPERTY"); _FILE_HIDING_CHANGED_PROPERTYReady = true; } return _FILE_HIDING_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _FILE_HIDING_CHANGED_PROPERTYContent = default;
        private static bool _FILE_HIDING_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILE_SELECTION_MODE_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String FILE_SELECTION_MODE_CHANGED_PROPERTY { get { if (!_FILE_SELECTION_MODE_CHANGED_PROPERTYReady) { _FILE_SELECTION_MODE_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILE_SELECTION_MODE_CHANGED_PROPERTY"); _FILE_SELECTION_MODE_CHANGED_PROPERTYReady = true; } return _FILE_SELECTION_MODE_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _FILE_SELECTION_MODE_CHANGED_PROPERTYContent = default;
        private static bool _FILE_SELECTION_MODE_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILE_SYSTEM_VIEW_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String FILE_SYSTEM_VIEW_CHANGED_PROPERTY { get { if (!_FILE_SYSTEM_VIEW_CHANGED_PROPERTYReady) { _FILE_SYSTEM_VIEW_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILE_SYSTEM_VIEW_CHANGED_PROPERTY"); _FILE_SYSTEM_VIEW_CHANGED_PROPERTYReady = true; } return _FILE_SYSTEM_VIEW_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _FILE_SYSTEM_VIEW_CHANGED_PROPERTYContent = default;
        private static bool _FILE_SYSTEM_VIEW_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#FILE_VIEW_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String FILE_VIEW_CHANGED_PROPERTY { get { if (!_FILE_VIEW_CHANGED_PROPERTYReady) { _FILE_VIEW_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FILE_VIEW_CHANGED_PROPERTY"); _FILE_VIEW_CHANGED_PROPERTYReady = true; } return _FILE_VIEW_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _FILE_VIEW_CHANGED_PROPERTYContent = default;
        private static bool _FILE_VIEW_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#MULTI_SELECTION_ENABLED_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String MULTI_SELECTION_ENABLED_CHANGED_PROPERTY { get { if (!_MULTI_SELECTION_ENABLED_CHANGED_PROPERTYReady) { _MULTI_SELECTION_ENABLED_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "MULTI_SELECTION_ENABLED_CHANGED_PROPERTY"); _MULTI_SELECTION_ENABLED_CHANGED_PROPERTYReady = true; } return _MULTI_SELECTION_ENABLED_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _MULTI_SELECTION_ENABLED_CHANGED_PROPERTYContent = default;
        private static bool _MULTI_SELECTION_ENABLED_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#SELECTED_FILE_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String SELECTED_FILE_CHANGED_PROPERTY { get { if (!_SELECTED_FILE_CHANGED_PROPERTYReady) { _SELECTED_FILE_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SELECTED_FILE_CHANGED_PROPERTY"); _SELECTED_FILE_CHANGED_PROPERTYReady = true; } return _SELECTED_FILE_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _SELECTED_FILE_CHANGED_PROPERTYContent = default;
        private static bool _SELECTED_FILE_CHANGED_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#SELECTED_FILES_CHANGED_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String SELECTED_FILES_CHANGED_PROPERTY { get { if (!_SELECTED_FILES_CHANGED_PROPERTYReady) { _SELECTED_FILES_CHANGED_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SELECTED_FILES_CHANGED_PROPERTY"); _SELECTED_FILES_CHANGED_PROPERTYReady = true; } return _SELECTED_FILES_CHANGED_PROPERTYContent; } }
        private static Java.Lang.String _SELECTED_FILES_CHANGED_PROPERTYContent = default;
        private static bool _SELECTED_FILES_CHANGED_PROPERTYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getAcceptAllFileFilter()"/> 
        /// </summary>
        public Javax.Swing.Filechooser.FileFilter AcceptAllFileFilter
        {
            get { return IExecuteWithSignature<Javax.Swing.Filechooser.FileFilter>("getAcceptAllFileFilter", "()Ljavax/swing/filechooser/FileFilter;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getAccessory()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setAccessory(javax.swing.JComponent)"/>
        /// </summary>
        public Javax.Swing.JComponent Accessory
        {
            get { return IExecuteWithSignature<Javax.Swing.JComponent>("getAccessory", "()Ljavax/swing/JComponent;"); } set { IExecuteWithSignature("setAccessory", "(Ljavax/swing/JComponent;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getActionListeners()"/> 
        /// </summary>
        public Java.Awt.EventNs.ActionListener[] ActionListeners
        {
            get { return IExecuteWithSignatureArray<Java.Awt.EventNs.ActionListener>("getActionListeners", "()[Ljava/awt/event/ActionListener;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getApproveButtonMnemonic()"/> 
        /// </summary>
        public int ApproveButtonMnemonic
        {
            get { return IExecuteWithSignature<int>("getApproveButtonMnemonic", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getApproveButtonText()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setApproveButtonText(java.lang.String)"/>
        /// </summary>
        public Java.Lang.String ApproveButtonText
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getApproveButtonText", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setApproveButtonText", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getApproveButtonToolTipText()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setApproveButtonToolTipText(java.lang.String)"/>
        /// </summary>
        public Java.Lang.String ApproveButtonToolTipText
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getApproveButtonToolTipText", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setApproveButtonToolTipText", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getChoosableFileFilters()"/> 
        /// </summary>
        public Javax.Swing.Filechooser.FileFilter[] ChoosableFileFilters
        {
            get { return IExecuteWithSignatureArray<Javax.Swing.Filechooser.FileFilter>("getChoosableFileFilters", "()[Ljavax/swing/filechooser/FileFilter;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getControlButtonsAreShown()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setControlButtonsAreShown(boolean)"/>
        /// </summary>
        public bool ControlButtonsAreShown
        {
            get { return IExecuteWithSignature<bool>("getControlButtonsAreShown", "()Z"); } set { IExecuteWithSignature("setControlButtonsAreShown", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getCurrentDirectory()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setCurrentDirectory(java.io.File)"/>
        /// </summary>
        public Java.Io.File CurrentDirectory
        {
            get { return IExecuteWithSignature<Java.Io.File>("getCurrentDirectory", "()Ljava/io/File;"); } set { IExecuteWithSignature("setCurrentDirectory", "(Ljava/io/File;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getDialogTitle()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setDialogTitle(java.lang.String)"/>
        /// </summary>
        public Java.Lang.String DialogTitle
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getDialogTitle", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setDialogTitle", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getDialogType()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setDialogType(int)"/>
        /// </summary>
        public int DialogType
        {
            get { return IExecuteWithSignature<int>("getDialogType", "()I"); } set { IExecuteWithSignature("setDialogType", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getDragEnabled()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setDragEnabled(boolean)"/>
        /// </summary>
        public bool DragEnabled
        {
            get { return IExecuteWithSignature<bool>("getDragEnabled", "()Z"); } set { IExecuteWithSignature("setDragEnabled", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getFileFilter()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setFileFilter(javax.swing.filechooser.FileFilter)"/>
        /// </summary>
        public Javax.Swing.Filechooser.FileFilter FileFilter
        {
            get { return IExecuteWithSignature<Javax.Swing.Filechooser.FileFilter>("getFileFilter", "()Ljavax/swing/filechooser/FileFilter;"); } set { IExecuteWithSignature("setFileFilter", "(Ljavax/swing/filechooser/FileFilter;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getFileSelectionMode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setFileSelectionMode(int)"/>
        /// </summary>
        public int FileSelectionMode
        {
            get { return IExecuteWithSignature<int>("getFileSelectionMode", "()I"); } set { IExecuteWithSignature("setFileSelectionMode", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getFileSystemView()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setFileSystemView(javax.swing.filechooser.FileSystemView)"/>
        /// </summary>
        public Javax.Swing.Filechooser.FileSystemView FileSystemView
        {
            get { return IExecuteWithSignature<Javax.Swing.Filechooser.FileSystemView>("getFileSystemView", "()Ljavax/swing/filechooser/FileSystemView;"); } set { IExecuteWithSignature("setFileSystemView", "(Ljavax/swing/filechooser/FileSystemView;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getFileView()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setFileView(javax.swing.filechooser.FileView)"/>
        /// </summary>
        public Javax.Swing.Filechooser.FileView FileView
        {
            get { return IExecuteWithSignature<Javax.Swing.Filechooser.FileView>("getFileView", "()Ljavax/swing/filechooser/FileView;"); } set { IExecuteWithSignature("setFileView", "(Ljavax/swing/filechooser/FileView;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getSelectedFile()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setSelectedFile(java.io.File)"/>
        /// </summary>
        public Java.Io.File SelectedFile
        {
            get { return IExecuteWithSignature<Java.Io.File>("getSelectedFile", "()Ljava/io/File;"); } set { IExecuteWithSignature("setSelectedFile", "(Ljava/io/File;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getSelectedFiles()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setSelectedFiles(java.io.File[])"/>
        /// </summary>
        public Java.Io.File[] SelectedFiles
        {
            get { return IExecuteWithSignatureArray<Java.Io.File>("getSelectedFiles", "()[Ljava/io/File;"); } set { IExecuteWithSignature("setSelectedFiles", "([Ljava/io/File;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#accept(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Accept(Java.Io.File arg0)
        {
            return IExecuteWithSignature<bool>("accept", "(Ljava/io/File;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#isAcceptAllFileFilterUsed()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAcceptAllFileFilterUsed()
        {
            return IExecuteWithSignature<bool>("isAcceptAllFileFilterUsed", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#isDirectorySelectionEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsDirectorySelectionEnabled()
        {
            return IExecuteWithSignature<bool>("isDirectorySelectionEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#isFileHidingEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFileHidingEnabled()
        {
            return IExecuteWithSignature<bool>("isFileHidingEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#isFileSelectionEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsFileSelectionEnabled()
        {
            return IExecuteWithSignature<bool>("isFileSelectionEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#isMultiSelectionEnabled()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsMultiSelectionEnabled()
        {
            return IExecuteWithSignature<bool>("isMultiSelectionEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#isTraversable(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsTraversable(Java.Io.File arg0)
        {
            return IExecuteWithSignature<bool>("isTraversable", "(Ljava/io/File;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#removeChoosableFileFilter(javax.swing.filechooser.FileFilter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Filechooser.FileFilter"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RemoveChoosableFileFilter(Javax.Swing.Filechooser.FileFilter arg0)
        {
            return IExecuteWithSignature<bool>("removeChoosableFileFilter", "(Ljavax/swing/filechooser/FileFilter;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#showDialog(java.awt.Component,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public int ShowDialog(Java.Awt.Component arg0, Java.Lang.String arg1)
        {
            return IExecute<int>("showDialog", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#showOpenDialog(java.awt.Component)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public int ShowOpenDialog(Java.Awt.Component arg0)
        {
            return IExecuteWithSignature<int>("showOpenDialog", "(Ljava/awt/Component;)I", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#showSaveDialog(java.awt.Component)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public int ShowSaveDialog(Java.Awt.Component arg0)
        {
            return IExecuteWithSignature<int>("showSaveDialog", "(Ljava/awt/Component;)I", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getDescription(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetDescription(Java.Io.File arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getDescription", "(Ljava/io/File;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getName(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetName(Java.Io.File arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getName", "(Ljava/io/File;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getTypeDescription(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String GetTypeDescription(Java.Io.File arg0)
        {
            return IExecuteWithSignature<Java.Lang.String>("getTypeDescription", "(Ljava/io/File;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#getIcon(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Javax.Swing.Icon"/></returns>
        public Javax.Swing.Icon GetIcon(Java.Io.File arg0)
        {
            return IExecuteWithSignature<Javax.Swing.Icon>("getIcon", "(Ljava/io/File;)Ljavax/swing/Icon;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#addActionListener(java.awt.event.ActionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.EventNs.ActionListener"/></param>
        public void AddActionListener(Java.Awt.EventNs.ActionListener arg0)
        {
            IExecuteWithSignature("addActionListener", "(Ljava/awt/event/ActionListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#addChoosableFileFilter(javax.swing.filechooser.FileFilter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Filechooser.FileFilter"/></param>
        public void AddChoosableFileFilter(Javax.Swing.Filechooser.FileFilter arg0)
        {
            IExecuteWithSignature("addChoosableFileFilter", "(Ljavax/swing/filechooser/FileFilter;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#approveSelection()"/>
        /// </summary>
        public void ApproveSelection()
        {
            IExecuteWithSignature("approveSelection", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#cancelSelection()"/>
        /// </summary>
        public void CancelSelection()
        {
            IExecuteWithSignature("cancelSelection", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#changeToParentDirectory()"/>
        /// </summary>
        public void ChangeToParentDirectory()
        {
            IExecuteWithSignature("changeToParentDirectory", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#ensureFileIsVisible(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        public void EnsureFileIsVisible(Java.Io.File arg0)
        {
            IExecuteWithSignature("ensureFileIsVisible", "(Ljava/io/File;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#removeActionListener(java.awt.event.ActionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.EventNs.ActionListener"/></param>
        public void RemoveActionListener(Java.Awt.EventNs.ActionListener arg0)
        {
            IExecuteWithSignature("removeActionListener", "(Ljava/awt/event/ActionListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#rescanCurrentDirectory()"/>
        /// </summary>
        public void RescanCurrentDirectory()
        {
            IExecuteWithSignature("rescanCurrentDirectory", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#resetChoosableFileFilters()"/>
        /// </summary>
        public void ResetChoosableFileFilters()
        {
            IExecuteWithSignature("resetChoosableFileFilters", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setAcceptAllFileFilterUsed(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetAcceptAllFileFilterUsed(bool arg0)
        {
            IExecuteWithSignature("setAcceptAllFileFilterUsed", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setApproveButtonMnemonic(char)"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        public void SetApproveButtonMnemonic(char arg0)
        {
            IExecuteWithSignature("setApproveButtonMnemonic", "(C)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setApproveButtonMnemonic(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetApproveButtonMnemonic(int arg0)
        {
            IExecuteWithSignature("setApproveButtonMnemonic", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setFileHidingEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetFileHidingEnabled(bool arg0)
        {
            IExecuteWithSignature("setFileHidingEnabled", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JFileChooser.html#setMultiSelectionEnabled(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetMultiSelectionEnabled(bool arg0)
        {
            IExecuteWithSignature("setMultiSelectionEnabled", "(Z)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}