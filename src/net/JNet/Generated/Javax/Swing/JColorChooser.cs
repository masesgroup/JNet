/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.3.0.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing
{
    #region JColorChooser
    public partial class JColorChooser
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#%3Cinit%3E(java.awt.Color)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Color"/></param>
        public JColorChooser(Java.Awt.Color arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#%3Cinit%3E(javax.swing.colorchooser.ColorSelectionModel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Colorchooser.ColorSelectionModel"/></param>
        public JColorChooser(Javax.Swing.Colorchooser.ColorSelectionModel arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JColorChooser"/> to <see cref="Javax.Accessibility.Accessible"/>
        /// </summary>
        public static implicit operator Javax.Accessibility.Accessible(Javax.Swing.JColorChooser t) => t.Cast<Javax.Accessibility.Accessible>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#CHOOSER_PANELS_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String CHOOSER_PANELS_PROPERTY { get { if (!_CHOOSER_PANELS_PROPERTYReady) { _CHOOSER_PANELS_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CHOOSER_PANELS_PROPERTY"); _CHOOSER_PANELS_PROPERTYReady = true; } return _CHOOSER_PANELS_PROPERTYContent; } }
        private static Java.Lang.String _CHOOSER_PANELS_PROPERTYContent = default;
        private static bool _CHOOSER_PANELS_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#PREVIEW_PANEL_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String PREVIEW_PANEL_PROPERTY { get { if (!_PREVIEW_PANEL_PROPERTYReady) { _PREVIEW_PANEL_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PREVIEW_PANEL_PROPERTY"); _PREVIEW_PANEL_PROPERTYReady = true; } return _PREVIEW_PANEL_PROPERTYContent; } }
        private static Java.Lang.String _PREVIEW_PANEL_PROPERTYContent = default;
        private static bool _PREVIEW_PANEL_PROPERTYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#SELECTION_MODEL_PROPERTY"/>
        /// </summary>
        public static Java.Lang.String SELECTION_MODEL_PROPERTY { get { if (!_SELECTION_MODEL_PROPERTYReady) { _SELECTION_MODEL_PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "SELECTION_MODEL_PROPERTY"); _SELECTION_MODEL_PROPERTYReady = true; } return _SELECTION_MODEL_PROPERTYContent; } }
        private static Java.Lang.String _SELECTION_MODEL_PROPERTYContent = default;
        private static bool _SELECTION_MODEL_PROPERTYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#showDialog(java.awt.Component,java.lang.String,java.awt.Color,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Awt.Color"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <returns><see cref="Java.Awt.Color"/></returns>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public static Java.Awt.Color ShowDialog(Java.Awt.Component arg0, Java.Lang.String arg1, Java.Awt.Color arg2, bool arg3)
        {
            return SExecute<Java.Awt.Color>(LocalBridgeClazz, "showDialog", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#showDialog(java.awt.Component,java.lang.String,java.awt.Color)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Awt.Color"/></param>
        /// <returns><see cref="Java.Awt.Color"/></returns>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public static Java.Awt.Color ShowDialog(Java.Awt.Component arg0, Java.Lang.String arg1, Java.Awt.Color arg2)
        {
            return SExecute<Java.Awt.Color>(LocalBridgeClazz, "showDialog", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#createDialog(java.awt.Component,java.lang.String,boolean,javax.swing.JColorChooser,java.awt.event.ActionListener,java.awt.event.ActionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="Javax.Swing.JColorChooser"/></param>
        /// <param name="arg4"><see cref="Java.Awt.EventNs.ActionListener"/></param>
        /// <param name="arg5"><see cref="Java.Awt.EventNs.ActionListener"/></param>
        /// <returns><see cref="Javax.Swing.JDialog"/></returns>
        /// <exception cref="Java.Awt.HeadlessException"/>
        public static Javax.Swing.JDialog CreateDialog(Java.Awt.Component arg0, Java.Lang.String arg1, bool arg2, Javax.Swing.JColorChooser arg3, Java.Awt.EventNs.ActionListener arg4, Java.Awt.EventNs.ActionListener arg5)
        {
            return SExecute<Javax.Swing.JDialog>(LocalBridgeClazz, "createDialog", arg0, arg1, arg2, arg3, arg4, arg5);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#getChooserPanels()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setChooserPanels(javax.swing.colorchooser.AbstractColorChooserPanel[])"/>
        /// </summary>
        public Javax.Swing.Colorchooser.AbstractColorChooserPanel[] ChooserPanels
        {
            get { return IExecuteWithSignatureArray<Javax.Swing.Colorchooser.AbstractColorChooserPanel>("getChooserPanels", "()[Ljavax/swing/colorchooser/AbstractColorChooserPanel;"); } set { IExecuteWithSignature("setChooserPanels", "([Ljavax/swing/colorchooser/AbstractColorChooserPanel;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#getColor()"/> 
        /// </summary>
        public Java.Awt.Color Color
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getColor", "()Ljava/awt/Color;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#getDragEnabled()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setDragEnabled(boolean)"/>
        /// </summary>
        public bool DragEnabled
        {
            get { return IExecuteWithSignature<bool>("getDragEnabled", "()Z"); } set { IExecuteWithSignature("setDragEnabled", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#getPreviewPanel()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setPreviewPanel(javax.swing.JComponent)"/>
        /// </summary>
        public Javax.Swing.JComponent PreviewPanel
        {
            get { return IExecuteWithSignature<Javax.Swing.JComponent>("getPreviewPanel", "()Ljavax/swing/JComponent;"); } set { IExecuteWithSignature("setPreviewPanel", "(Ljavax/swing/JComponent;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#getSelectionModel()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setSelectionModel(javax.swing.colorchooser.ColorSelectionModel)"/>
        /// </summary>
        public Javax.Swing.Colorchooser.ColorSelectionModel SelectionModel
        {
            get { return IExecuteWithSignature<Javax.Swing.Colorchooser.ColorSelectionModel>("getSelectionModel", "()Ljavax/swing/colorchooser/ColorSelectionModel;"); } set { IExecuteWithSignature("setSelectionModel", "(Ljavax/swing/colorchooser/ColorSelectionModel;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#removeChooserPanel(javax.swing.colorchooser.AbstractColorChooserPanel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Colorchooser.AbstractColorChooserPanel"/></param>
        /// <returns><see cref="Javax.Swing.Colorchooser.AbstractColorChooserPanel"/></returns>
        public Javax.Swing.Colorchooser.AbstractColorChooserPanel RemoveChooserPanel(Javax.Swing.Colorchooser.AbstractColorChooserPanel arg0)
        {
            return IExecuteWithSignature<Javax.Swing.Colorchooser.AbstractColorChooserPanel>("removeChooserPanel", "(Ljavax/swing/colorchooser/AbstractColorChooserPanel;)Ljavax/swing/colorchooser/AbstractColorChooserPanel;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#addChooserPanel(javax.swing.colorchooser.AbstractColorChooserPanel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Colorchooser.AbstractColorChooserPanel"/></param>
        public void AddChooserPanel(Javax.Swing.Colorchooser.AbstractColorChooserPanel arg0)
        {
            IExecuteWithSignature("addChooserPanel", "(Ljavax/swing/colorchooser/AbstractColorChooserPanel;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setColor(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public void SetColor(int arg0, int arg1, int arg2)
        {
            IExecute("setColor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setColor(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void SetColor(int arg0)
        {
            IExecuteWithSignature("setColor", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setColor(java.awt.Color)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Color"/></param>
        public void SetColor(Java.Awt.Color arg0)
        {
            IExecuteWithSignature("setColor", "(Ljava/awt/Color;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JColorChooser.html#setUI(javax.swing.plaf.ColorChooserUI)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Plaf.ColorChooserUI"/></param>
        public void SetUI(Javax.Swing.Plaf.ColorChooserUI arg0)
        {
            IExecuteWithSignature("setUI", "(Ljavax/swing/plaf/ColorChooserUI;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}