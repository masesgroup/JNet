/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.11.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing.Event
{
    #region RowSorterEvent declaration
    /// <summary>
    /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.html"/>
    /// </summary>
    public partial class RowSorterEvent : Java.Util.EventObject
    {
        const string _bridgeClassName = "javax.swing.event.RowSorterEvent";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public RowSorterEvent() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public RowSorterEvent(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region Type declaration
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.Type.html"/>
        /// </summary>
        public partial class Type : Java.Lang.Enum<Javax.Swing.Event.RowSorterEvent.Type>
        {
            const string _bridgeClassName = "javax.swing.event.RowSorterEvent$Type";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Type() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Type(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region RowSorterEvent implementation
    public partial class RowSorterEvent
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.html#%3Cinit%3E(javax.swing.RowSorter,javax.swing.event.RowSorterEvent.Type,int[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.RowSorter"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Event.RowSorterEvent.Type"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public RowSorterEvent(Javax.Swing.RowSorter<object> arg0, Javax.Swing.Event.RowSorterEvent.Type arg1, int[] arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.html#%3Cinit%3E(javax.swing.RowSorter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.RowSorter"/></param>
        public RowSorterEvent(Javax.Swing.RowSorter<object> arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.html#getType()"/> 
        /// </summary>
        public Javax.Swing.Event.RowSorterEvent.Type GetType
        {
            get { return IExecuteWithSignature<Javax.Swing.Event.RowSorterEvent.Type>("getType", "()Ljavax/swing/event/RowSorterEvent$Type;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.html#getPreviousRowCount()"/> 
        /// </summary>
        public int PreviousRowCount
        {
            get { return IExecuteWithSignature<int>("getPreviousRowCount", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.html#convertPreviousRowIndexToModel(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int ConvertPreviousRowIndexToModel(int arg0)
        {
            return IExecuteWithSignature<int>("convertPreviousRowIndexToModel", "(I)I", arg0);
        }

        #endregion

        #region Nested classes
        #region Type implementation
        public partial class Type
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.Type.html#SORT_ORDER_CHANGED"/>
            /// </summary>
            public static Javax.Swing.Event.RowSorterEvent.Type SORT_ORDER_CHANGED { get { if (!_SORT_ORDER_CHANGEDReady) { _SORT_ORDER_CHANGEDContent = SGetField<Javax.Swing.Event.RowSorterEvent.Type>(LocalBridgeClazz, "SORT_ORDER_CHANGED"); _SORT_ORDER_CHANGEDReady = true; } return _SORT_ORDER_CHANGEDContent; } }
            private static Javax.Swing.Event.RowSorterEvent.Type _SORT_ORDER_CHANGEDContent = default;
            private static bool _SORT_ORDER_CHANGEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.Type.html#SORTED"/>
            /// </summary>
            public static Javax.Swing.Event.RowSorterEvent.Type SORTED { get { if (!_SORTEDReady) { _SORTEDContent = SGetField<Javax.Swing.Event.RowSorterEvent.Type>(LocalBridgeClazz, "SORTED"); _SORTEDReady = true; } return _SORTEDContent; } }
            private static Javax.Swing.Event.RowSorterEvent.Type _SORTEDContent = default;
            private static bool _SORTEDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.Type.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Javax.Swing.Event.RowSorterEvent.Type"/></returns>
            public static Javax.Swing.Event.RowSorterEvent.Type ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Javax.Swing.Event.RowSorterEvent.Type>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Ljavax/swing/event/RowSorterEvent$Type;", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/event/RowSorterEvent.Type.html#values()"/>
            /// </summary>
            /// <returns><see cref="Javax.Swing.Event.RowSorterEvent.Type"/></returns>
            public static Javax.Swing.Event.RowSorterEvent.Type[] Values()
            {
                return SExecuteWithSignatureArray<Javax.Swing.Event.RowSorterEvent.Type>(LocalBridgeClazz, "values", "()[Ljavax/swing/event/RowSorterEvent$Type;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}