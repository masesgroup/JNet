/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.4.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing
{
    #region JList
    public partial class JList
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#%3Cinit%3E(java.util.Vector)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Vector"/></param>
        public JList(Java.Util.Vector arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#%3Cinit%3E(javax.swing.ListModel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.ListModel"/></param>
        public JList(Javax.Swing.ListModel arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JList"/> to <see cref="Javax.Swing.Scrollable"/>
        /// </summary>
        public static implicit operator Javax.Swing.Scrollable(Javax.Swing.JList t) => t.Cast<Javax.Swing.Scrollable>();
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JList"/> to <see cref="Javax.Accessibility.Accessible"/>
        /// </summary>
        public static implicit operator Javax.Accessibility.Accessible(Javax.Swing.JList t) => t.Cast<Javax.Accessibility.Accessible>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#HORIZONTAL_WRAP"/>
        /// </summary>
        public static int HORIZONTAL_WRAP { get { if (!_HORIZONTAL_WRAPReady) { _HORIZONTAL_WRAPContent = SGetField<int>(LocalBridgeClazz, "HORIZONTAL_WRAP"); _HORIZONTAL_WRAPReady = true; } return _HORIZONTAL_WRAPContent; } }
        private static int _HORIZONTAL_WRAPContent = default;
        private static bool _HORIZONTAL_WRAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#VERTICAL"/>
        /// </summary>
        public static int VERTICAL { get { if (!_VERTICALReady) { _VERTICALContent = SGetField<int>(LocalBridgeClazz, "VERTICAL"); _VERTICALReady = true; } return _VERTICALContent; } }
        private static int _VERTICALContent = default;
        private static bool _VERTICALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#VERTICAL_WRAP"/>
        /// </summary>
        public static int VERTICAL_WRAP { get { if (!_VERTICAL_WRAPReady) { _VERTICAL_WRAPContent = SGetField<int>(LocalBridgeClazz, "VERTICAL_WRAP"); _VERTICAL_WRAPReady = true; } return _VERTICAL_WRAPContent; } }
        private static int _VERTICAL_WRAPContent = default;
        private static bool _VERTICAL_WRAPReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getAnchorSelectionIndex()"/> 
        /// </summary>
        public int AnchorSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getAnchorSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getCellRenderer()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setCellRenderer(javax.swing.ListCellRenderer)"/>
        /// </summary>
        public Javax.Swing.ListCellRenderer CellRenderer
        {
            get { return IExecuteWithSignature<Javax.Swing.ListCellRenderer>("getCellRenderer", "()Ljavax/swing/ListCellRenderer;"); } set { IExecuteWithSignature("setCellRenderer", "(Ljavax/swing/ListCellRenderer;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getDragEnabled()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setDragEnabled(boolean)"/>
        /// </summary>
        public bool DragEnabled
        {
            get { return IExecuteWithSignature<bool>("getDragEnabled", "()Z"); } set { IExecuteWithSignature("setDragEnabled", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getDropMode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setDropMode(javax.swing.DropMode)"/>
        /// </summary>
        public Javax.Swing.DropMode DropMode
        {
            get { return IExecuteWithSignature<Javax.Swing.DropMode>("getDropMode", "()Ljavax/swing/DropMode;"); } set { IExecuteWithSignature("setDropMode", "(Ljavax/swing/DropMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getFirstVisibleIndex()"/> 
        /// </summary>
        public int FirstVisibleIndex
        {
            get { return IExecuteWithSignature<int>("getFirstVisibleIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getFixedCellHeight()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setFixedCellHeight(int)"/>
        /// </summary>
        public int FixedCellHeight
        {
            get { return IExecuteWithSignature<int>("getFixedCellHeight", "()I"); } set { IExecuteWithSignature("setFixedCellHeight", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getFixedCellWidth()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setFixedCellWidth(int)"/>
        /// </summary>
        public int FixedCellWidth
        {
            get { return IExecuteWithSignature<int>("getFixedCellWidth", "()I"); } set { IExecuteWithSignature("setFixedCellWidth", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getDropLocation()"/> 
        /// </summary>
        public Javax.Swing.JList.DropLocation GetDropLocation
        {
            get { return IExecuteWithSignature<Javax.Swing.JList.DropLocation>("getDropLocation", "()Ljavax/swing/JList$DropLocation;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getLastVisibleIndex()"/> 
        /// </summary>
        public int LastVisibleIndex
        {
            get { return IExecuteWithSignature<int>("getLastVisibleIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getLayoutOrientation()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setLayoutOrientation(int)"/>
        /// </summary>
        public int LayoutOrientation
        {
            get { return IExecuteWithSignature<int>("getLayoutOrientation", "()I"); } set { IExecuteWithSignature("setLayoutOrientation", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getLeadSelectionIndex()"/> 
        /// </summary>
        public int LeadSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getLeadSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getListSelectionListeners()"/> 
        /// </summary>
        public Javax.Swing.Event.ListSelectionListener[] ListSelectionListeners
        {
            get { return IExecuteWithSignatureArray<Javax.Swing.Event.ListSelectionListener>("getListSelectionListeners", "()[Ljavax/swing/event/ListSelectionListener;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getMaxSelectionIndex()"/> 
        /// </summary>
        public int MaxSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getMaxSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getMinSelectionIndex()"/> 
        /// </summary>
        public int MinSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getMinSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getModel()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setModel(javax.swing.ListModel)"/>
        /// </summary>
        public Javax.Swing.ListModel Model
        {
            get { return IExecuteWithSignature<Javax.Swing.ListModel>("getModel", "()Ljavax/swing/ListModel;"); } set { IExecuteWithSignature("setModel", "(Ljavax/swing/ListModel;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getPreferredScrollableViewportSize()"/> 
        /// </summary>
        public Java.Awt.Dimension PreferredScrollableViewportSize
        {
            get { return IExecuteWithSignature<Java.Awt.Dimension>("getPreferredScrollableViewportSize", "()Ljava/awt/Dimension;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getPrototypeCellValue()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setPrototypeCellValue(java.lang.Object)"/>
        /// </summary>
        public object PrototypeCellValue
        {
            get { return IExecuteWithSignature("getPrototypeCellValue", "()Ljava/lang/Object;"); } set { IExecuteWithSignature("setPrototypeCellValue", "(Ljava/lang/Object;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableTracksViewportHeight()"/> 
        /// </summary>
        public bool ScrollableTracksViewportHeight
        {
            get { return IExecuteWithSignature<bool>("getScrollableTracksViewportHeight", "()Z"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableTracksViewportWidth()"/> 
        /// </summary>
        public bool ScrollableTracksViewportWidth
        {
            get { return IExecuteWithSignature<bool>("getScrollableTracksViewportWidth", "()Z"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedIndex()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectedIndex(int)"/>
        /// </summary>
        public int SelectedIndex
        {
            get { return IExecuteWithSignature<int>("getSelectedIndex", "()I"); } set { IExecuteWithSignature("setSelectedIndex", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedIndices()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectedIndices(int[])"/>
        /// </summary>
        public int[] SelectedIndices
        {
            get { return IExecuteWithSignatureArray<int>("getSelectedIndices", "()[I"); } set { IExecuteWithSignature("setSelectedIndices", "([I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedValue()"/> 
        /// </summary>
        public object SelectedValue
        {
            get { return IExecuteWithSignature("getSelectedValue", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedValuesList()"/> 
        /// </summary>
        public Java.Util.List SelectedValuesList
        {
            get { return IExecuteWithSignature<Java.Util.List>("getSelectedValuesList", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionBackground()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionBackground(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color SelectionBackground
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getSelectionBackground", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setSelectionBackground", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionForeground()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionForeground(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color SelectionForeground
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getSelectionForeground", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setSelectionForeground", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionMode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionMode(int)"/>
        /// </summary>
        public int SelectionMode
        {
            get { return IExecuteWithSignature<int>("getSelectionMode", "()I"); } set { IExecuteWithSignature("setSelectionMode", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionModel()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionModel(javax.swing.ListSelectionModel)"/>
        /// </summary>
        public Javax.Swing.ListSelectionModel SelectionModel
        {
            get { return IExecuteWithSignature<Javax.Swing.ListSelectionModel>("getSelectionModel", "()Ljavax/swing/ListSelectionModel;"); } set { IExecuteWithSignature("setSelectionModel", "(Ljavax/swing/ListSelectionModel;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getValueIsAdjusting()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setValueIsAdjusting(boolean)"/>
        /// </summary>
        public bool ValueIsAdjusting
        {
            get { return IExecuteWithSignature<bool>("getValueIsAdjusting", "()Z"); } set { IExecuteWithSignature("setValueIsAdjusting", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getVisibleRowCount()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setVisibleRowCount(int)"/>
        /// </summary>
        public int VisibleRowCount
        {
            get { return IExecuteWithSignature<int>("getVisibleRowCount", "()I"); } set { IExecuteWithSignature("setVisibleRowCount", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#isSelectedIndex(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsSelectedIndex(int arg0)
        {
            return IExecuteWithSignature<bool>("isSelectedIndex", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#isSelectionEmpty()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSelectionEmpty()
        {
            return IExecuteWithSignature<bool>("isSelectionEmpty", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getNextMatch(java.lang.String,int,javax.swing.text.Position.Bias)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Javax.Swing.Text.Position.Bias"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetNextMatch(Java.Lang.String arg0, int arg1, Javax.Swing.Text.Position.Bias arg2)
        {
            return IExecute<int>("getNextMatch", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableBlockIncrement(java.awt.Rectangle,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Rectangle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetScrollableBlockIncrement(Java.Awt.Rectangle arg0, int arg1, int arg2)
        {
            return IExecute<int>("getScrollableBlockIncrement", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableUnitIncrement(java.awt.Rectangle,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Rectangle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetScrollableUnitIncrement(Java.Awt.Rectangle arg0, int arg1, int arg2)
        {
            return IExecute<int>("getScrollableUnitIncrement", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#locationToIndex(java.awt.Point)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Point"/></param>
        /// <returns><see cref="int"/></returns>
        public int LocationToIndex(Java.Awt.Point arg0)
        {
            return IExecuteWithSignature<int>("locationToIndex", "(Ljava/awt/Point;)I", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#indexToLocation(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Awt.Point"/></returns>
        public Java.Awt.Point IndexToLocation(int arg0)
        {
            return IExecuteWithSignature<Java.Awt.Point>("indexToLocation", "(I)Ljava/awt/Point;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getCellBounds(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Awt.Rectangle"/></returns>
        public Java.Awt.Rectangle GetCellBounds(int arg0, int arg1)
        {
            return IExecute<Java.Awt.Rectangle>("getCellBounds", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#addListSelectionListener(javax.swing.event.ListSelectionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Event.ListSelectionListener"/></param>
        public void AddListSelectionListener(Javax.Swing.Event.ListSelectionListener arg0)
        {
            IExecuteWithSignature("addListSelectionListener", "(Ljavax/swing/event/ListSelectionListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#addSelectionInterval(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void AddSelectionInterval(int arg0, int arg1)
        {
            IExecute("addSelectionInterval", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#clearSelection()"/>
        /// </summary>
        public void ClearSelection()
        {
            IExecuteWithSignature("clearSelection", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#ensureIndexIsVisible(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void EnsureIndexIsVisible(int arg0)
        {
            IExecuteWithSignature("ensureIndexIsVisible", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#removeListSelectionListener(javax.swing.event.ListSelectionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Event.ListSelectionListener"/></param>
        public void RemoveListSelectionListener(Javax.Swing.Event.ListSelectionListener arg0)
        {
            IExecuteWithSignature("removeListSelectionListener", "(Ljavax/swing/event/ListSelectionListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#removeSelectionInterval(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void RemoveSelectionInterval(int arg0, int arg1)
        {
            IExecute("removeSelectionInterval", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setListData(java.lang.Object[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void SetListData(object[] arg0)
        {
            IExecuteWithSignature("setListData", "([Ljava/lang/Object;)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setListData(java.util.Vector)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Vector"/></param>
        public void SetListData(Java.Util.Vector arg0)
        {
            IExecuteWithSignature("setListData", "(Ljava/util/Vector;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectedValue(java.lang.Object,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void SetSelectedValue(object arg0, bool arg1)
        {
            IExecute("setSelectedValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionInterval(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetSelectionInterval(int arg0, int arg1)
        {
            IExecute("setSelectionInterval", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setUI(javax.swing.plaf.ListUI)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Plaf.ListUI"/></param>
        public void SetUI(Javax.Swing.Plaf.ListUI arg0)
        {
            IExecuteWithSignature("setUI", "(Ljavax/swing/plaf/ListUI;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region DropLocation
        public partial class DropLocation
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.DropLocation.html#getIndex()"/> 
            /// </summary>
            public int Index
            {
                get { return IExecuteWithSignature<int>("getIndex", "()I"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.DropLocation.html#isInsert()"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool IsInsert()
            {
                return IExecuteWithSignature<bool>("isInsert", "()Z");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion

    #region JList<E>
    public partial class JList<E>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#%3Cinit%3E(java.lang.Object[])"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="E"/></param>
        public JList(E[] arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#%3Cinit%3E(java.util.Vector)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Vector"/></param>
        public JList(Java.Util.Vector<E> arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#%3Cinit%3E(javax.swing.ListModel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.ListModel"/></param>
        public JList(Javax.Swing.ListModel<E> arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JList{E}"/> to <see cref="Javax.Swing.Scrollable"/>
        /// </summary>
        public static implicit operator Javax.Swing.Scrollable(Javax.Swing.JList<E> t) => t.Cast<Javax.Swing.Scrollable>();
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JList{E}"/> to <see cref="Javax.Accessibility.Accessible"/>
        /// </summary>
        public static implicit operator Javax.Accessibility.Accessible(Javax.Swing.JList<E> t) => t.Cast<Javax.Accessibility.Accessible>();
        /// <summary>
        /// Converter from <see cref="Javax.Swing.JList{E}"/> to <see cref="Javax.Swing.JList"/>
        /// </summary>
        public static implicit operator Javax.Swing.JList(Javax.Swing.JList<E> t) => t.Cast<Javax.Swing.JList>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#HORIZONTAL_WRAP"/>
        /// </summary>
        public static int HORIZONTAL_WRAP { get { if (!_HORIZONTAL_WRAPReady) { _HORIZONTAL_WRAPContent = SGetField<int>(LocalBridgeClazz, "HORIZONTAL_WRAP"); _HORIZONTAL_WRAPReady = true; } return _HORIZONTAL_WRAPContent; } }
        private static int _HORIZONTAL_WRAPContent = default;
        private static bool _HORIZONTAL_WRAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#VERTICAL"/>
        /// </summary>
        public static int VERTICAL { get { if (!_VERTICALReady) { _VERTICALContent = SGetField<int>(LocalBridgeClazz, "VERTICAL"); _VERTICALReady = true; } return _VERTICALContent; } }
        private static int _VERTICALContent = default;
        private static bool _VERTICALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#VERTICAL_WRAP"/>
        /// </summary>
        public static int VERTICAL_WRAP { get { if (!_VERTICAL_WRAPReady) { _VERTICAL_WRAPContent = SGetField<int>(LocalBridgeClazz, "VERTICAL_WRAP"); _VERTICAL_WRAPReady = true; } return _VERTICAL_WRAPContent; } }
        private static int _VERTICAL_WRAPContent = default;
        private static bool _VERTICAL_WRAPReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getAnchorSelectionIndex()"/> 
        /// </summary>
        public int AnchorSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getAnchorSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getCellRenderer()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setCellRenderer(javax.swing.ListCellRenderer)"/>
        /// </summary>
        public Javax.Swing.ListCellRenderer CellRenderer
        {
            get { return IExecuteWithSignature<Javax.Swing.ListCellRenderer>("getCellRenderer", "()Ljavax/swing/ListCellRenderer;"); } set { IExecuteWithSignature("setCellRenderer", "(Ljavax/swing/ListCellRenderer;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getDragEnabled()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setDragEnabled(boolean)"/>
        /// </summary>
        public bool DragEnabled
        {
            get { return IExecuteWithSignature<bool>("getDragEnabled", "()Z"); } set { IExecuteWithSignature("setDragEnabled", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getDropMode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setDropMode(javax.swing.DropMode)"/>
        /// </summary>
        public Javax.Swing.DropMode DropMode
        {
            get { return IExecuteWithSignature<Javax.Swing.DropMode>("getDropMode", "()Ljavax/swing/DropMode;"); } set { IExecuteWithSignature("setDropMode", "(Ljavax/swing/DropMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getFirstVisibleIndex()"/> 
        /// </summary>
        public int FirstVisibleIndex
        {
            get { return IExecuteWithSignature<int>("getFirstVisibleIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getFixedCellHeight()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setFixedCellHeight(int)"/>
        /// </summary>
        public int FixedCellHeight
        {
            get { return IExecuteWithSignature<int>("getFixedCellHeight", "()I"); } set { IExecuteWithSignature("setFixedCellHeight", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getFixedCellWidth()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setFixedCellWidth(int)"/>
        /// </summary>
        public int FixedCellWidth
        {
            get { return IExecuteWithSignature<int>("getFixedCellWidth", "()I"); } set { IExecuteWithSignature("setFixedCellWidth", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getDropLocation()"/> 
        /// </summary>
        public Javax.Swing.JList.DropLocation GetDropLocation
        {
            get { return IExecuteWithSignature<Javax.Swing.JList.DropLocation>("getDropLocation", "()Ljavax/swing/JList$DropLocation;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getLastVisibleIndex()"/> 
        /// </summary>
        public int LastVisibleIndex
        {
            get { return IExecuteWithSignature<int>("getLastVisibleIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getLayoutOrientation()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setLayoutOrientation(int)"/>
        /// </summary>
        public int LayoutOrientation
        {
            get { return IExecuteWithSignature<int>("getLayoutOrientation", "()I"); } set { IExecuteWithSignature("setLayoutOrientation", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getLeadSelectionIndex()"/> 
        /// </summary>
        public int LeadSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getLeadSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getListSelectionListeners()"/> 
        /// </summary>
        public Javax.Swing.Event.ListSelectionListener[] ListSelectionListeners
        {
            get { return IExecuteWithSignatureArray<Javax.Swing.Event.ListSelectionListener>("getListSelectionListeners", "()[Ljavax/swing/event/ListSelectionListener;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getMaxSelectionIndex()"/> 
        /// </summary>
        public int MaxSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getMaxSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getMinSelectionIndex()"/> 
        /// </summary>
        public int MinSelectionIndex
        {
            get { return IExecuteWithSignature<int>("getMinSelectionIndex", "()I"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getModel()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setModel(javax.swing.ListModel)"/>
        /// </summary>
        public Javax.Swing.ListModel<E> Model
        {
            get { return IExecuteWithSignature<Javax.Swing.ListModel<E>>("getModel", "()Ljavax/swing/ListModel;"); } set { IExecuteWithSignature("setModel", "(Ljavax/swing/ListModel;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getPreferredScrollableViewportSize()"/> 
        /// </summary>
        public Java.Awt.Dimension PreferredScrollableViewportSize
        {
            get { return IExecuteWithSignature<Java.Awt.Dimension>("getPreferredScrollableViewportSize", "()Ljava/awt/Dimension;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getPrototypeCellValue()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setPrototypeCellValue(java.lang.Object)"/>
        /// </summary>
        public E PrototypeCellValue
        {
            get { return IExecuteWithSignature<E>("getPrototypeCellValue", "()Ljava/lang/Object;"); } set { IExecuteWithSignature("setPrototypeCellValue", "(Ljava/lang/Object;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableTracksViewportHeight()"/> 
        /// </summary>
        public bool ScrollableTracksViewportHeight
        {
            get { return IExecuteWithSignature<bool>("getScrollableTracksViewportHeight", "()Z"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableTracksViewportWidth()"/> 
        /// </summary>
        public bool ScrollableTracksViewportWidth
        {
            get { return IExecuteWithSignature<bool>("getScrollableTracksViewportWidth", "()Z"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedIndex()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectedIndex(int)"/>
        /// </summary>
        public int SelectedIndex
        {
            get { return IExecuteWithSignature<int>("getSelectedIndex", "()I"); } set { IExecuteWithSignature("setSelectedIndex", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedIndices()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectedIndices(int[])"/>
        /// </summary>
        public int[] SelectedIndices
        {
            get { return IExecuteWithSignatureArray<int>("getSelectedIndices", "()[I"); } set { IExecuteWithSignature("setSelectedIndices", "([I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedValue()"/> 
        /// </summary>
        public E SelectedValue
        {
            get { return IExecuteWithSignature<E>("getSelectedValue", "()Ljava/lang/Object;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectedValuesList()"/> 
        /// </summary>
        public Java.Util.List<E> SelectedValuesList
        {
            get { return IExecuteWithSignature<Java.Util.List<E>>("getSelectedValuesList", "()Ljava/util/List;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionBackground()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionBackground(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color SelectionBackground
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getSelectionBackground", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setSelectionBackground", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionForeground()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionForeground(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color SelectionForeground
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getSelectionForeground", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setSelectionForeground", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionMode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionMode(int)"/>
        /// </summary>
        public int SelectionMode
        {
            get { return IExecuteWithSignature<int>("getSelectionMode", "()I"); } set { IExecuteWithSignature("setSelectionMode", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getSelectionModel()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionModel(javax.swing.ListSelectionModel)"/>
        /// </summary>
        public Javax.Swing.ListSelectionModel SelectionModel
        {
            get { return IExecuteWithSignature<Javax.Swing.ListSelectionModel>("getSelectionModel", "()Ljavax/swing/ListSelectionModel;"); } set { IExecuteWithSignature("setSelectionModel", "(Ljavax/swing/ListSelectionModel;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getValueIsAdjusting()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setValueIsAdjusting(boolean)"/>
        /// </summary>
        public bool ValueIsAdjusting
        {
            get { return IExecuteWithSignature<bool>("getValueIsAdjusting", "()Z"); } set { IExecuteWithSignature("setValueIsAdjusting", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getVisibleRowCount()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setVisibleRowCount(int)"/>
        /// </summary>
        public int VisibleRowCount
        {
            get { return IExecuteWithSignature<int>("getVisibleRowCount", "()I"); } set { IExecuteWithSignature("setVisibleRowCount", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#isSelectedIndex(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsSelectedIndex(int arg0)
        {
            return IExecuteWithSignature<bool>("isSelectedIndex", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#isSelectionEmpty()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsSelectionEmpty()
        {
            return IExecuteWithSignature<bool>("isSelectionEmpty", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getNextMatch(java.lang.String,int,javax.swing.text.Position.Bias)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Javax.Swing.Text.Position.Bias"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetNextMatch(Java.Lang.String arg0, int arg1, Javax.Swing.Text.Position.Bias arg2)
        {
            return IExecute<int>("getNextMatch", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableBlockIncrement(java.awt.Rectangle,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Rectangle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetScrollableBlockIncrement(Java.Awt.Rectangle arg0, int arg1, int arg2)
        {
            return IExecute<int>("getScrollableBlockIncrement", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getScrollableUnitIncrement(java.awt.Rectangle,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Rectangle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetScrollableUnitIncrement(Java.Awt.Rectangle arg0, int arg1, int arg2)
        {
            return IExecute<int>("getScrollableUnitIncrement", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#locationToIndex(java.awt.Point)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Point"/></param>
        /// <returns><see cref="int"/></returns>
        public int LocationToIndex(Java.Awt.Point arg0)
        {
            return IExecuteWithSignature<int>("locationToIndex", "(Ljava/awt/Point;)I", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#indexToLocation(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Awt.Point"/></returns>
        public Java.Awt.Point IndexToLocation(int arg0)
        {
            return IExecuteWithSignature<Java.Awt.Point>("indexToLocation", "(I)Ljava/awt/Point;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#getCellBounds(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Awt.Rectangle"/></returns>
        public Java.Awt.Rectangle GetCellBounds(int arg0, int arg1)
        {
            return IExecute<Java.Awt.Rectangle>("getCellBounds", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#addListSelectionListener(javax.swing.event.ListSelectionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Event.ListSelectionListener"/></param>
        public void AddListSelectionListener(Javax.Swing.Event.ListSelectionListener arg0)
        {
            IExecuteWithSignature("addListSelectionListener", "(Ljavax/swing/event/ListSelectionListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#addSelectionInterval(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void AddSelectionInterval(int arg0, int arg1)
        {
            IExecute("addSelectionInterval", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#clearSelection()"/>
        /// </summary>
        public void ClearSelection()
        {
            IExecuteWithSignature("clearSelection", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#ensureIndexIsVisible(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void EnsureIndexIsVisible(int arg0)
        {
            IExecuteWithSignature("ensureIndexIsVisible", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#removeListSelectionListener(javax.swing.event.ListSelectionListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Event.ListSelectionListener"/></param>
        public void RemoveListSelectionListener(Javax.Swing.Event.ListSelectionListener arg0)
        {
            IExecuteWithSignature("removeListSelectionListener", "(Ljavax/swing/event/ListSelectionListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#removeSelectionInterval(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void RemoveSelectionInterval(int arg0, int arg1)
        {
            IExecute("removeSelectionInterval", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setListData(java.lang.Object[])"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="E"/></param>
        public void SetListData(E[] arg0)
        {
            IExecuteWithSignature("setListData", "([Ljava/lang/Object;)V", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setListData(java.util.Vector)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Vector"/></param>
        /// <typeparam name="Arg0ExtendsE"><typeparamref name="E"/></typeparam>
        public void SetListData<Arg0ExtendsE>(Java.Util.Vector<Arg0ExtendsE> arg0) where Arg0ExtendsE : E
        {
            IExecuteWithSignature("setListData", "(Ljava/util/Vector;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectedValue(java.lang.Object,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void SetSelectedValue(object arg0, bool arg1)
        {
            IExecute("setSelectedValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setSelectionInterval(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void SetSelectionInterval(int arg0, int arg1)
        {
            IExecute("setSelectionInterval", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/JList.html#setUI(javax.swing.plaf.ListUI)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Plaf.ListUI"/></param>
        public void SetUI(Javax.Swing.Plaf.ListUI arg0)
        {
            IExecuteWithSignature("setUI", "(Ljavax/swing/plaf/ListUI;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}