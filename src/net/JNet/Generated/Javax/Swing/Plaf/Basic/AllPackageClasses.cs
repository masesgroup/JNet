/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

namespace Javax.Swing.Plaf.Basic
{
    #region BasicArrowButton
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicArrowButton.html
    /// </summary>
    public partial class BasicArrowButton : Javax.Swing.JButton
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicArrowButton() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicArrowButton(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicArrowButton";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicBorders
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.html
    /// </summary>
    public partial class BasicBorders : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BasicBorders>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicBorders() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicBorders(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicBorders";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ButtonBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.ButtonBorder.html
        /// </summary>
        public partial class ButtonBorder : Javax.Swing.Border.AbstractBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ButtonBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ButtonBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$ButtonBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region FieldBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.FieldBorder.html
        /// </summary>
        public partial class FieldBorder : Javax.Swing.Border.AbstractBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FieldBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FieldBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$FieldBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region MarginBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.MarginBorder.html
        /// </summary>
        public partial class MarginBorder : Javax.Swing.Border.AbstractBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MarginBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MarginBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$MarginBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region MenuBarBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.MenuBarBorder.html
        /// </summary>
        public partial class MenuBarBorder : Javax.Swing.Border.AbstractBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MenuBarBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MenuBarBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$MenuBarBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region RadioButtonBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.RadioButtonBorder.html
        /// </summary>
        public partial class RadioButtonBorder : Javax.Swing.Plaf.Basic.BasicBorders.ButtonBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public RadioButtonBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public RadioButtonBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$RadioButtonBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region RolloverButtonBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.RolloverButtonBorder.html
        /// </summary>
        public partial class RolloverButtonBorder : Javax.Swing.Plaf.Basic.BasicBorders.ButtonBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public RolloverButtonBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public RolloverButtonBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$RolloverButtonBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region SplitPaneBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.SplitPaneBorder.html
        /// </summary>
        public partial class SplitPaneBorder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SplitPaneBorder>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public SplitPaneBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public SplitPaneBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$SplitPaneBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region ToggleButtonBorder
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicBorders.ToggleButtonBorder.html
        /// </summary>
        public partial class ToggleButtonBorder : Javax.Swing.Plaf.Basic.BasicBorders.ButtonBorder
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ToggleButtonBorder() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ToggleButtonBorder(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicBorders$ToggleButtonBorder";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicButtonListener
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicButtonListener.html
    /// </summary>
    public partial class BasicButtonListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
    {
#warning Remember to build the body class for event listener

        // TODO: complete the class

    }
    #endregion

    #region BasicButtonUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicButtonUI.html
    /// </summary>
    public partial class BasicButtonUI : Javax.Swing.Plaf.ButtonUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicButtonUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicButtonUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicButtonUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicCheckBoxMenuItemUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicCheckBoxMenuItemUI.html
    /// </summary>
    public partial class BasicCheckBoxMenuItemUI : Javax.Swing.Plaf.Basic.BasicMenuItemUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicCheckBoxMenuItemUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicCheckBoxMenuItemUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicCheckBoxMenuItemUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicCheckBoxUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicCheckBoxUI.html
    /// </summary>
    public partial class BasicCheckBoxUI : Javax.Swing.Plaf.Basic.BasicRadioButtonUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicCheckBoxUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicCheckBoxUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicCheckBoxUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicColorChooserUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicColorChooserUI.html
    /// </summary>
    public partial class BasicColorChooserUI : Javax.Swing.Plaf.ColorChooserUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicColorChooserUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicColorChooserUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicColorChooserUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region PropertyHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicColorChooserUI.PropertyHandler.html
        /// </summary>
        public partial class PropertyHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicColorChooserUI$PropertyHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicComboBoxEditor
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxEditor.html
    /// </summary>
    public partial class BasicComboBoxEditor : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BasicComboBoxEditor>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicComboBoxEditor() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicComboBoxEditor(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxEditor";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region UIResource
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxEditor.UIResource.html
        /// </summary>
        public partial class UIResource : Javax.Swing.Plaf.Basic.BasicComboBoxEditor
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public UIResource() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public UIResource(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxEditor$UIResource";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicComboBoxRenderer
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxRenderer.html
    /// </summary>
    public partial class BasicComboBoxRenderer : Javax.Swing.JLabel
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicComboBoxRenderer() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicComboBoxRenderer(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxRenderer";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region UIResource
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxRenderer.UIResource.html
        /// </summary>
        public partial class UIResource : Javax.Swing.Plaf.Basic.BasicComboBoxRenderer
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public UIResource() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public UIResource(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxRenderer$UIResource";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicComboBoxUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxUI.html
    /// </summary>
    public partial class BasicComboBoxUI : Javax.Swing.Plaf.ComboBoxUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicComboBoxUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicComboBoxUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ComboBoxLayoutManager
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxUI.ComboBoxLayoutManager.html
        /// </summary>
        public partial class ComboBoxLayoutManager : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ComboBoxLayoutManager>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ComboBoxLayoutManager() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ComboBoxLayoutManager(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxUI$ComboBoxLayoutManager";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region FocusHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxUI.FocusHandler.html
        /// </summary>
        public partial class FocusHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<FocusHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FocusHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FocusHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxUI$FocusHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ItemHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxUI.ItemHandler.html
        /// </summary>
        public partial class ItemHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ItemHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ItemHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ItemHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxUI$ItemHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ListDataHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxUI.ListDataHandler.html
        /// </summary>
        public partial class ListDataHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ListDataHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ListDataHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ListDataHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxUI$ListDataHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboBoxUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboBoxUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicComboPopup
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboPopup.html
    /// </summary>
    public partial class BasicComboPopup : Javax.Swing.JPopupMenu
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicComboPopup() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicComboPopup(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicComboPopup";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ListDataHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicComboPopup.ListDataHandler.html
        /// </summary>
        public partial class ListDataHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ListDataHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ListDataHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ListDataHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicComboPopup$ListDataHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicDesktopIconUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicDesktopIconUI.html
    /// </summary>
    public partial class BasicDesktopIconUI : Javax.Swing.Plaf.DesktopIconUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicDesktopIconUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicDesktopIconUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicDesktopIconUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicDesktopPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicDesktopPaneUI.html
    /// </summary>
    public partial class BasicDesktopPaneUI : Javax.Swing.Plaf.DesktopPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicDesktopPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicDesktopPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicDesktopPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicDirectoryModel
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicDirectoryModel.html
    /// </summary>
    public partial class BasicDirectoryModel : Javax.Swing.AbstractListModel
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicDirectoryModel() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicDirectoryModel(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicDirectoryModel";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicEditorPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicEditorPaneUI.html
    /// </summary>
    public partial class BasicEditorPaneUI : Javax.Swing.Plaf.Basic.BasicTextUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicEditorPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicEditorPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicEditorPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicFileChooserUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicFileChooserUI.html
    /// </summary>
    public partial class BasicFileChooserUI : Javax.Swing.Plaf.FileChooserUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicFileChooserUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicFileChooserUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicFileChooserUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicFormattedTextFieldUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicFormattedTextFieldUI.html
    /// </summary>
    public partial class BasicFormattedTextFieldUI : Javax.Swing.Plaf.Basic.BasicTextFieldUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicFormattedTextFieldUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicFormattedTextFieldUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicFormattedTextFieldUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicGraphicsUtils
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicGraphicsUtils.html
    /// </summary>
    public partial class BasicGraphicsUtils : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BasicGraphicsUtils>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicGraphicsUtils() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicGraphicsUtils(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicGraphicsUtils";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicHTML
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicHTML.html
    /// </summary>
    public partial class BasicHTML : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BasicHTML>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicHTML() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicHTML(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicHTML";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicIconFactory
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html
    /// </summary>
    public partial class BasicIconFactory : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BasicIconFactory>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicIconFactory() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicIconFactory(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicIconFactory";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicInternalFrameTitlePane
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.html
    /// </summary>
    public partial class BasicInternalFrameTitlePane : Javax.Swing.JComponent
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicInternalFrameTitlePane() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicInternalFrameTitlePane(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region CloseAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.CloseAction.html
        /// </summary>
        public partial class CloseAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CloseAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CloseAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$CloseAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region IconifyAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.IconifyAction.html
        /// </summary>
        public partial class IconifyAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public IconifyAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public IconifyAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$IconifyAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region MaximizeAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.MaximizeAction.html
        /// </summary>
        public partial class MaximizeAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MaximizeAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MaximizeAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$MaximizeAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region MoveAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.MoveAction.html
        /// </summary>
        public partial class MoveAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MoveAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MoveAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$MoveAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region RestoreAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.RestoreAction.html
        /// </summary>
        public partial class RestoreAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public RestoreAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public RestoreAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$RestoreAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region SizeAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.SizeAction.html
        /// </summary>
        public partial class SizeAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public SizeAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public SizeAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$SizeAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region SystemMenuBar
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.SystemMenuBar.html
        /// </summary>
        public partial class SystemMenuBar : Javax.Swing.JMenuBar
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public SystemMenuBar() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public SystemMenuBar(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$SystemMenuBar";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TitlePaneLayout
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameTitlePane.TitlePaneLayout.html
        /// </summary>
        public partial class TitlePaneLayout : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TitlePaneLayout>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TitlePaneLayout() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TitlePaneLayout(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameTitlePane$TitlePaneLayout";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicInternalFrameUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameUI.html
    /// </summary>
    public partial class BasicInternalFrameUI : Javax.Swing.Plaf.InternalFrameUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicInternalFrameUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicInternalFrameUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region InternalFrameLayout
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameUI.InternalFrameLayout.html
        /// </summary>
        public partial class InternalFrameLayout : MASES.JCOBridge.C2JBridge.JVMBridgeBase<InternalFrameLayout>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public InternalFrameLayout() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public InternalFrameLayout(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicInternalFrameUI$InternalFrameLayout";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region InternalFramePropertyChangeListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicInternalFrameUI.InternalFramePropertyChangeListener.html
        /// </summary>
        public partial class InternalFramePropertyChangeListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion


    }
    #endregion

    #region BasicLabelUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicLabelUI.html
    /// </summary>
    public partial class BasicLabelUI : Javax.Swing.Plaf.LabelUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicLabelUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicLabelUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicLabelUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicListUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicListUI.html
    /// </summary>
    public partial class BasicListUI : Javax.Swing.Plaf.ListUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicListUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicListUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicListUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region FocusHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicListUI.FocusHandler.html
        /// </summary>
        public partial class FocusHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<FocusHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FocusHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FocusHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicListUI$FocusHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ListDataHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicListUI.ListDataHandler.html
        /// </summary>
        public partial class ListDataHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ListDataHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ListDataHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ListDataHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicListUI$ListDataHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ListSelectionHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicListUI.ListSelectionHandler.html
        /// </summary>
        public partial class ListSelectionHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ListSelectionHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ListSelectionHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ListSelectionHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicListUI$ListSelectionHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region MouseInputHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicListUI.MouseInputHandler.html
        /// </summary>
        public partial class MouseInputHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MouseInputHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MouseInputHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MouseInputHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicListUI$MouseInputHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicListUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicListUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicLookAndFeel
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html
    /// </summary>
    public partial class BasicLookAndFeel : Javax.Swing.LookAndFeel
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicLookAndFeel() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicLookAndFeel(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicLookAndFeel";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => true;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicMenuBarUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicMenuBarUI.html
    /// </summary>
    public partial class BasicMenuBarUI : Javax.Swing.Plaf.MenuBarUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicMenuBarUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicMenuBarUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicMenuBarUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicMenuItemUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicMenuItemUI.html
    /// </summary>
    public partial class BasicMenuItemUI : Javax.Swing.Plaf.MenuItemUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicMenuItemUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicMenuItemUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicMenuItemUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicMenuUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicMenuUI.html
    /// </summary>
    public partial class BasicMenuUI : Javax.Swing.Plaf.Basic.BasicMenuItemUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicMenuUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicMenuUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicMenuUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicMenuUI.ChangeHandler.html
        /// </summary>
        public partial class ChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicMenuUI$ChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicOptionPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicOptionPaneUI.html
    /// </summary>
    public partial class BasicOptionPaneUI : Javax.Swing.Plaf.OptionPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicOptionPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicOptionPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicOptionPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ButtonActionListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicOptionPaneUI.ButtonActionListener.html
        /// </summary>
        public partial class ButtonActionListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion

        #region ButtonAreaLayout
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicOptionPaneUI.ButtonAreaLayout.html
        /// </summary>
        public partial class ButtonAreaLayout : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ButtonAreaLayout>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ButtonAreaLayout() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ButtonAreaLayout(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicOptionPaneUI$ButtonAreaLayout";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicOptionPaneUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicOptionPaneUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicPanelUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicPanelUI.html
    /// </summary>
    public partial class BasicPanelUI : Javax.Swing.Plaf.PanelUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicPanelUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicPanelUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicPanelUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicPasswordFieldUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicPasswordFieldUI.html
    /// </summary>
    public partial class BasicPasswordFieldUI : Javax.Swing.Plaf.Basic.BasicTextFieldUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicPasswordFieldUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicPasswordFieldUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicPasswordFieldUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicPopupMenuSeparatorUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.html
    /// </summary>
    public partial class BasicPopupMenuSeparatorUI : Javax.Swing.Plaf.Basic.BasicSeparatorUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicPopupMenuSeparatorUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicPopupMenuSeparatorUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicPopupMenuSeparatorUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicPopupMenuUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicPopupMenuUI.html
    /// </summary>
    public partial class BasicPopupMenuUI : Javax.Swing.Plaf.PopupMenuUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicPopupMenuUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicPopupMenuUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicPopupMenuUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicProgressBarUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicProgressBarUI.html
    /// </summary>
    public partial class BasicProgressBarUI : Javax.Swing.Plaf.ProgressBarUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicProgressBarUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicProgressBarUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicProgressBarUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicProgressBarUI.ChangeHandler.html
        /// </summary>
        public partial class ChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicProgressBarUI$ChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicRadioButtonMenuItemUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicRadioButtonMenuItemUI.html
    /// </summary>
    public partial class BasicRadioButtonMenuItemUI : Javax.Swing.Plaf.Basic.BasicMenuItemUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicRadioButtonMenuItemUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicRadioButtonMenuItemUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicRadioButtonMenuItemUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicRadioButtonUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicRadioButtonUI.html
    /// </summary>
    public partial class BasicRadioButtonUI : Javax.Swing.Plaf.Basic.BasicToggleButtonUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicRadioButtonUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicRadioButtonUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicRadioButtonUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicRootPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicRootPaneUI.html
    /// </summary>
    public partial class BasicRootPaneUI : Javax.Swing.Plaf.RootPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicRootPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicRootPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicRootPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicScrollBarUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollBarUI.html
    /// </summary>
    public partial class BasicScrollBarUI : Javax.Swing.Plaf.ScrollBarUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicScrollBarUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicScrollBarUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicScrollBarUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollBarUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicScrollBarUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicScrollPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollPaneUI.html
    /// </summary>
    public partial class BasicScrollPaneUI : Javax.Swing.Plaf.ScrollPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicScrollPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicScrollPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicScrollPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region HSBChangeListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollPaneUI.HSBChangeListener.html
        /// </summary>
        public partial class HSBChangeListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollPaneUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicScrollPaneUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ViewportChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollPaneUI.ViewportChangeHandler.html
        /// </summary>
        public partial class ViewportChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ViewportChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ViewportChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ViewportChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicScrollPaneUI$ViewportChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region VSBChangeListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicScrollPaneUI.VSBChangeListener.html
        /// </summary>
        public partial class VSBChangeListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion


    }
    #endregion

    #region BasicSeparatorUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSeparatorUI.html
    /// </summary>
    public partial class BasicSeparatorUI : Javax.Swing.Plaf.SeparatorUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicSeparatorUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicSeparatorUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicSeparatorUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicSliderUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.html
    /// </summary>
    public partial class BasicSliderUI : Javax.Swing.Plaf.SliderUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicSliderUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicSliderUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicSliderUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region ActionScroller
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.ActionScroller.html
        /// </summary>
        public partial class ActionScroller : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ActionScroller() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ActionScroller(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSliderUI$ActionScroller";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.ChangeHandler.html
        /// </summary>
        public partial class ChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSliderUI$ChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region FocusHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.FocusHandler.html
        /// </summary>
        public partial class FocusHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<FocusHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FocusHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FocusHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSliderUI$FocusHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSliderUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region ScrollListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.ScrollListener.html
        /// </summary>
        public partial class ScrollListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion

        #region TrackListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSliderUI.TrackListener.html
        /// </summary>
        public partial class TrackListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion


    }
    #endregion

    #region BasicSpinnerUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html
    /// </summary>
    public partial class BasicSpinnerUI : Javax.Swing.Plaf.SpinnerUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicSpinnerUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicSpinnerUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicSpinnerUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicSplitPaneDivider
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneDivider.html
    /// </summary>
    public partial class BasicSplitPaneDivider : Java.Awt.Container
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicSplitPaneDivider() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicSplitPaneDivider(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneDivider";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicSplitPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.html
    /// </summary>
    public partial class BasicSplitPaneUI : Javax.Swing.Plaf.SplitPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicSplitPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicSplitPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region BasicHorizontalLayoutManager
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.BasicHorizontalLayoutManager.html
        /// </summary>
        public partial class BasicHorizontalLayoutManager : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BasicHorizontalLayoutManager>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public BasicHorizontalLayoutManager() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public BasicHorizontalLayoutManager(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$BasicHorizontalLayoutManager";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region BasicVerticalLayoutManager
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.BasicVerticalLayoutManager.html
        /// </summary>
        public partial class BasicVerticalLayoutManager : Javax.Swing.Plaf.Basic.BasicSplitPaneUI.BasicHorizontalLayoutManager
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public BasicVerticalLayoutManager() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public BasicVerticalLayoutManager(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$BasicVerticalLayoutManager";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region KeyboardDownRightHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.KeyboardDownRightHandler.html
        /// </summary>
        public partial class KeyboardDownRightHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KeyboardDownRightHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public KeyboardDownRightHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public KeyboardDownRightHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardDownRightHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region KeyboardEndHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.KeyboardEndHandler.html
        /// </summary>
        public partial class KeyboardEndHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KeyboardEndHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public KeyboardEndHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public KeyboardEndHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardEndHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region KeyboardHomeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.KeyboardHomeHandler.html
        /// </summary>
        public partial class KeyboardHomeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KeyboardHomeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public KeyboardHomeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public KeyboardHomeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardHomeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region KeyboardResizeToggleHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.KeyboardResizeToggleHandler.html
        /// </summary>
        public partial class KeyboardResizeToggleHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KeyboardResizeToggleHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public KeyboardResizeToggleHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public KeyboardResizeToggleHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardResizeToggleHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region KeyboardUpLeftHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.KeyboardUpLeftHandler.html
        /// </summary>
        public partial class KeyboardUpLeftHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KeyboardUpLeftHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public KeyboardUpLeftHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public KeyboardUpLeftHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardUpLeftHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region PropertyHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicSplitPaneUI.PropertyHandler.html
        /// </summary>
        public partial class PropertyHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicSplitPaneUI$PropertyHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicTabbedPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTabbedPaneUI.html
    /// </summary>
    public partial class BasicTabbedPaneUI : Javax.Swing.Plaf.TabbedPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTabbedPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTabbedPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTabbedPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTabbedPaneUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTabbedPaneUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TabbedPaneLayout
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTabbedPaneUI.TabbedPaneLayout.html
        /// </summary>
        public partial class TabbedPaneLayout : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TabbedPaneLayout>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TabbedPaneLayout() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TabbedPaneLayout(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTabbedPaneUI$TabbedPaneLayout";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TabSelectionHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTabbedPaneUI.TabSelectionHandler.html
        /// </summary>
        public partial class TabSelectionHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TabSelectionHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TabSelectionHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TabSelectionHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTabbedPaneUI$TabSelectionHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicTableHeaderUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTableHeaderUI.html
    /// </summary>
    public partial class BasicTableHeaderUI : Javax.Swing.Plaf.TableHeaderUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTableHeaderUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTableHeaderUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTableHeaderUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region MouseInputHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTableHeaderUI.MouseInputHandler.html
        /// </summary>
        public partial class MouseInputHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MouseInputHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MouseInputHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MouseInputHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTableHeaderUI$MouseInputHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicTableUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTableUI.html
    /// </summary>
    public partial class BasicTableUI : Javax.Swing.Plaf.TableUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTableUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTableUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTableUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region FocusHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTableUI.FocusHandler.html
        /// </summary>
        public partial class FocusHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<FocusHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FocusHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FocusHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTableUI$FocusHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region KeyHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTableUI.KeyHandler.html
        /// </summary>
        public partial class KeyHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KeyHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public KeyHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public KeyHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTableUI$KeyHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region MouseInputHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTableUI.MouseInputHandler.html
        /// </summary>
        public partial class MouseInputHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MouseInputHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MouseInputHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MouseInputHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTableUI$MouseInputHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicTextAreaUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTextAreaUI.html
    /// </summary>
    public partial class BasicTextAreaUI : Javax.Swing.Plaf.Basic.BasicTextUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTextAreaUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTextAreaUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTextAreaUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicTextFieldUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTextFieldUI.html
    /// </summary>
    public partial class BasicTextFieldUI : Javax.Swing.Plaf.Basic.BasicTextUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTextFieldUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTextFieldUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTextFieldUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicTextPaneUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTextPaneUI.html
    /// </summary>
    public partial class BasicTextPaneUI : Javax.Swing.Plaf.Basic.BasicEditorPaneUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTextPaneUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTextPaneUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTextPaneUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicTextUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTextUI.html
    /// </summary>
    public partial class BasicTextUI : Javax.Swing.Plaf.TextUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTextUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTextUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTextUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => true;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region BasicCaret
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTextUI.BasicCaret.html
        /// </summary>
        public partial class BasicCaret : Javax.Swing.Text.DefaultCaret
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public BasicCaret() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public BasicCaret(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTextUI$BasicCaret";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion

        #region BasicHighlighter
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTextUI.BasicHighlighter.html
        /// </summary>
        public partial class BasicHighlighter : Javax.Swing.Text.DefaultHighlighter
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public BasicHighlighter() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public BasicHighlighter(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTextUI$BasicHighlighter";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => true;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicToggleButtonUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicToggleButtonUI.html
    /// </summary>
    public partial class BasicToggleButtonUI : Javax.Swing.Plaf.Basic.BasicButtonUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicToggleButtonUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicToggleButtonUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicToggleButtonUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicToolBarSeparatorUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicToolBarSeparatorUI.html
    /// </summary>
    public partial class BasicToolBarSeparatorUI : Javax.Swing.Plaf.Basic.BasicSeparatorUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicToolBarSeparatorUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicToolBarSeparatorUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicToolBarSeparatorUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicToolBarUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicToolBarUI.html
    /// </summary>
    public partial class BasicToolBarUI : Javax.Swing.Plaf.ToolBarUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicToolBarUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicToolBarUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicToolBarUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region DockingListener
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicToolBarUI.DockingListener.html
        /// </summary>
        public partial class DockingListener : MASES.JCOBridge.C2JBridge.JVMBridgeListener
        {
#warning Remember to build the body class for event listener
        }
        #endregion


    }
    #endregion

    #region BasicToolTipUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicToolTipUI.html
    /// </summary>
    public partial class BasicToolTipUI : Javax.Swing.Plaf.ToolTipUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicToolTipUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicToolTipUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicToolTipUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicTreeUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.html
    /// </summary>
    public partial class BasicTreeUI : Javax.Swing.Plaf.TreeUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicTreeUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicTreeUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class
        #region CellEditorHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.CellEditorHandler.html
        /// </summary>
        public partial class CellEditorHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<CellEditorHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CellEditorHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CellEditorHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$CellEditorHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region FocusHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.FocusHandler.html
        /// </summary>
        public partial class FocusHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<FocusHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public FocusHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public FocusHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$FocusHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region MouseInputHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.MouseInputHandler.html
        /// </summary>
        public partial class MouseInputHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MouseInputHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MouseInputHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MouseInputHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$MouseInputHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region NodeDimensionsHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.NodeDimensionsHandler.html
        /// </summary>
        public partial class NodeDimensionsHandler : Javax.Swing.Tree.AbstractLayoutCache.NodeDimensions
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public NodeDimensionsHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public NodeDimensionsHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$NodeDimensionsHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region PropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.PropertyChangeHandler.html
        /// </summary>
        public partial class PropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$PropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region SelectionModelPropertyChangeHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.SelectionModelPropertyChangeHandler.html
        /// </summary>
        public partial class SelectionModelPropertyChangeHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SelectionModelPropertyChangeHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public SelectionModelPropertyChangeHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public SelectionModelPropertyChangeHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$SelectionModelPropertyChangeHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeCancelEditingAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeCancelEditingAction.html
        /// </summary>
        public partial class TreeCancelEditingAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeCancelEditingAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeCancelEditingAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeCancelEditingAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeExpansionHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeExpansionHandler.html
        /// </summary>
        public partial class TreeExpansionHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TreeExpansionHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeExpansionHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeExpansionHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeExpansionHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeHomeAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeHomeAction.html
        /// </summary>
        public partial class TreeHomeAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeHomeAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeHomeAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeHomeAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeIncrementAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeIncrementAction.html
        /// </summary>
        public partial class TreeIncrementAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeIncrementAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeIncrementAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeIncrementAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeModelHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeModelHandler.html
        /// </summary>
        public partial class TreeModelHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TreeModelHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeModelHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeModelHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeModelHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreePageAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreePageAction.html
        /// </summary>
        public partial class TreePageAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreePageAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreePageAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreePageAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeSelectionHandler
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeSelectionHandler.html
        /// </summary>
        public partial class TreeSelectionHandler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TreeSelectionHandler>
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeSelectionHandler() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeSelectionHandler(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeSelectionHandler";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeToggleAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeToggleAction.html
        /// </summary>
        public partial class TreeToggleAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeToggleAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeToggleAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeToggleAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion

        #region TreeTraverseAction
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicTreeUI.TreeTraverseAction.html
        /// </summary>
        public partial class TreeTraverseAction : Javax.Swing.AbstractAction
        {
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TreeTraverseAction() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TreeTraverseAction(params object[] args) : base(args) { }

            /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
            public override string ClassName => "javax.swing.plaf.basic.BasicTreeUI$TreeTraverseAction";

            /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
            public override bool IsAbstract => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
            public override bool IsCloseable => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
            public override bool IsInterface => false;
            
            /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
            public override bool IsStatic => false;

            // TODO: complete the class
        }
        #endregion


    }
    #endregion

    #region BasicViewportUI
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicViewportUI.html
    /// </summary>
    public partial class BasicViewportUI : Javax.Swing.Plaf.ViewportUI
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicViewportUI() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicViewportUI(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.BasicViewportUI";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region ComboPopup
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/ComboPopup.html
    /// </summary>
    public partial class ComboPopup : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ComboPopup>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ComboPopup() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ComboPopup(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.ComboPopup";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => true;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => true;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region DefaultMenuLayout
    /// <summary>
    /// https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/DefaultMenuLayout.html
    /// </summary>
    public partial class DefaultMenuLayout : Javax.Swing.BoxLayout
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public DefaultMenuLayout() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public DefaultMenuLayout(params object[] args) : base(args) { }

        /// <inheritdoc cref="JVMBridgeBase.ClassName"/>
        public override string ClassName => "javax.swing.plaf.basic.DefaultMenuLayout";

        /// <inheritdoc cref="JVMBridgeBase.IsAbstract"/>
        public override bool IsAbstract => false;

        /// <inheritdoc cref="JVMBridgeBase.IsCloseable"/>
        public override bool IsCloseable => false;

        /// <inheritdoc cref="JVMBridgeBase.IsInterface"/>
        public override bool IsInterface => false;

        /// <inheritdoc cref="JVMBridgeBase.IsStatic"/>
        public override bool IsStatic => false;

        // TODO: complete the class

    }
    #endregion


}