/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.3.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing.Plaf.Basic
{
    #region BasicIconFactory declaration
    /// <summary>
    /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html"/>
    /// </summary>
    public partial class BasicIconFactory : Java.Io.Serializable
    {
        const string _bridgeClassName = "javax.swing.plaf.basic.BasicIconFactory";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BasicIconFactory() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public BasicIconFactory(IJVMBridgeCore parent) : base(parent) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BasicIconFactory(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BasicIconFactory implementation
    public partial class BasicIconFactory
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getCheckBoxIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetCheckBoxIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getCheckBoxIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getCheckBoxMenuItemIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetCheckBoxMenuItemIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getCheckBoxMenuItemIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getMenuArrowIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetMenuArrowIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getMenuArrowIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getMenuItemArrowIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetMenuItemArrowIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getMenuItemArrowIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getMenuItemCheckIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetMenuItemCheckIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getMenuItemCheckIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getRadioButtonIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetRadioButtonIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getRadioButtonIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#getRadioButtonMenuItemIcon()"/> 
        /// </summary>
        public static Javax.Swing.Icon GetRadioButtonMenuItemIcon
        {
            get { return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "getRadioButtonMenuItemIcon", "()Ljavax/swing/Icon;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/basic/BasicIconFactory.html#createEmptyFrameIcon()"/>
        /// </summary>
        /// <returns><see cref="Javax.Swing.Icon"/></returns>
        public static Javax.Swing.Icon CreateEmptyFrameIcon()
        {
            return SExecuteWithSignature<Javax.Swing.Icon>(LocalBridgeClazz, "createEmptyFrameIcon", "()Ljavax/swing/Icon;");
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}