/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.1.1.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing
{
    #region Spring
    public partial class Spring
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#UNSET"/>
        /// </summary>
        public static int UNSET { get { return SGetField<int>(LocalBridgeClazz, "UNSET"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#constant(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Constant(int arg0, int arg1, int arg2)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "constant", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#constant(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Constant(int arg0)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "constant", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#height(java.awt.Component)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Height(Java.Awt.Component arg0)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "height", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#max(javax.swing.Spring,javax.swing.Spring)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Spring"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Spring"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Max(Javax.Swing.Spring arg0, Javax.Swing.Spring arg1)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "max", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#minus(javax.swing.Spring)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Spring"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Minus(Javax.Swing.Spring arg0)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "minus", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#scale(javax.swing.Spring,float)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Spring"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Scale(Javax.Swing.Spring arg0, float arg1)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "scale", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#sum(javax.swing.Spring,javax.swing.Spring)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Spring"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Spring"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Sum(Javax.Swing.Spring arg0, Javax.Swing.Spring arg1)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "sum", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#width(java.awt.Component)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Component"/></param>
        /// <returns><see cref="Javax.Swing.Spring"/></returns>
        public static Javax.Swing.Spring Width(Java.Awt.Component arg0)
        {
            return SExecute<Javax.Swing.Spring>(LocalBridgeClazz, "width", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#getMaximumValue()"/> 
        /// </summary>
        public int MaximumValue
        {
            get { return IExecute<int>("getMaximumValue"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#getMinimumValue()"/> 
        /// </summary>
        public int MinimumValue
        {
            get { return IExecute<int>("getMinimumValue"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#getPreferredValue()"/> 
        /// </summary>
        public int PreferredValue
        {
            get { return IExecute<int>("getPreferredValue"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#getValue()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/Spring.html#setValue(int)"/>
        /// </summary>
        public int Value
        {
            get { return IExecute<int>("getValue"); } set { IExecute("setValue", value); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}