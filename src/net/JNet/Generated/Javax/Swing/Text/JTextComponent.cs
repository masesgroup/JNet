/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.7.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Swing.Text
{
    #region JTextComponent
    public partial class JTextComponent
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Swing.Text.JTextComponent"/> to <see cref="Javax.Swing.Scrollable"/>
        /// </summary>
        public static implicit operator Javax.Swing.Scrollable(Javax.Swing.Text.JTextComponent t) => t.Cast<Javax.Swing.Scrollable>();
        /// <summary>
        /// Converter from <see cref="Javax.Swing.Text.JTextComponent"/> to <see cref="Javax.Accessibility.Accessible"/>
        /// </summary>
        public static implicit operator Javax.Accessibility.Accessible(Javax.Swing.Text.JTextComponent t) => t.Cast<Javax.Accessibility.Accessible>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#DEFAULT_KEYMAP"/>
        /// </summary>
        public static Java.Lang.String DEFAULT_KEYMAP { get { if (!_DEFAULT_KEYMAPReady) { _DEFAULT_KEYMAPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "DEFAULT_KEYMAP"); _DEFAULT_KEYMAPReady = true; } return _DEFAULT_KEYMAPContent; } }
        private static Java.Lang.String _DEFAULT_KEYMAPContent = default;
        private static bool _DEFAULT_KEYMAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#FOCUS_ACCELERATOR_KEY"/>
        /// </summary>
        public static Java.Lang.String FOCUS_ACCELERATOR_KEY { get { if (!_FOCUS_ACCELERATOR_KEYReady) { _FOCUS_ACCELERATOR_KEYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "FOCUS_ACCELERATOR_KEY"); _FOCUS_ACCELERATOR_KEYReady = true; } return _FOCUS_ACCELERATOR_KEYContent; } }
        private static Java.Lang.String _FOCUS_ACCELERATOR_KEYContent = default;
        private static bool _FOCUS_ACCELERATOR_KEYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#addKeymap(java.lang.String,javax.swing.text.Keymap)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Text.Keymap"/></param>
        /// <returns><see cref="Javax.Swing.Text.Keymap"/></returns>
        public static Javax.Swing.Text.Keymap AddKeymap(Java.Lang.String arg0, Javax.Swing.Text.Keymap arg1)
        {
            return SExecute<Javax.Swing.Text.Keymap>(LocalBridgeClazz, "addKeymap", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getKeymap(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Javax.Swing.Text.Keymap"/></returns>
        public static Javax.Swing.Text.Keymap GetKeymap(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Javax.Swing.Text.Keymap>(LocalBridgeClazz, "getKeymap", "(Ljava/lang/String;)Ljavax/swing/text/Keymap;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#removeKeymap(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Javax.Swing.Text.Keymap"/></returns>
        public static Javax.Swing.Text.Keymap RemoveKeymap(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Javax.Swing.Text.Keymap>(LocalBridgeClazz, "removeKeymap", "(Ljava/lang/String;)Ljavax/swing/text/Keymap;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#loadKeymap(javax.swing.text.Keymap,javax.swing.text.JTextComponent.KeyBinding[],javax.swing.Action[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Text.Keymap"/></param>
        /// <param name="arg1"><see cref="Javax.Swing.Text.JTextComponent.KeyBinding"/></param>
        /// <param name="arg2"><see cref="Javax.Swing.Action"/></param>
        public static void LoadKeymap(Javax.Swing.Text.Keymap arg0, Javax.Swing.Text.JTextComponent.KeyBinding[] arg1, Javax.Swing.Action[] arg2)
        {
            SExecute(LocalBridgeClazz, "loadKeymap", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getActions()"/> 
        /// </summary>
        public Javax.Swing.Action[] Actions
        {
            get { return IExecuteWithSignatureArray<Javax.Swing.Action>("getActions", "()[Ljavax/swing/Action;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getCaret()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setCaret(javax.swing.text.Caret)"/>
        /// </summary>
        public Javax.Swing.Text.Caret Caret
        {
            get { return IExecuteWithSignature<Javax.Swing.Text.Caret>("getCaret", "()Ljavax/swing/text/Caret;"); } set { IExecuteWithSignature("setCaret", "(Ljavax/swing/text/Caret;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getCaretColor()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setCaretColor(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color CaretColor
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getCaretColor", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setCaretColor", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getCaretListeners()"/> 
        /// </summary>
        public Javax.Swing.Event.CaretListener[] CaretListeners
        {
            get { return IExecuteWithSignatureArray<Javax.Swing.Event.CaretListener>("getCaretListeners", "()[Ljavax/swing/event/CaretListener;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getCaretPosition()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setCaretPosition(int)"/>
        /// </summary>
        public int CaretPosition
        {
            get { return IExecuteWithSignature<int>("getCaretPosition", "()I"); } set { IExecuteWithSignature("setCaretPosition", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getDisabledTextColor()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setDisabledTextColor(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color DisabledTextColor
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getDisabledTextColor", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setDisabledTextColor", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getDocument()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setDocument(javax.swing.text.Document)"/>
        /// </summary>
        public Javax.Swing.Text.Document Document
        {
            get { return IExecuteWithSignature<Javax.Swing.Text.Document>("getDocument", "()Ljavax/swing/text/Document;"); } set { IExecuteWithSignature("setDocument", "(Ljavax/swing/text/Document;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getDragEnabled()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setDragEnabled(boolean)"/>
        /// </summary>
        public bool DragEnabled
        {
            get { return IExecuteWithSignature<bool>("getDragEnabled", "()Z"); } set { IExecuteWithSignature("setDragEnabled", "(Z)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getDropMode()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setDropMode(javax.swing.DropMode)"/>
        /// </summary>
        public Javax.Swing.DropMode DropMode
        {
            get { return IExecuteWithSignature<Javax.Swing.DropMode>("getDropMode", "()Ljavax/swing/DropMode;"); } set { IExecuteWithSignature("setDropMode", "(Ljavax/swing/DropMode;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getFocusAccelerator()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setFocusAccelerator(char)"/>
        /// </summary>
        public char FocusAccelerator
        {
            get { return IExecuteWithSignature<char>("getFocusAccelerator", "()C"); } set { IExecuteWithSignature("setFocusAccelerator", "(C)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getDropLocation()"/> 
        /// </summary>
        public Javax.Swing.Text.JTextComponent.DropLocation GetDropLocation
        {
            get { return IExecuteWithSignature<Javax.Swing.Text.JTextComponent.DropLocation>("getDropLocation", "()Ljavax/swing/text/JTextComponent$DropLocation;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getHighlighter()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setHighlighter(javax.swing.text.Highlighter)"/>
        /// </summary>
        public Javax.Swing.Text.Highlighter Highlighter
        {
            get { return IExecuteWithSignature<Javax.Swing.Text.Highlighter>("getHighlighter", "()Ljavax/swing/text/Highlighter;"); } set { IExecuteWithSignature("setHighlighter", "(Ljavax/swing/text/Highlighter;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getKeymap()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setKeymap(javax.swing.text.Keymap)"/>
        /// </summary>
        public Javax.Swing.Text.Keymap Keymap
        {
            get { return IExecuteWithSignature<Javax.Swing.Text.Keymap>("getKeymap", "()Ljavax/swing/text/Keymap;"); } set { IExecuteWithSignature("setKeymap", "(Ljavax/swing/text/Keymap;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getMargin()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setMargin(java.awt.Insets)"/>
        /// </summary>
        public Java.Awt.Insets Margin
        {
            get { return IExecuteWithSignature<Java.Awt.Insets>("getMargin", "()Ljava/awt/Insets;"); } set { IExecuteWithSignature("setMargin", "(Ljava/awt/Insets;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getNavigationFilter()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setNavigationFilter(javax.swing.text.NavigationFilter)"/>
        /// </summary>
        public Javax.Swing.Text.NavigationFilter NavigationFilter
        {
            get { return IExecuteWithSignature<Javax.Swing.Text.NavigationFilter>("getNavigationFilter", "()Ljavax/swing/text/NavigationFilter;"); } set { IExecuteWithSignature("setNavigationFilter", "(Ljavax/swing/text/NavigationFilter;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getPreferredScrollableViewportSize()"/> 
        /// </summary>
        public Java.Awt.Dimension PreferredScrollableViewportSize
        {
            get { return IExecuteWithSignature<Java.Awt.Dimension>("getPreferredScrollableViewportSize", "()Ljava/awt/Dimension;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getScrollableTracksViewportHeight()"/> 
        /// </summary>
        public bool ScrollableTracksViewportHeight
        {
            get { return IExecuteWithSignature<bool>("getScrollableTracksViewportHeight", "()Z"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getScrollableTracksViewportWidth()"/> 
        /// </summary>
        public bool ScrollableTracksViewportWidth
        {
            get { return IExecuteWithSignature<bool>("getScrollableTracksViewportWidth", "()Z"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getSelectedText()"/> 
        /// </summary>
        public Java.Lang.String SelectedText
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getSelectedText", "()Ljava/lang/String;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getSelectedTextColor()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setSelectedTextColor(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color SelectedTextColor
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getSelectedTextColor", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setSelectedTextColor", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getSelectionColor()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setSelectionColor(java.awt.Color)"/>
        /// </summary>
        public Java.Awt.Color SelectionColor
        {
            get { return IExecuteWithSignature<Java.Awt.Color>("getSelectionColor", "()Ljava/awt/Color;"); } set { IExecuteWithSignature("setSelectionColor", "(Ljava/awt/Color;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getSelectionEnd()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setSelectionEnd(int)"/>
        /// </summary>
        public int SelectionEnd
        {
            get { return IExecuteWithSignature<int>("getSelectionEnd", "()I"); } set { IExecuteWithSignature("setSelectionEnd", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getSelectionStart()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setSelectionStart(int)"/>
        /// </summary>
        public int SelectionStart
        {
            get { return IExecuteWithSignature<int>("getSelectionStart", "()I"); } set { IExecuteWithSignature("setSelectionStart", "(I)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getText()"/> <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setText(java.lang.String)"/>
        /// </summary>
        public Java.Lang.String Text
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getText", "()Ljava/lang/String;"); } set { IExecuteWithSignature("setText", "(Ljava/lang/String;)V", value); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#isEditable()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsEditable()
        {
            return IExecuteWithSignature<bool>("isEditable", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#print()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Awt.Print.PrinterException"/>
        public bool Print()
        {
            return IExecuteWithSignature<bool>("print", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Text.MessageFormat"/></param>
        /// <param name="arg1"><see cref="Java.Text.MessageFormat"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="Javax.Print.PrintService"/></param>
        /// <param name="arg4"><see cref="Javax.Print.Attribute.PrintRequestAttributeSet"/></param>
        /// <param name="arg5"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Awt.Print.PrinterException"/>
        public bool Print(Java.Text.MessageFormat arg0, Java.Text.MessageFormat arg1, bool arg2, Javax.Print.PrintService arg3, Javax.Print.Attribute.PrintRequestAttributeSet arg4, bool arg5)
        {
            return IExecute<bool>("print", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#print(java.text.MessageFormat,java.text.MessageFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Text.MessageFormat"/></param>
        /// <param name="arg1"><see cref="Java.Text.MessageFormat"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Awt.Print.PrinterException"/>
        public bool Print(Java.Text.MessageFormat arg0, Java.Text.MessageFormat arg1)
        {
            return IExecute<bool>("print", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getScrollableBlockIncrement(java.awt.Rectangle,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Rectangle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetScrollableBlockIncrement(Java.Awt.Rectangle arg0, int arg1, int arg2)
        {
            return IExecute<int>("getScrollableBlockIncrement", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getScrollableUnitIncrement(java.awt.Rectangle,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Rectangle"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int GetScrollableUnitIncrement(Java.Awt.Rectangle arg0, int arg1, int arg2)
        {
            return IExecute<int>("getScrollableUnitIncrement", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#viewToModel2D(java.awt.geom.Point2D)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Awt.Geom.Point2D"/></param>
        /// <returns><see cref="int"/></returns>
        public int ViewToModel2D(Java.Awt.Geom.Point2D arg0)
        {
            return IExecuteWithSignature<int>("viewToModel2D", "(Ljava/awt/geom/Point2D;)I", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#modelToView2D(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Awt.Geom.Rectangle2D"/></returns>
        /// <exception cref="Javax.Swing.Text.BadLocationException"/>
        public Java.Awt.Geom.Rectangle2D ModelToView2D(int arg0)
        {
            return IExecuteWithSignature<Java.Awt.Geom.Rectangle2D>("modelToView2D", "(I)Ljava/awt/geom/Rectangle2D;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getPrintable(java.text.MessageFormat,java.text.MessageFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Text.MessageFormat"/></param>
        /// <param name="arg1"><see cref="Java.Text.MessageFormat"/></param>
        /// <returns><see cref="Java.Awt.Print.Printable"/></returns>
        public Java.Awt.Print.Printable GetPrintable(Java.Text.MessageFormat arg0, Java.Text.MessageFormat arg1)
        {
            return IExecute<Java.Awt.Print.Printable>("getPrintable", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getText(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Javax.Swing.Text.BadLocationException"/>
        public Java.Lang.String GetText(int arg0, int arg1)
        {
            return IExecute<Java.Lang.String>("getText", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#addCaretListener(javax.swing.event.CaretListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Event.CaretListener"/></param>
        public void AddCaretListener(Javax.Swing.Event.CaretListener arg0)
        {
            IExecuteWithSignature("addCaretListener", "(Ljavax/swing/event/CaretListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#copy()"/>
        /// </summary>
        public void Copy()
        {
            IExecuteWithSignature("copy", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#cut()"/>
        /// </summary>
        public void Cut()
        {
            IExecuteWithSignature("cut", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#moveCaretPosition(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        public void MoveCaretPosition(int arg0)
        {
            IExecuteWithSignature("moveCaretPosition", "(I)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#paste()"/>
        /// </summary>
        public void Paste()
        {
            IExecuteWithSignature("paste", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#read(java.io.Reader,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.Reader"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Read(Java.Io.Reader arg0, object arg1)
        {
            IExecute("read", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#removeCaretListener(javax.swing.event.CaretListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Event.CaretListener"/></param>
        public void RemoveCaretListener(Javax.Swing.Event.CaretListener arg0)
        {
            IExecuteWithSignature("removeCaretListener", "(Ljavax/swing/event/CaretListener;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#replaceSelection(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void ReplaceSelection(Java.Lang.String arg0)
        {
            IExecuteWithSignature("replaceSelection", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#select(int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void Select(int arg0, int arg1)
        {
            IExecute("select", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#selectAll()"/>
        /// </summary>
        public void SelectAll()
        {
            IExecuteWithSignature("selectAll", "()V");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setEditable(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void SetEditable(bool arg0)
        {
            IExecuteWithSignature("setEditable", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#setUI(javax.swing.plaf.TextUI)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Swing.Plaf.TextUI"/></param>
        public void SetUI(Javax.Swing.Plaf.TextUI arg0)
        {
            IExecuteWithSignature("setUI", "(Ljavax/swing/plaf/TextUI;)V", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.html#write(java.io.Writer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.Writer"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Write(Java.Io.Writer arg0)
        {
            IExecuteWithSignature("write", "(Ljava/io/Writer;)V", arg0);
        }

        #endregion

        #region Nested classes
        #region AccessibleJTextComponent
        public partial class AccessibleJTextComponent
        {
            #region Constructors
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#%3Cinit%3E(javax.swing.text.JTextComponent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Javax.Swing.Text.JTextComponent"/></param>
            public AccessibleJTextComponent(Javax.Swing.Text.JTextComponent arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Javax.Swing.Text.JTextComponent.AccessibleJTextComponent"/> to <see cref="Javax.Accessibility.AccessibleText"/>
            /// </summary>
            public static implicit operator Javax.Accessibility.AccessibleText(Javax.Swing.Text.JTextComponent.AccessibleJTextComponent t) => t.Cast<Javax.Accessibility.AccessibleText>();
            /// <summary>
            /// Converter from <see cref="Javax.Swing.Text.JTextComponent.AccessibleJTextComponent"/> to <see cref="Javax.Swing.Event.CaretListener"/>
            /// </summary>
            public static implicit operator Javax.Swing.Event.CaretListener(Javax.Swing.Text.JTextComponent.AccessibleJTextComponent t) => t.Cast<Javax.Swing.Event.CaretListener>();
            /// <summary>
            /// Converter from <see cref="Javax.Swing.Text.JTextComponent.AccessibleJTextComponent"/> to <see cref="Javax.Swing.Event.DocumentListener"/>
            /// </summary>
            public static implicit operator Javax.Swing.Event.DocumentListener(Javax.Swing.Text.JTextComponent.AccessibleJTextComponent t) => t.Cast<Javax.Swing.Event.DocumentListener>();
            /// <summary>
            /// Converter from <see cref="Javax.Swing.Text.JTextComponent.AccessibleJTextComponent"/> to <see cref="Javax.Accessibility.AccessibleAction"/>
            /// </summary>
            public static implicit operator Javax.Accessibility.AccessibleAction(Javax.Swing.Text.JTextComponent.AccessibleJTextComponent t) => t.Cast<Javax.Accessibility.AccessibleAction>();
            /// <summary>
            /// Converter from <see cref="Javax.Swing.Text.JTextComponent.AccessibleJTextComponent"/> to <see cref="Javax.Accessibility.AccessibleEditableText"/>
            /// </summary>
            public static implicit operator Javax.Accessibility.AccessibleEditableText(Javax.Swing.Text.JTextComponent.AccessibleJTextComponent t) => t.Cast<Javax.Accessibility.AccessibleEditableText>();
            /// <summary>
            /// Converter from <see cref="Javax.Swing.Text.JTextComponent.AccessibleJTextComponent"/> to <see cref="Javax.Accessibility.AccessibleExtendedText"/>
            /// </summary>
            public static implicit operator Javax.Accessibility.AccessibleExtendedText(Javax.Swing.Text.JTextComponent.AccessibleJTextComponent t) => t.Cast<Javax.Accessibility.AccessibleExtendedText>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getAccessibleActionCount()"/> 
            /// </summary>
            public int AccessibleActionCount
            {
                get { return IExecuteWithSignature<int>("getAccessibleActionCount", "()I"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getCaretPosition()"/> 
            /// </summary>
            public int CaretPosition
            {
                get { return IExecuteWithSignature<int>("getCaretPosition", "()I"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getCharCount()"/> 
            /// </summary>
            public int CharCount
            {
                get { return IExecuteWithSignature<int>("getCharCount", "()I"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getSelectedText()"/> 
            /// </summary>
            public Java.Lang.String SelectedText
            {
                get { return IExecuteWithSignature<Java.Lang.String>("getSelectedText", "()Ljava/lang/String;"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getSelectionEnd()"/> 
            /// </summary>
            public int SelectionEnd
            {
                get { return IExecuteWithSignature<int>("getSelectionEnd", "()I"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getSelectionStart()"/> 
            /// </summary>
            public int SelectionStart
            {
                get { return IExecuteWithSignature<int>("getSelectionStart", "()I"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#doAccessibleAction(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool DoAccessibleAction(int arg0)
            {
                return IExecuteWithSignature<bool>("doAccessibleAction", "(I)Z", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getIndexAtPoint(java.awt.Point)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Awt.Point"/></param>
            /// <returns><see cref="int"/></returns>
            public int GetIndexAtPoint(Java.Awt.Point arg0)
            {
                return IExecuteWithSignature<int>("getIndexAtPoint", "(Ljava/awt/Point;)I", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getCharacterBounds(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Java.Awt.Rectangle"/></returns>
            public Java.Awt.Rectangle GetCharacterBounds(int arg0)
            {
                return IExecuteWithSignature<Java.Awt.Rectangle>("getCharacterBounds", "(I)Ljava/awt/Rectangle;", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getTextBounds(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Java.Awt.Rectangle"/></returns>
            public Java.Awt.Rectangle GetTextBounds(int arg0, int arg1)
            {
                return IExecute<Java.Awt.Rectangle>("getTextBounds", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getAccessibleActionDescription(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetAccessibleActionDescription(int arg0)
            {
                return IExecuteWithSignature<Java.Lang.String>("getAccessibleActionDescription", "(I)Ljava/lang/String;", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getAfterIndex(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetAfterIndex(int arg0, int arg1)
            {
                return IExecute<Java.Lang.String>("getAfterIndex", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getAtIndex(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetAtIndex(int arg0, int arg1)
            {
                return IExecute<Java.Lang.String>("getAtIndex", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getBeforeIndex(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetBeforeIndex(int arg0, int arg1)
            {
                return IExecute<Java.Lang.String>("getBeforeIndex", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getTextRange(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String GetTextRange(int arg0, int arg1)
            {
                return IExecute<Java.Lang.String>("getTextRange", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getTextSequenceAfter(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Javax.Accessibility.AccessibleTextSequence"/></returns>
            public Javax.Accessibility.AccessibleTextSequence GetTextSequenceAfter(int arg0, int arg1)
            {
                return IExecute<Javax.Accessibility.AccessibleTextSequence>("getTextSequenceAfter", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getTextSequenceAt(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Javax.Accessibility.AccessibleTextSequence"/></returns>
            public Javax.Accessibility.AccessibleTextSequence GetTextSequenceAt(int arg0, int arg1)
            {
                return IExecute<Javax.Accessibility.AccessibleTextSequence>("getTextSequenceAt", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getTextSequenceBefore(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <returns><see cref="Javax.Accessibility.AccessibleTextSequence"/></returns>
            public Javax.Accessibility.AccessibleTextSequence GetTextSequenceBefore(int arg0, int arg1)
            {
                return IExecute<Javax.Accessibility.AccessibleTextSequence>("getTextSequenceBefore", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#getCharacterAttribute(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Javax.Swing.Text.AttributeSet"/></returns>
            public Javax.Swing.Text.AttributeSet GetCharacterAttribute(int arg0)
            {
                return IExecuteWithSignature<Javax.Swing.Text.AttributeSet>("getCharacterAttribute", "(I)Ljavax/swing/text/AttributeSet;", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#caretUpdate(javax.swing.event.CaretEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Javax.Swing.Event.CaretEvent"/></param>
            public void CaretUpdate(Javax.Swing.Event.CaretEvent arg0)
            {
                IExecuteWithSignature("caretUpdate", "(Ljavax/swing/event/CaretEvent;)V", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#changedUpdate(javax.swing.event.DocumentEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Javax.Swing.Event.DocumentEvent"/></param>
            public void ChangedUpdate(Javax.Swing.Event.DocumentEvent arg0)
            {
                IExecuteWithSignature("changedUpdate", "(Ljavax/swing/event/DocumentEvent;)V", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#cut(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void Cut(int arg0, int arg1)
            {
                IExecute("cut", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#delete(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void Delete(int arg0, int arg1)
            {
                IExecute("delete", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#insertTextAtIndex(int,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            public void InsertTextAtIndex(int arg0, Java.Lang.String arg1)
            {
                IExecute("insertTextAtIndex", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#insertUpdate(javax.swing.event.DocumentEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Javax.Swing.Event.DocumentEvent"/></param>
            public void InsertUpdate(Javax.Swing.Event.DocumentEvent arg0)
            {
                IExecuteWithSignature("insertUpdate", "(Ljavax/swing/event/DocumentEvent;)V", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#paste(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public void Paste(int arg0)
            {
                IExecuteWithSignature("paste", "(I)V", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#removeUpdate(javax.swing.event.DocumentEvent)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Javax.Swing.Event.DocumentEvent"/></param>
            public void RemoveUpdate(Javax.Swing.Event.DocumentEvent arg0)
            {
                IExecuteWithSignature("removeUpdate", "(Ljavax/swing/event/DocumentEvent;)V", arg0);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#replaceText(int,int,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Java.Lang.String"/></param>
            public void ReplaceText(int arg0, int arg1, Java.Lang.String arg2)
            {
                IExecute("replaceText", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#selectText(int,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public void SelectText(int arg0, int arg1)
            {
                IExecute("selectText", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#setAttributes(int,int,javax.swing.text.AttributeSet)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="Javax.Swing.Text.AttributeSet"/></param>
            public void SetAttributes(int arg0, int arg1, Javax.Swing.Text.AttributeSet arg2)
            {
                IExecute("setAttributes", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.AccessibleJTextComponent.html#setTextContents(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            public void SetTextContents(Java.Lang.String arg0)
            {
                IExecuteWithSignature("setTextContents", "(Ljava/lang/String;)V", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region DropLocation
        public partial class DropLocation
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.DropLocation.html#getBias()"/> 
            /// </summary>
            public Javax.Swing.Text.Position.Bias Bias
            {
                get { return IExecuteWithSignature<Javax.Swing.Text.Position.Bias>("getBias", "()Ljavax/swing/text/Position$Bias;"); }
            }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.DropLocation.html#getIndex()"/> 
            /// </summary>
            public int Index
            {
                get { return IExecuteWithSignature<int>("getIndex", "()I"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region KeyBinding
        public partial class KeyBinding
        {
            #region Constructors
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.KeyBinding.html#%3Cinit%3E(javax.swing.KeyStroke,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Javax.Swing.KeyStroke"/></param>
            /// <param name="arg1"><see cref="Java.Lang.String"/></param>
            public KeyBinding(Javax.Swing.KeyStroke arg0, Java.Lang.String arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.KeyBinding.html#actionName"/>
            /// </summary>
            public Java.Lang.String actionName { get { return IGetField<Java.Lang.String>("actionName"); } set { ISetField("actionName", value); } }
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/text/JTextComponent.KeyBinding.html#key"/>
            /// </summary>
            public Javax.Swing.KeyStroke key { get { return IGetField<Javax.Swing.KeyStroke>("key"); } set { ISetField("key", value); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}