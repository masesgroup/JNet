/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.2.3.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Imageio.Plugins.Tiff
{
    #region ExifTIFFTagSet
    public partial class ExifTIFFTagSet
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COLOR_SPACE_SRGB"/>
        /// </summary>
        public static int COLOR_SPACE_SRGB { get { if (!_COLOR_SPACE_SRGBReady) { _COLOR_SPACE_SRGBContent = SGetField<int>(LocalBridgeClazz, "COLOR_SPACE_SRGB"); _COLOR_SPACE_SRGBReady = true; } return _COLOR_SPACE_SRGBContent; } }
        private static int _COLOR_SPACE_SRGBContent = default;
        private static bool _COLOR_SPACE_SRGBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COLOR_SPACE_UNCALIBRATED"/>
        /// </summary>
        public static int COLOR_SPACE_UNCALIBRATED { get { if (!_COLOR_SPACE_UNCALIBRATEDReady) { _COLOR_SPACE_UNCALIBRATEDContent = SGetField<int>(LocalBridgeClazz, "COLOR_SPACE_UNCALIBRATED"); _COLOR_SPACE_UNCALIBRATEDReady = true; } return _COLOR_SPACE_UNCALIBRATEDContent; } }
        private static int _COLOR_SPACE_UNCALIBRATEDContent = default;
        private static bool _COLOR_SPACE_UNCALIBRATEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_B"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_B { get { if (!_COMPONENTS_CONFIGURATION_BReady) { _COMPONENTS_CONFIGURATION_BContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_B"); _COMPONENTS_CONFIGURATION_BReady = true; } return _COMPONENTS_CONFIGURATION_BContent; } }
        private static int _COMPONENTS_CONFIGURATION_BContent = default;
        private static bool _COMPONENTS_CONFIGURATION_BReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_CB"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_CB { get { if (!_COMPONENTS_CONFIGURATION_CBReady) { _COMPONENTS_CONFIGURATION_CBContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_CB"); _COMPONENTS_CONFIGURATION_CBReady = true; } return _COMPONENTS_CONFIGURATION_CBContent; } }
        private static int _COMPONENTS_CONFIGURATION_CBContent = default;
        private static bool _COMPONENTS_CONFIGURATION_CBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_CR"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_CR { get { if (!_COMPONENTS_CONFIGURATION_CRReady) { _COMPONENTS_CONFIGURATION_CRContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_CR"); _COMPONENTS_CONFIGURATION_CRReady = true; } return _COMPONENTS_CONFIGURATION_CRContent; } }
        private static int _COMPONENTS_CONFIGURATION_CRContent = default;
        private static bool _COMPONENTS_CONFIGURATION_CRReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_DOES_NOT_EXIST"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_DOES_NOT_EXIST { get { if (!_COMPONENTS_CONFIGURATION_DOES_NOT_EXISTReady) { _COMPONENTS_CONFIGURATION_DOES_NOT_EXISTContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_DOES_NOT_EXIST"); _COMPONENTS_CONFIGURATION_DOES_NOT_EXISTReady = true; } return _COMPONENTS_CONFIGURATION_DOES_NOT_EXISTContent; } }
        private static int _COMPONENTS_CONFIGURATION_DOES_NOT_EXISTContent = default;
        private static bool _COMPONENTS_CONFIGURATION_DOES_NOT_EXISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_G"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_G { get { if (!_COMPONENTS_CONFIGURATION_GReady) { _COMPONENTS_CONFIGURATION_GContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_G"); _COMPONENTS_CONFIGURATION_GReady = true; } return _COMPONENTS_CONFIGURATION_GContent; } }
        private static int _COMPONENTS_CONFIGURATION_GContent = default;
        private static bool _COMPONENTS_CONFIGURATION_GReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_R"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_R { get { if (!_COMPONENTS_CONFIGURATION_RReady) { _COMPONENTS_CONFIGURATION_RContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_R"); _COMPONENTS_CONFIGURATION_RReady = true; } return _COMPONENTS_CONFIGURATION_RContent; } }
        private static int _COMPONENTS_CONFIGURATION_RContent = default;
        private static bool _COMPONENTS_CONFIGURATION_RReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#COMPONENTS_CONFIGURATION_Y"/>
        /// </summary>
        public static int COMPONENTS_CONFIGURATION_Y { get { if (!_COMPONENTS_CONFIGURATION_YReady) { _COMPONENTS_CONFIGURATION_YContent = SGetField<int>(LocalBridgeClazz, "COMPONENTS_CONFIGURATION_Y"); _COMPONENTS_CONFIGURATION_YReady = true; } return _COMPONENTS_CONFIGURATION_YContent; } }
        private static int _COMPONENTS_CONFIGURATION_YContent = default;
        private static bool _COMPONENTS_CONFIGURATION_YReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#CONTRAST_HARD"/>
        /// </summary>
        public static int CONTRAST_HARD { get { if (!_CONTRAST_HARDReady) { _CONTRAST_HARDContent = SGetField<int>(LocalBridgeClazz, "CONTRAST_HARD"); _CONTRAST_HARDReady = true; } return _CONTRAST_HARDContent; } }
        private static int _CONTRAST_HARDContent = default;
        private static bool _CONTRAST_HARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#CONTRAST_NORMAL"/>
        /// </summary>
        public static int CONTRAST_NORMAL { get { if (!_CONTRAST_NORMALReady) { _CONTRAST_NORMALContent = SGetField<int>(LocalBridgeClazz, "CONTRAST_NORMAL"); _CONTRAST_NORMALReady = true; } return _CONTRAST_NORMALContent; } }
        private static int _CONTRAST_NORMALContent = default;
        private static bool _CONTRAST_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#CONTRAST_SOFT"/>
        /// </summary>
        public static int CONTRAST_SOFT { get { if (!_CONTRAST_SOFTReady) { _CONTRAST_SOFTContent = SGetField<int>(LocalBridgeClazz, "CONTRAST_SOFT"); _CONTRAST_SOFTReady = true; } return _CONTRAST_SOFTContent; } }
        private static int _CONTRAST_SOFTContent = default;
        private static bool _CONTRAST_SOFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#CUSTOM_RENDERED_CUSTOM"/>
        /// </summary>
        public static int CUSTOM_RENDERED_CUSTOM { get { if (!_CUSTOM_RENDERED_CUSTOMReady) { _CUSTOM_RENDERED_CUSTOMContent = SGetField<int>(LocalBridgeClazz, "CUSTOM_RENDERED_CUSTOM"); _CUSTOM_RENDERED_CUSTOMReady = true; } return _CUSTOM_RENDERED_CUSTOMContent; } }
        private static int _CUSTOM_RENDERED_CUSTOMContent = default;
        private static bool _CUSTOM_RENDERED_CUSTOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#CUSTOM_RENDERED_NORMAL"/>
        /// </summary>
        public static int CUSTOM_RENDERED_NORMAL { get { if (!_CUSTOM_RENDERED_NORMALReady) { _CUSTOM_RENDERED_NORMALContent = SGetField<int>(LocalBridgeClazz, "CUSTOM_RENDERED_NORMAL"); _CUSTOM_RENDERED_NORMALReady = true; } return _CUSTOM_RENDERED_NORMALContent; } }
        private static int _CUSTOM_RENDERED_NORMALContent = default;
        private static bool _CUSTOM_RENDERED_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_MODE_AUTO_BRACKET"/>
        /// </summary>
        public static int EXPOSURE_MODE_AUTO_BRACKET { get { if (!_EXPOSURE_MODE_AUTO_BRACKETReady) { _EXPOSURE_MODE_AUTO_BRACKETContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_MODE_AUTO_BRACKET"); _EXPOSURE_MODE_AUTO_BRACKETReady = true; } return _EXPOSURE_MODE_AUTO_BRACKETContent; } }
        private static int _EXPOSURE_MODE_AUTO_BRACKETContent = default;
        private static bool _EXPOSURE_MODE_AUTO_BRACKETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_MODE_AUTO_EXPOSURE"/>
        /// </summary>
        public static int EXPOSURE_MODE_AUTO_EXPOSURE { get { if (!_EXPOSURE_MODE_AUTO_EXPOSUREReady) { _EXPOSURE_MODE_AUTO_EXPOSUREContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_MODE_AUTO_EXPOSURE"); _EXPOSURE_MODE_AUTO_EXPOSUREReady = true; } return _EXPOSURE_MODE_AUTO_EXPOSUREContent; } }
        private static int _EXPOSURE_MODE_AUTO_EXPOSUREContent = default;
        private static bool _EXPOSURE_MODE_AUTO_EXPOSUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_MODE_MANUAL_EXPOSURE"/>
        /// </summary>
        public static int EXPOSURE_MODE_MANUAL_EXPOSURE { get { if (!_EXPOSURE_MODE_MANUAL_EXPOSUREReady) { _EXPOSURE_MODE_MANUAL_EXPOSUREContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_MODE_MANUAL_EXPOSURE"); _EXPOSURE_MODE_MANUAL_EXPOSUREReady = true; } return _EXPOSURE_MODE_MANUAL_EXPOSUREContent; } }
        private static int _EXPOSURE_MODE_MANUAL_EXPOSUREContent = default;
        private static bool _EXPOSURE_MODE_MANUAL_EXPOSUREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_ACTION_PROGRAM"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_ACTION_PROGRAM { get { if (!_EXPOSURE_PROGRAM_ACTION_PROGRAMReady) { _EXPOSURE_PROGRAM_ACTION_PROGRAMContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_ACTION_PROGRAM"); _EXPOSURE_PROGRAM_ACTION_PROGRAMReady = true; } return _EXPOSURE_PROGRAM_ACTION_PROGRAMContent; } }
        private static int _EXPOSURE_PROGRAM_ACTION_PROGRAMContent = default;
        private static bool _EXPOSURE_PROGRAM_ACTION_PROGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_APERTURE_PRIORITY"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_APERTURE_PRIORITY { get { if (!_EXPOSURE_PROGRAM_APERTURE_PRIORITYReady) { _EXPOSURE_PROGRAM_APERTURE_PRIORITYContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_APERTURE_PRIORITY"); _EXPOSURE_PROGRAM_APERTURE_PRIORITYReady = true; } return _EXPOSURE_PROGRAM_APERTURE_PRIORITYContent; } }
        private static int _EXPOSURE_PROGRAM_APERTURE_PRIORITYContent = default;
        private static bool _EXPOSURE_PROGRAM_APERTURE_PRIORITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_CREATIVE_PROGRAM"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_CREATIVE_PROGRAM { get { if (!_EXPOSURE_PROGRAM_CREATIVE_PROGRAMReady) { _EXPOSURE_PROGRAM_CREATIVE_PROGRAMContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_CREATIVE_PROGRAM"); _EXPOSURE_PROGRAM_CREATIVE_PROGRAMReady = true; } return _EXPOSURE_PROGRAM_CREATIVE_PROGRAMContent; } }
        private static int _EXPOSURE_PROGRAM_CREATIVE_PROGRAMContent = default;
        private static bool _EXPOSURE_PROGRAM_CREATIVE_PROGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_LANDSCAPE_MODE"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_LANDSCAPE_MODE { get { if (!_EXPOSURE_PROGRAM_LANDSCAPE_MODEReady) { _EXPOSURE_PROGRAM_LANDSCAPE_MODEContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_LANDSCAPE_MODE"); _EXPOSURE_PROGRAM_LANDSCAPE_MODEReady = true; } return _EXPOSURE_PROGRAM_LANDSCAPE_MODEContent; } }
        private static int _EXPOSURE_PROGRAM_LANDSCAPE_MODEContent = default;
        private static bool _EXPOSURE_PROGRAM_LANDSCAPE_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_MANUAL"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_MANUAL { get { if (!_EXPOSURE_PROGRAM_MANUALReady) { _EXPOSURE_PROGRAM_MANUALContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_MANUAL"); _EXPOSURE_PROGRAM_MANUALReady = true; } return _EXPOSURE_PROGRAM_MANUALContent; } }
        private static int _EXPOSURE_PROGRAM_MANUALContent = default;
        private static bool _EXPOSURE_PROGRAM_MANUALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_MAX_RESERVED"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_MAX_RESERVED { get { if (!_EXPOSURE_PROGRAM_MAX_RESERVEDReady) { _EXPOSURE_PROGRAM_MAX_RESERVEDContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_MAX_RESERVED"); _EXPOSURE_PROGRAM_MAX_RESERVEDReady = true; } return _EXPOSURE_PROGRAM_MAX_RESERVEDContent; } }
        private static int _EXPOSURE_PROGRAM_MAX_RESERVEDContent = default;
        private static bool _EXPOSURE_PROGRAM_MAX_RESERVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_NORMAL_PROGRAM"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_NORMAL_PROGRAM { get { if (!_EXPOSURE_PROGRAM_NORMAL_PROGRAMReady) { _EXPOSURE_PROGRAM_NORMAL_PROGRAMContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_NORMAL_PROGRAM"); _EXPOSURE_PROGRAM_NORMAL_PROGRAMReady = true; } return _EXPOSURE_PROGRAM_NORMAL_PROGRAMContent; } }
        private static int _EXPOSURE_PROGRAM_NORMAL_PROGRAMContent = default;
        private static bool _EXPOSURE_PROGRAM_NORMAL_PROGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_NOT_DEFINED"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_NOT_DEFINED { get { if (!_EXPOSURE_PROGRAM_NOT_DEFINEDReady) { _EXPOSURE_PROGRAM_NOT_DEFINEDContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_NOT_DEFINED"); _EXPOSURE_PROGRAM_NOT_DEFINEDReady = true; } return _EXPOSURE_PROGRAM_NOT_DEFINEDContent; } }
        private static int _EXPOSURE_PROGRAM_NOT_DEFINEDContent = default;
        private static bool _EXPOSURE_PROGRAM_NOT_DEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_PORTRAIT_MODE"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_PORTRAIT_MODE { get { if (!_EXPOSURE_PROGRAM_PORTRAIT_MODEReady) { _EXPOSURE_PROGRAM_PORTRAIT_MODEContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_PORTRAIT_MODE"); _EXPOSURE_PROGRAM_PORTRAIT_MODEReady = true; } return _EXPOSURE_PROGRAM_PORTRAIT_MODEContent; } }
        private static int _EXPOSURE_PROGRAM_PORTRAIT_MODEContent = default;
        private static bool _EXPOSURE_PROGRAM_PORTRAIT_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXPOSURE_PROGRAM_SHUTTER_PRIORITY"/>
        /// </summary>
        public static int EXPOSURE_PROGRAM_SHUTTER_PRIORITY { get { if (!_EXPOSURE_PROGRAM_SHUTTER_PRIORITYReady) { _EXPOSURE_PROGRAM_SHUTTER_PRIORITYContent = SGetField<int>(LocalBridgeClazz, "EXPOSURE_PROGRAM_SHUTTER_PRIORITY"); _EXPOSURE_PROGRAM_SHUTTER_PRIORITYReady = true; } return _EXPOSURE_PROGRAM_SHUTTER_PRIORITYContent; } }
        private static int _EXPOSURE_PROGRAM_SHUTTER_PRIORITYContent = default;
        private static bool _EXPOSURE_PROGRAM_SHUTTER_PRIORITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FILE_SOURCE_DSC"/>
        /// </summary>
        public static int FILE_SOURCE_DSC { get { if (!_FILE_SOURCE_DSCReady) { _FILE_SOURCE_DSCContent = SGetField<int>(LocalBridgeClazz, "FILE_SOURCE_DSC"); _FILE_SOURCE_DSCReady = true; } return _FILE_SOURCE_DSCContent; } }
        private static int _FILE_SOURCE_DSCContent = default;
        private static bool _FILE_SOURCE_DSCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_DID_NOT_FIRE"/>
        /// </summary>
        public static int FLASH_DID_NOT_FIRE { get { if (!_FLASH_DID_NOT_FIREReady) { _FLASH_DID_NOT_FIREContent = SGetField<int>(LocalBridgeClazz, "FLASH_DID_NOT_FIRE"); _FLASH_DID_NOT_FIREReady = true; } return _FLASH_DID_NOT_FIREContent; } }
        private static int _FLASH_DID_NOT_FIREContent = default;
        private static bool _FLASH_DID_NOT_FIREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_FIRED"/>
        /// </summary>
        public static int FLASH_FIRED { get { if (!_FLASH_FIREDReady) { _FLASH_FIREDContent = SGetField<int>(LocalBridgeClazz, "FLASH_FIRED"); _FLASH_FIREDReady = true; } return _FLASH_FIREDContent; } }
        private static int _FLASH_FIREDContent = default;
        private static bool _FLASH_FIREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_FIRED"/>
        /// </summary>
        public static int FLASH_MASK_FIRED { get { if (!_FLASH_MASK_FIREDReady) { _FLASH_MASK_FIREDContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_FIRED"); _FLASH_MASK_FIREDReady = true; } return _FLASH_MASK_FIREDContent; } }
        private static int _FLASH_MASK_FIREDContent = default;
        private static bool _FLASH_MASK_FIREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_FUNCTION_NOT_PRESENT"/>
        /// </summary>
        public static int FLASH_MASK_FUNCTION_NOT_PRESENT { get { if (!_FLASH_MASK_FUNCTION_NOT_PRESENTReady) { _FLASH_MASK_FUNCTION_NOT_PRESENTContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_FUNCTION_NOT_PRESENT"); _FLASH_MASK_FUNCTION_NOT_PRESENTReady = true; } return _FLASH_MASK_FUNCTION_NOT_PRESENTContent; } }
        private static int _FLASH_MASK_FUNCTION_NOT_PRESENTContent = default;
        private static bool _FLASH_MASK_FUNCTION_NOT_PRESENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_MODE_AUTO"/>
        /// </summary>
        public static int FLASH_MASK_MODE_AUTO { get { if (!_FLASH_MASK_MODE_AUTOReady) { _FLASH_MASK_MODE_AUTOContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_MODE_AUTO"); _FLASH_MASK_MODE_AUTOReady = true; } return _FLASH_MASK_MODE_AUTOContent; } }
        private static int _FLASH_MASK_MODE_AUTOContent = default;
        private static bool _FLASH_MASK_MODE_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_MODE_FLASH_FIRING"/>
        /// </summary>
        public static int FLASH_MASK_MODE_FLASH_FIRING { get { if (!_FLASH_MASK_MODE_FLASH_FIRINGReady) { _FLASH_MASK_MODE_FLASH_FIRINGContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_MODE_FLASH_FIRING"); _FLASH_MASK_MODE_FLASH_FIRINGReady = true; } return _FLASH_MASK_MODE_FLASH_FIRINGContent; } }
        private static int _FLASH_MASK_MODE_FLASH_FIRINGContent = default;
        private static bool _FLASH_MASK_MODE_FLASH_FIRINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_MODE_FLASH_SUPPRESSION"/>
        /// </summary>
        public static int FLASH_MASK_MODE_FLASH_SUPPRESSION { get { if (!_FLASH_MASK_MODE_FLASH_SUPPRESSIONReady) { _FLASH_MASK_MODE_FLASH_SUPPRESSIONContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_MODE_FLASH_SUPPRESSION"); _FLASH_MASK_MODE_FLASH_SUPPRESSIONReady = true; } return _FLASH_MASK_MODE_FLASH_SUPPRESSIONContent; } }
        private static int _FLASH_MASK_MODE_FLASH_SUPPRESSIONContent = default;
        private static bool _FLASH_MASK_MODE_FLASH_SUPPRESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_RED_EYE_REDUCTION"/>
        /// </summary>
        public static int FLASH_MASK_RED_EYE_REDUCTION { get { if (!_FLASH_MASK_RED_EYE_REDUCTIONReady) { _FLASH_MASK_RED_EYE_REDUCTIONContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_RED_EYE_REDUCTION"); _FLASH_MASK_RED_EYE_REDUCTIONReady = true; } return _FLASH_MASK_RED_EYE_REDUCTIONContent; } }
        private static int _FLASH_MASK_RED_EYE_REDUCTIONContent = default;
        private static bool _FLASH_MASK_RED_EYE_REDUCTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_RETURN_DETECTED"/>
        /// </summary>
        public static int FLASH_MASK_RETURN_DETECTED { get { if (!_FLASH_MASK_RETURN_DETECTEDReady) { _FLASH_MASK_RETURN_DETECTEDContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_RETURN_DETECTED"); _FLASH_MASK_RETURN_DETECTEDReady = true; } return _FLASH_MASK_RETURN_DETECTEDContent; } }
        private static int _FLASH_MASK_RETURN_DETECTEDContent = default;
        private static bool _FLASH_MASK_RETURN_DETECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_MASK_RETURN_NOT_DETECTED"/>
        /// </summary>
        public static int FLASH_MASK_RETURN_NOT_DETECTED { get { if (!_FLASH_MASK_RETURN_NOT_DETECTEDReady) { _FLASH_MASK_RETURN_NOT_DETECTEDContent = SGetField<int>(LocalBridgeClazz, "FLASH_MASK_RETURN_NOT_DETECTED"); _FLASH_MASK_RETURN_NOT_DETECTEDReady = true; } return _FLASH_MASK_RETURN_NOT_DETECTEDContent; } }
        private static int _FLASH_MASK_RETURN_NOT_DETECTEDContent = default;
        private static bool _FLASH_MASK_RETURN_NOT_DETECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_STROBE_RETURN_LIGHT_DETECTED"/>
        /// </summary>
        public static int FLASH_STROBE_RETURN_LIGHT_DETECTED { get { if (!_FLASH_STROBE_RETURN_LIGHT_DETECTEDReady) { _FLASH_STROBE_RETURN_LIGHT_DETECTEDContent = SGetField<int>(LocalBridgeClazz, "FLASH_STROBE_RETURN_LIGHT_DETECTED"); _FLASH_STROBE_RETURN_LIGHT_DETECTEDReady = true; } return _FLASH_STROBE_RETURN_LIGHT_DETECTEDContent; } }
        private static int _FLASH_STROBE_RETURN_LIGHT_DETECTEDContent = default;
        private static bool _FLASH_STROBE_RETURN_LIGHT_DETECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FLASH_STROBE_RETURN_LIGHT_NOT_DETECTED"/>
        /// </summary>
        public static int FLASH_STROBE_RETURN_LIGHT_NOT_DETECTED { get { if (!_FLASH_STROBE_RETURN_LIGHT_NOT_DETECTEDReady) { _FLASH_STROBE_RETURN_LIGHT_NOT_DETECTEDContent = SGetField<int>(LocalBridgeClazz, "FLASH_STROBE_RETURN_LIGHT_NOT_DETECTED"); _FLASH_STROBE_RETURN_LIGHT_NOT_DETECTEDReady = true; } return _FLASH_STROBE_RETURN_LIGHT_NOT_DETECTEDContent; } }
        private static int _FLASH_STROBE_RETURN_LIGHT_NOT_DETECTEDContent = default;
        private static bool _FLASH_STROBE_RETURN_LIGHT_NOT_DETECTEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETER"/>
        /// </summary>
        public static int FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETER { get { if (!_FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETERReady) { _FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETERContent = SGetField<int>(LocalBridgeClazz, "FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETER"); _FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETERReady = true; } return _FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETERContent; } }
        private static int _FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETERContent = default;
        private static bool _FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FOCAL_PLANE_RESOLUTION_UNIT_INCH"/>
        /// </summary>
        public static int FOCAL_PLANE_RESOLUTION_UNIT_INCH { get { if (!_FOCAL_PLANE_RESOLUTION_UNIT_INCHReady) { _FOCAL_PLANE_RESOLUTION_UNIT_INCHContent = SGetField<int>(LocalBridgeClazz, "FOCAL_PLANE_RESOLUTION_UNIT_INCH"); _FOCAL_PLANE_RESOLUTION_UNIT_INCHReady = true; } return _FOCAL_PLANE_RESOLUTION_UNIT_INCHContent; } }
        private static int _FOCAL_PLANE_RESOLUTION_UNIT_INCHContent = default;
        private static bool _FOCAL_PLANE_RESOLUTION_UNIT_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#FOCAL_PLANE_RESOLUTION_UNIT_NONE"/>
        /// </summary>
        public static int FOCAL_PLANE_RESOLUTION_UNIT_NONE { get { if (!_FOCAL_PLANE_RESOLUTION_UNIT_NONEReady) { _FOCAL_PLANE_RESOLUTION_UNIT_NONEContent = SGetField<int>(LocalBridgeClazz, "FOCAL_PLANE_RESOLUTION_UNIT_NONE"); _FOCAL_PLANE_RESOLUTION_UNIT_NONEReady = true; } return _FOCAL_PLANE_RESOLUTION_UNIT_NONEContent; } }
        private static int _FOCAL_PLANE_RESOLUTION_UNIT_NONEContent = default;
        private static bool _FOCAL_PLANE_RESOLUTION_UNIT_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#GAIN_CONTROL_HIGH_GAIN_DOWN"/>
        /// </summary>
        public static int GAIN_CONTROL_HIGH_GAIN_DOWN { get { if (!_GAIN_CONTROL_HIGH_GAIN_DOWNReady) { _GAIN_CONTROL_HIGH_GAIN_DOWNContent = SGetField<int>(LocalBridgeClazz, "GAIN_CONTROL_HIGH_GAIN_DOWN"); _GAIN_CONTROL_HIGH_GAIN_DOWNReady = true; } return _GAIN_CONTROL_HIGH_GAIN_DOWNContent; } }
        private static int _GAIN_CONTROL_HIGH_GAIN_DOWNContent = default;
        private static bool _GAIN_CONTROL_HIGH_GAIN_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#GAIN_CONTROL_HIGH_GAIN_UP"/>
        /// </summary>
        public static int GAIN_CONTROL_HIGH_GAIN_UP { get { if (!_GAIN_CONTROL_HIGH_GAIN_UPReady) { _GAIN_CONTROL_HIGH_GAIN_UPContent = SGetField<int>(LocalBridgeClazz, "GAIN_CONTROL_HIGH_GAIN_UP"); _GAIN_CONTROL_HIGH_GAIN_UPReady = true; } return _GAIN_CONTROL_HIGH_GAIN_UPContent; } }
        private static int _GAIN_CONTROL_HIGH_GAIN_UPContent = default;
        private static bool _GAIN_CONTROL_HIGH_GAIN_UPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#GAIN_CONTROL_LOW_GAIN_DOWN"/>
        /// </summary>
        public static int GAIN_CONTROL_LOW_GAIN_DOWN { get { if (!_GAIN_CONTROL_LOW_GAIN_DOWNReady) { _GAIN_CONTROL_LOW_GAIN_DOWNContent = SGetField<int>(LocalBridgeClazz, "GAIN_CONTROL_LOW_GAIN_DOWN"); _GAIN_CONTROL_LOW_GAIN_DOWNReady = true; } return _GAIN_CONTROL_LOW_GAIN_DOWNContent; } }
        private static int _GAIN_CONTROL_LOW_GAIN_DOWNContent = default;
        private static bool _GAIN_CONTROL_LOW_GAIN_DOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#GAIN_CONTROL_LOW_GAIN_UP"/>
        /// </summary>
        public static int GAIN_CONTROL_LOW_GAIN_UP { get { if (!_GAIN_CONTROL_LOW_GAIN_UPReady) { _GAIN_CONTROL_LOW_GAIN_UPContent = SGetField<int>(LocalBridgeClazz, "GAIN_CONTROL_LOW_GAIN_UP"); _GAIN_CONTROL_LOW_GAIN_UPReady = true; } return _GAIN_CONTROL_LOW_GAIN_UPContent; } }
        private static int _GAIN_CONTROL_LOW_GAIN_UPContent = default;
        private static bool _GAIN_CONTROL_LOW_GAIN_UPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#GAIN_CONTROL_NONE"/>
        /// </summary>
        public static int GAIN_CONTROL_NONE { get { if (!_GAIN_CONTROL_NONEReady) { _GAIN_CONTROL_NONEContent = SGetField<int>(LocalBridgeClazz, "GAIN_CONTROL_NONE"); _GAIN_CONTROL_NONEReady = true; } return _GAIN_CONTROL_NONEContent; } }
        private static int _GAIN_CONTROL_NONEContent = default;
        private static bool _GAIN_CONTROL_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_CLOUDY_WEATHER"/>
        /// </summary>
        public static int LIGHT_SOURCE_CLOUDY_WEATHER { get { if (!_LIGHT_SOURCE_CLOUDY_WEATHERReady) { _LIGHT_SOURCE_CLOUDY_WEATHERContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_CLOUDY_WEATHER"); _LIGHT_SOURCE_CLOUDY_WEATHERReady = true; } return _LIGHT_SOURCE_CLOUDY_WEATHERContent; } }
        private static int _LIGHT_SOURCE_CLOUDY_WEATHERContent = default;
        private static bool _LIGHT_SOURCE_CLOUDY_WEATHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_COOL_WHITE_FLUORESCENT"/>
        /// </summary>
        public static int LIGHT_SOURCE_COOL_WHITE_FLUORESCENT { get { if (!_LIGHT_SOURCE_COOL_WHITE_FLUORESCENTReady) { _LIGHT_SOURCE_COOL_WHITE_FLUORESCENTContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_COOL_WHITE_FLUORESCENT"); _LIGHT_SOURCE_COOL_WHITE_FLUORESCENTReady = true; } return _LIGHT_SOURCE_COOL_WHITE_FLUORESCENTContent; } }
        private static int _LIGHT_SOURCE_COOL_WHITE_FLUORESCENTContent = default;
        private static bool _LIGHT_SOURCE_COOL_WHITE_FLUORESCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_D50"/>
        /// </summary>
        public static int LIGHT_SOURCE_D50 { get { if (!_LIGHT_SOURCE_D50Ready) { _LIGHT_SOURCE_D50Content = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_D50"); _LIGHT_SOURCE_D50Ready = true; } return _LIGHT_SOURCE_D50Content; } }
        private static int _LIGHT_SOURCE_D50Content = default;
        private static bool _LIGHT_SOURCE_D50Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_D55"/>
        /// </summary>
        public static int LIGHT_SOURCE_D55 { get { if (!_LIGHT_SOURCE_D55Ready) { _LIGHT_SOURCE_D55Content = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_D55"); _LIGHT_SOURCE_D55Ready = true; } return _LIGHT_SOURCE_D55Content; } }
        private static int _LIGHT_SOURCE_D55Content = default;
        private static bool _LIGHT_SOURCE_D55Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_D65"/>
        /// </summary>
        public static int LIGHT_SOURCE_D65 { get { if (!_LIGHT_SOURCE_D65Ready) { _LIGHT_SOURCE_D65Content = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_D65"); _LIGHT_SOURCE_D65Ready = true; } return _LIGHT_SOURCE_D65Content; } }
        private static int _LIGHT_SOURCE_D65Content = default;
        private static bool _LIGHT_SOURCE_D65Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_D75"/>
        /// </summary>
        public static int LIGHT_SOURCE_D75 { get { if (!_LIGHT_SOURCE_D75Ready) { _LIGHT_SOURCE_D75Content = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_D75"); _LIGHT_SOURCE_D75Ready = true; } return _LIGHT_SOURCE_D75Content; } }
        private static int _LIGHT_SOURCE_D75Content = default;
        private static bool _LIGHT_SOURCE_D75Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_DAY_WHITE_FLUORESCENT"/>
        /// </summary>
        public static int LIGHT_SOURCE_DAY_WHITE_FLUORESCENT { get { if (!_LIGHT_SOURCE_DAY_WHITE_FLUORESCENTReady) { _LIGHT_SOURCE_DAY_WHITE_FLUORESCENTContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_DAY_WHITE_FLUORESCENT"); _LIGHT_SOURCE_DAY_WHITE_FLUORESCENTReady = true; } return _LIGHT_SOURCE_DAY_WHITE_FLUORESCENTContent; } }
        private static int _LIGHT_SOURCE_DAY_WHITE_FLUORESCENTContent = default;
        private static bool _LIGHT_SOURCE_DAY_WHITE_FLUORESCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_DAYLIGHT"/>
        /// </summary>
        public static int LIGHT_SOURCE_DAYLIGHT { get { if (!_LIGHT_SOURCE_DAYLIGHTReady) { _LIGHT_SOURCE_DAYLIGHTContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_DAYLIGHT"); _LIGHT_SOURCE_DAYLIGHTReady = true; } return _LIGHT_SOURCE_DAYLIGHTContent; } }
        private static int _LIGHT_SOURCE_DAYLIGHTContent = default;
        private static bool _LIGHT_SOURCE_DAYLIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_DAYLIGHT_FLUORESCENT"/>
        /// </summary>
        public static int LIGHT_SOURCE_DAYLIGHT_FLUORESCENT { get { if (!_LIGHT_SOURCE_DAYLIGHT_FLUORESCENTReady) { _LIGHT_SOURCE_DAYLIGHT_FLUORESCENTContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_DAYLIGHT_FLUORESCENT"); _LIGHT_SOURCE_DAYLIGHT_FLUORESCENTReady = true; } return _LIGHT_SOURCE_DAYLIGHT_FLUORESCENTContent; } }
        private static int _LIGHT_SOURCE_DAYLIGHT_FLUORESCENTContent = default;
        private static bool _LIGHT_SOURCE_DAYLIGHT_FLUORESCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_FINE_WEATHER"/>
        /// </summary>
        public static int LIGHT_SOURCE_FINE_WEATHER { get { if (!_LIGHT_SOURCE_FINE_WEATHERReady) { _LIGHT_SOURCE_FINE_WEATHERContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_FINE_WEATHER"); _LIGHT_SOURCE_FINE_WEATHERReady = true; } return _LIGHT_SOURCE_FINE_WEATHERContent; } }
        private static int _LIGHT_SOURCE_FINE_WEATHERContent = default;
        private static bool _LIGHT_SOURCE_FINE_WEATHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_FLASH"/>
        /// </summary>
        public static int LIGHT_SOURCE_FLASH { get { if (!_LIGHT_SOURCE_FLASHReady) { _LIGHT_SOURCE_FLASHContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_FLASH"); _LIGHT_SOURCE_FLASHReady = true; } return _LIGHT_SOURCE_FLASHContent; } }
        private static int _LIGHT_SOURCE_FLASHContent = default;
        private static bool _LIGHT_SOURCE_FLASHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_FLUORESCENT"/>
        /// </summary>
        public static int LIGHT_SOURCE_FLUORESCENT { get { if (!_LIGHT_SOURCE_FLUORESCENTReady) { _LIGHT_SOURCE_FLUORESCENTContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_FLUORESCENT"); _LIGHT_SOURCE_FLUORESCENTReady = true; } return _LIGHT_SOURCE_FLUORESCENTContent; } }
        private static int _LIGHT_SOURCE_FLUORESCENTContent = default;
        private static bool _LIGHT_SOURCE_FLUORESCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN"/>
        /// </summary>
        public static int LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN { get { if (!_LIGHT_SOURCE_ISO_STUDIO_TUNGSTENReady) { _LIGHT_SOURCE_ISO_STUDIO_TUNGSTENContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN"); _LIGHT_SOURCE_ISO_STUDIO_TUNGSTENReady = true; } return _LIGHT_SOURCE_ISO_STUDIO_TUNGSTENContent; } }
        private static int _LIGHT_SOURCE_ISO_STUDIO_TUNGSTENContent = default;
        private static bool _LIGHT_SOURCE_ISO_STUDIO_TUNGSTENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_OTHER"/>
        /// </summary>
        public static int LIGHT_SOURCE_OTHER { get { if (!_LIGHT_SOURCE_OTHERReady) { _LIGHT_SOURCE_OTHERContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_OTHER"); _LIGHT_SOURCE_OTHERReady = true; } return _LIGHT_SOURCE_OTHERContent; } }
        private static int _LIGHT_SOURCE_OTHERContent = default;
        private static bool _LIGHT_SOURCE_OTHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_SHADE"/>
        /// </summary>
        public static int LIGHT_SOURCE_SHADE { get { if (!_LIGHT_SOURCE_SHADEReady) { _LIGHT_SOURCE_SHADEContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_SHADE"); _LIGHT_SOURCE_SHADEReady = true; } return _LIGHT_SOURCE_SHADEContent; } }
        private static int _LIGHT_SOURCE_SHADEContent = default;
        private static bool _LIGHT_SOURCE_SHADEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_STANDARD_LIGHT_A"/>
        /// </summary>
        public static int LIGHT_SOURCE_STANDARD_LIGHT_A { get { if (!_LIGHT_SOURCE_STANDARD_LIGHT_AReady) { _LIGHT_SOURCE_STANDARD_LIGHT_AContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_STANDARD_LIGHT_A"); _LIGHT_SOURCE_STANDARD_LIGHT_AReady = true; } return _LIGHT_SOURCE_STANDARD_LIGHT_AContent; } }
        private static int _LIGHT_SOURCE_STANDARD_LIGHT_AContent = default;
        private static bool _LIGHT_SOURCE_STANDARD_LIGHT_AReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_STANDARD_LIGHT_B"/>
        /// </summary>
        public static int LIGHT_SOURCE_STANDARD_LIGHT_B { get { if (!_LIGHT_SOURCE_STANDARD_LIGHT_BReady) { _LIGHT_SOURCE_STANDARD_LIGHT_BContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_STANDARD_LIGHT_B"); _LIGHT_SOURCE_STANDARD_LIGHT_BReady = true; } return _LIGHT_SOURCE_STANDARD_LIGHT_BContent; } }
        private static int _LIGHT_SOURCE_STANDARD_LIGHT_BContent = default;
        private static bool _LIGHT_SOURCE_STANDARD_LIGHT_BReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_STANDARD_LIGHT_C"/>
        /// </summary>
        public static int LIGHT_SOURCE_STANDARD_LIGHT_C { get { if (!_LIGHT_SOURCE_STANDARD_LIGHT_CReady) { _LIGHT_SOURCE_STANDARD_LIGHT_CContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_STANDARD_LIGHT_C"); _LIGHT_SOURCE_STANDARD_LIGHT_CReady = true; } return _LIGHT_SOURCE_STANDARD_LIGHT_CContent; } }
        private static int _LIGHT_SOURCE_STANDARD_LIGHT_CContent = default;
        private static bool _LIGHT_SOURCE_STANDARD_LIGHT_CReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_TUNGSTEN"/>
        /// </summary>
        public static int LIGHT_SOURCE_TUNGSTEN { get { if (!_LIGHT_SOURCE_TUNGSTENReady) { _LIGHT_SOURCE_TUNGSTENContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_TUNGSTEN"); _LIGHT_SOURCE_TUNGSTENReady = true; } return _LIGHT_SOURCE_TUNGSTENContent; } }
        private static int _LIGHT_SOURCE_TUNGSTENContent = default;
        private static bool _LIGHT_SOURCE_TUNGSTENReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_UNKNOWN"/>
        /// </summary>
        public static int LIGHT_SOURCE_UNKNOWN { get { if (!_LIGHT_SOURCE_UNKNOWNReady) { _LIGHT_SOURCE_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_UNKNOWN"); _LIGHT_SOURCE_UNKNOWNReady = true; } return _LIGHT_SOURCE_UNKNOWNContent; } }
        private static int _LIGHT_SOURCE_UNKNOWNContent = default;
        private static bool _LIGHT_SOURCE_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#LIGHT_SOURCE_WHITE_FLUORESCENT"/>
        /// </summary>
        public static int LIGHT_SOURCE_WHITE_FLUORESCENT { get { if (!_LIGHT_SOURCE_WHITE_FLUORESCENTReady) { _LIGHT_SOURCE_WHITE_FLUORESCENTContent = SGetField<int>(LocalBridgeClazz, "LIGHT_SOURCE_WHITE_FLUORESCENT"); _LIGHT_SOURCE_WHITE_FLUORESCENTReady = true; } return _LIGHT_SOURCE_WHITE_FLUORESCENTContent; } }
        private static int _LIGHT_SOURCE_WHITE_FLUORESCENTContent = default;
        private static bool _LIGHT_SOURCE_WHITE_FLUORESCENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_AVERAGE"/>
        /// </summary>
        public static int METERING_MODE_AVERAGE { get { if (!_METERING_MODE_AVERAGEReady) { _METERING_MODE_AVERAGEContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_AVERAGE"); _METERING_MODE_AVERAGEReady = true; } return _METERING_MODE_AVERAGEContent; } }
        private static int _METERING_MODE_AVERAGEContent = default;
        private static bool _METERING_MODE_AVERAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_CENTER_WEIGHTED_AVERAGE"/>
        /// </summary>
        public static int METERING_MODE_CENTER_WEIGHTED_AVERAGE { get { if (!_METERING_MODE_CENTER_WEIGHTED_AVERAGEReady) { _METERING_MODE_CENTER_WEIGHTED_AVERAGEContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_CENTER_WEIGHTED_AVERAGE"); _METERING_MODE_CENTER_WEIGHTED_AVERAGEReady = true; } return _METERING_MODE_CENTER_WEIGHTED_AVERAGEContent; } }
        private static int _METERING_MODE_CENTER_WEIGHTED_AVERAGEContent = default;
        private static bool _METERING_MODE_CENTER_WEIGHTED_AVERAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_MAX_RESERVED"/>
        /// </summary>
        public static int METERING_MODE_MAX_RESERVED { get { if (!_METERING_MODE_MAX_RESERVEDReady) { _METERING_MODE_MAX_RESERVEDContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_MAX_RESERVED"); _METERING_MODE_MAX_RESERVEDReady = true; } return _METERING_MODE_MAX_RESERVEDContent; } }
        private static int _METERING_MODE_MAX_RESERVEDContent = default;
        private static bool _METERING_MODE_MAX_RESERVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_MIN_RESERVED"/>
        /// </summary>
        public static int METERING_MODE_MIN_RESERVED { get { if (!_METERING_MODE_MIN_RESERVEDReady) { _METERING_MODE_MIN_RESERVEDContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_MIN_RESERVED"); _METERING_MODE_MIN_RESERVEDReady = true; } return _METERING_MODE_MIN_RESERVEDContent; } }
        private static int _METERING_MODE_MIN_RESERVEDContent = default;
        private static bool _METERING_MODE_MIN_RESERVEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_MULTI_SPOT"/>
        /// </summary>
        public static int METERING_MODE_MULTI_SPOT { get { if (!_METERING_MODE_MULTI_SPOTReady) { _METERING_MODE_MULTI_SPOTContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_MULTI_SPOT"); _METERING_MODE_MULTI_SPOTReady = true; } return _METERING_MODE_MULTI_SPOTContent; } }
        private static int _METERING_MODE_MULTI_SPOTContent = default;
        private static bool _METERING_MODE_MULTI_SPOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_OTHER"/>
        /// </summary>
        public static int METERING_MODE_OTHER { get { if (!_METERING_MODE_OTHERReady) { _METERING_MODE_OTHERContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_OTHER"); _METERING_MODE_OTHERReady = true; } return _METERING_MODE_OTHERContent; } }
        private static int _METERING_MODE_OTHERContent = default;
        private static bool _METERING_MODE_OTHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_PARTIAL"/>
        /// </summary>
        public static int METERING_MODE_PARTIAL { get { if (!_METERING_MODE_PARTIALReady) { _METERING_MODE_PARTIALContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_PARTIAL"); _METERING_MODE_PARTIALReady = true; } return _METERING_MODE_PARTIALContent; } }
        private static int _METERING_MODE_PARTIALContent = default;
        private static bool _METERING_MODE_PARTIALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_PATTERN"/>
        /// </summary>
        public static int METERING_MODE_PATTERN { get { if (!_METERING_MODE_PATTERNReady) { _METERING_MODE_PATTERNContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_PATTERN"); _METERING_MODE_PATTERNReady = true; } return _METERING_MODE_PATTERNContent; } }
        private static int _METERING_MODE_PATTERNContent = default;
        private static bool _METERING_MODE_PATTERNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_SPOT"/>
        /// </summary>
        public static int METERING_MODE_SPOT { get { if (!_METERING_MODE_SPOTReady) { _METERING_MODE_SPOTContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_SPOT"); _METERING_MODE_SPOTReady = true; } return _METERING_MODE_SPOTContent; } }
        private static int _METERING_MODE_SPOTContent = default;
        private static bool _METERING_MODE_SPOTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#METERING_MODE_UNKNOWN"/>
        /// </summary>
        public static int METERING_MODE_UNKNOWN { get { if (!_METERING_MODE_UNKNOWNReady) { _METERING_MODE_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "METERING_MODE_UNKNOWN"); _METERING_MODE_UNKNOWNReady = true; } return _METERING_MODE_UNKNOWNContent; } }
        private static int _METERING_MODE_UNKNOWNContent = default;
        private static bool _METERING_MODE_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SATURATION_HIGH"/>
        /// </summary>
        public static int SATURATION_HIGH { get { if (!_SATURATION_HIGHReady) { _SATURATION_HIGHContent = SGetField<int>(LocalBridgeClazz, "SATURATION_HIGH"); _SATURATION_HIGHReady = true; } return _SATURATION_HIGHContent; } }
        private static int _SATURATION_HIGHContent = default;
        private static bool _SATURATION_HIGHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SATURATION_LOW"/>
        /// </summary>
        public static int SATURATION_LOW { get { if (!_SATURATION_LOWReady) { _SATURATION_LOWContent = SGetField<int>(LocalBridgeClazz, "SATURATION_LOW"); _SATURATION_LOWReady = true; } return _SATURATION_LOWContent; } }
        private static int _SATURATION_LOWContent = default;
        private static bool _SATURATION_LOWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SATURATION_NORMAL"/>
        /// </summary>
        public static int SATURATION_NORMAL { get { if (!_SATURATION_NORMALReady) { _SATURATION_NORMALContent = SGetField<int>(LocalBridgeClazz, "SATURATION_NORMAL"); _SATURATION_NORMALReady = true; } return _SATURATION_NORMALContent; } }
        private static int _SATURATION_NORMALContent = default;
        private static bool _SATURATION_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SCENE_CAPTURE_TYPE_LANDSCAPE"/>
        /// </summary>
        public static int SCENE_CAPTURE_TYPE_LANDSCAPE { get { if (!_SCENE_CAPTURE_TYPE_LANDSCAPEReady) { _SCENE_CAPTURE_TYPE_LANDSCAPEContent = SGetField<int>(LocalBridgeClazz, "SCENE_CAPTURE_TYPE_LANDSCAPE"); _SCENE_CAPTURE_TYPE_LANDSCAPEReady = true; } return _SCENE_CAPTURE_TYPE_LANDSCAPEContent; } }
        private static int _SCENE_CAPTURE_TYPE_LANDSCAPEContent = default;
        private static bool _SCENE_CAPTURE_TYPE_LANDSCAPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SCENE_CAPTURE_TYPE_NIGHT_SCENE"/>
        /// </summary>
        public static int SCENE_CAPTURE_TYPE_NIGHT_SCENE { get { if (!_SCENE_CAPTURE_TYPE_NIGHT_SCENEReady) { _SCENE_CAPTURE_TYPE_NIGHT_SCENEContent = SGetField<int>(LocalBridgeClazz, "SCENE_CAPTURE_TYPE_NIGHT_SCENE"); _SCENE_CAPTURE_TYPE_NIGHT_SCENEReady = true; } return _SCENE_CAPTURE_TYPE_NIGHT_SCENEContent; } }
        private static int _SCENE_CAPTURE_TYPE_NIGHT_SCENEContent = default;
        private static bool _SCENE_CAPTURE_TYPE_NIGHT_SCENEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SCENE_CAPTURE_TYPE_PORTRAIT"/>
        /// </summary>
        public static int SCENE_CAPTURE_TYPE_PORTRAIT { get { if (!_SCENE_CAPTURE_TYPE_PORTRAITReady) { _SCENE_CAPTURE_TYPE_PORTRAITContent = SGetField<int>(LocalBridgeClazz, "SCENE_CAPTURE_TYPE_PORTRAIT"); _SCENE_CAPTURE_TYPE_PORTRAITReady = true; } return _SCENE_CAPTURE_TYPE_PORTRAITContent; } }
        private static int _SCENE_CAPTURE_TYPE_PORTRAITContent = default;
        private static bool _SCENE_CAPTURE_TYPE_PORTRAITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SCENE_CAPTURE_TYPE_STANDARD"/>
        /// </summary>
        public static int SCENE_CAPTURE_TYPE_STANDARD { get { if (!_SCENE_CAPTURE_TYPE_STANDARDReady) { _SCENE_CAPTURE_TYPE_STANDARDContent = SGetField<int>(LocalBridgeClazz, "SCENE_CAPTURE_TYPE_STANDARD"); _SCENE_CAPTURE_TYPE_STANDARDReady = true; } return _SCENE_CAPTURE_TYPE_STANDARDContent; } }
        private static int _SCENE_CAPTURE_TYPE_STANDARDContent = default;
        private static bool _SCENE_CAPTURE_TYPE_STANDARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SCENE_TYPE_DSC"/>
        /// </summary>
        public static int SCENE_TYPE_DSC { get { if (!_SCENE_TYPE_DSCReady) { _SCENE_TYPE_DSCContent = SGetField<int>(LocalBridgeClazz, "SCENE_TYPE_DSC"); _SCENE_TYPE_DSCReady = true; } return _SCENE_TYPE_DSCContent; } }
        private static int _SCENE_TYPE_DSCContent = default;
        private static bool _SCENE_TYPE_DSCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSOR"/>
        /// </summary>
        public static int SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSOR { get { if (!_SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSORReady) { _SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSORContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSOR"); _SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSORReady = true; } return _SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSORContent; } }
        private static int _SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSORContent = default;
        private static bool _SENSING_METHOD_COLOR_SEQUENTIAL_AREA_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSOR"/>
        /// </summary>
        public static int SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSOR { get { if (!_SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSORReady) { _SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSORContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSOR"); _SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSORReady = true; } return _SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSORContent; } }
        private static int _SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSORContent = default;
        private static bool _SENSING_METHOD_COLOR_SEQUENTIAL_LINEAR_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_NOT_DEFINED"/>
        /// </summary>
        public static int SENSING_METHOD_NOT_DEFINED { get { if (!_SENSING_METHOD_NOT_DEFINEDReady) { _SENSING_METHOD_NOT_DEFINEDContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_NOT_DEFINED"); _SENSING_METHOD_NOT_DEFINEDReady = true; } return _SENSING_METHOD_NOT_DEFINEDContent; } }
        private static int _SENSING_METHOD_NOT_DEFINEDContent = default;
        private static bool _SENSING_METHOD_NOT_DEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSOR"/>
        /// </summary>
        public static int SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSOR { get { if (!_SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSORReady) { _SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSORContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSOR"); _SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSORReady = true; } return _SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSORContent; } }
        private static int _SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSORContent = default;
        private static bool _SENSING_METHOD_ONE_CHIP_COLOR_AREA_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSOR"/>
        /// </summary>
        public static int SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSOR { get { if (!_SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSORReady) { _SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSORContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSOR"); _SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSORReady = true; } return _SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSORContent; } }
        private static int _SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSORContent = default;
        private static bool _SENSING_METHOD_THREE_CHIP_COLOR_AREA_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_TRILINEAR_SENSOR"/>
        /// </summary>
        public static int SENSING_METHOD_TRILINEAR_SENSOR { get { if (!_SENSING_METHOD_TRILINEAR_SENSORReady) { _SENSING_METHOD_TRILINEAR_SENSORContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_TRILINEAR_SENSOR"); _SENSING_METHOD_TRILINEAR_SENSORReady = true; } return _SENSING_METHOD_TRILINEAR_SENSORContent; } }
        private static int _SENSING_METHOD_TRILINEAR_SENSORContent = default;
        private static bool _SENSING_METHOD_TRILINEAR_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSOR"/>
        /// </summary>
        public static int SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSOR { get { if (!_SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSORReady) { _SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSORContent = SGetField<int>(LocalBridgeClazz, "SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSOR"); _SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSORReady = true; } return _SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSORContent; } }
        private static int _SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSORContent = default;
        private static bool _SENSING_METHOD_TWO_CHIP_COLOR_AREA_SENSORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SHARPNESS_HARD"/>
        /// </summary>
        public static int SHARPNESS_HARD { get { if (!_SHARPNESS_HARDReady) { _SHARPNESS_HARDContent = SGetField<int>(LocalBridgeClazz, "SHARPNESS_HARD"); _SHARPNESS_HARDReady = true; } return _SHARPNESS_HARDContent; } }
        private static int _SHARPNESS_HARDContent = default;
        private static bool _SHARPNESS_HARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SHARPNESS_NORMAL"/>
        /// </summary>
        public static int SHARPNESS_NORMAL { get { if (!_SHARPNESS_NORMALReady) { _SHARPNESS_NORMALContent = SGetField<int>(LocalBridgeClazz, "SHARPNESS_NORMAL"); _SHARPNESS_NORMALReady = true; } return _SHARPNESS_NORMALContent; } }
        private static int _SHARPNESS_NORMALContent = default;
        private static bool _SHARPNESS_NORMALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SHARPNESS_SOFT"/>
        /// </summary>
        public static int SHARPNESS_SOFT { get { if (!_SHARPNESS_SOFTReady) { _SHARPNESS_SOFTContent = SGetField<int>(LocalBridgeClazz, "SHARPNESS_SOFT"); _SHARPNESS_SOFTReady = true; } return _SHARPNESS_SOFTContent; } }
        private static int _SHARPNESS_SOFTContent = default;
        private static bool _SHARPNESS_SOFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SUBJECT_DISTANCE_RANGE_CLOSE_VIEW"/>
        /// </summary>
        public static int SUBJECT_DISTANCE_RANGE_CLOSE_VIEW { get { if (!_SUBJECT_DISTANCE_RANGE_CLOSE_VIEWReady) { _SUBJECT_DISTANCE_RANGE_CLOSE_VIEWContent = SGetField<int>(LocalBridgeClazz, "SUBJECT_DISTANCE_RANGE_CLOSE_VIEW"); _SUBJECT_DISTANCE_RANGE_CLOSE_VIEWReady = true; } return _SUBJECT_DISTANCE_RANGE_CLOSE_VIEWContent; } }
        private static int _SUBJECT_DISTANCE_RANGE_CLOSE_VIEWContent = default;
        private static bool _SUBJECT_DISTANCE_RANGE_CLOSE_VIEWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SUBJECT_DISTANCE_RANGE_DISTANT_VIEW"/>
        /// </summary>
        public static int SUBJECT_DISTANCE_RANGE_DISTANT_VIEW { get { if (!_SUBJECT_DISTANCE_RANGE_DISTANT_VIEWReady) { _SUBJECT_DISTANCE_RANGE_DISTANT_VIEWContent = SGetField<int>(LocalBridgeClazz, "SUBJECT_DISTANCE_RANGE_DISTANT_VIEW"); _SUBJECT_DISTANCE_RANGE_DISTANT_VIEWReady = true; } return _SUBJECT_DISTANCE_RANGE_DISTANT_VIEWContent; } }
        private static int _SUBJECT_DISTANCE_RANGE_DISTANT_VIEWContent = default;
        private static bool _SUBJECT_DISTANCE_RANGE_DISTANT_VIEWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SUBJECT_DISTANCE_RANGE_MACRO"/>
        /// </summary>
        public static int SUBJECT_DISTANCE_RANGE_MACRO { get { if (!_SUBJECT_DISTANCE_RANGE_MACROReady) { _SUBJECT_DISTANCE_RANGE_MACROContent = SGetField<int>(LocalBridgeClazz, "SUBJECT_DISTANCE_RANGE_MACRO"); _SUBJECT_DISTANCE_RANGE_MACROReady = true; } return _SUBJECT_DISTANCE_RANGE_MACROContent; } }
        private static int _SUBJECT_DISTANCE_RANGE_MACROContent = default;
        private static bool _SUBJECT_DISTANCE_RANGE_MACROReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#SUBJECT_DISTANCE_RANGE_UNKNOWN"/>
        /// </summary>
        public static int SUBJECT_DISTANCE_RANGE_UNKNOWN { get { if (!_SUBJECT_DISTANCE_RANGE_UNKNOWNReady) { _SUBJECT_DISTANCE_RANGE_UNKNOWNContent = SGetField<int>(LocalBridgeClazz, "SUBJECT_DISTANCE_RANGE_UNKNOWN"); _SUBJECT_DISTANCE_RANGE_UNKNOWNReady = true; } return _SUBJECT_DISTANCE_RANGE_UNKNOWNContent; } }
        private static int _SUBJECT_DISTANCE_RANGE_UNKNOWNContent = default;
        private static bool _SUBJECT_DISTANCE_RANGE_UNKNOWNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_APERTURE_VALUE"/>
        /// </summary>
        public static int TAG_APERTURE_VALUE { get { if (!_TAG_APERTURE_VALUEReady) { _TAG_APERTURE_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_APERTURE_VALUE"); _TAG_APERTURE_VALUEReady = true; } return _TAG_APERTURE_VALUEContent; } }
        private static int _TAG_APERTURE_VALUEContent = default;
        private static bool _TAG_APERTURE_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_BRIGHTNESS_VALUE"/>
        /// </summary>
        public static int TAG_BRIGHTNESS_VALUE { get { if (!_TAG_BRIGHTNESS_VALUEReady) { _TAG_BRIGHTNESS_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_BRIGHTNESS_VALUE"); _TAG_BRIGHTNESS_VALUEReady = true; } return _TAG_BRIGHTNESS_VALUEContent; } }
        private static int _TAG_BRIGHTNESS_VALUEContent = default;
        private static bool _TAG_BRIGHTNESS_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_CFA_PATTERN"/>
        /// </summary>
        public static int TAG_CFA_PATTERN { get { if (!_TAG_CFA_PATTERNReady) { _TAG_CFA_PATTERNContent = SGetField<int>(LocalBridgeClazz, "TAG_CFA_PATTERN"); _TAG_CFA_PATTERNReady = true; } return _TAG_CFA_PATTERNContent; } }
        private static int _TAG_CFA_PATTERNContent = default;
        private static bool _TAG_CFA_PATTERNReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_COLOR_SPACE"/>
        /// </summary>
        public static int TAG_COLOR_SPACE { get { if (!_TAG_COLOR_SPACEReady) { _TAG_COLOR_SPACEContent = SGetField<int>(LocalBridgeClazz, "TAG_COLOR_SPACE"); _TAG_COLOR_SPACEReady = true; } return _TAG_COLOR_SPACEContent; } }
        private static int _TAG_COLOR_SPACEContent = default;
        private static bool _TAG_COLOR_SPACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_COMPONENTS_CONFIGURATION"/>
        /// </summary>
        public static int TAG_COMPONENTS_CONFIGURATION { get { if (!_TAG_COMPONENTS_CONFIGURATIONReady) { _TAG_COMPONENTS_CONFIGURATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_COMPONENTS_CONFIGURATION"); _TAG_COMPONENTS_CONFIGURATIONReady = true; } return _TAG_COMPONENTS_CONFIGURATIONContent; } }
        private static int _TAG_COMPONENTS_CONFIGURATIONContent = default;
        private static bool _TAG_COMPONENTS_CONFIGURATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_COMPRESSED_BITS_PER_PIXEL"/>
        /// </summary>
        public static int TAG_COMPRESSED_BITS_PER_PIXEL { get { if (!_TAG_COMPRESSED_BITS_PER_PIXELReady) { _TAG_COMPRESSED_BITS_PER_PIXELContent = SGetField<int>(LocalBridgeClazz, "TAG_COMPRESSED_BITS_PER_PIXEL"); _TAG_COMPRESSED_BITS_PER_PIXELReady = true; } return _TAG_COMPRESSED_BITS_PER_PIXELContent; } }
        private static int _TAG_COMPRESSED_BITS_PER_PIXELContent = default;
        private static bool _TAG_COMPRESSED_BITS_PER_PIXELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_CONTRAST"/>
        /// </summary>
        public static int TAG_CONTRAST { get { if (!_TAG_CONTRASTReady) { _TAG_CONTRASTContent = SGetField<int>(LocalBridgeClazz, "TAG_CONTRAST"); _TAG_CONTRASTReady = true; } return _TAG_CONTRASTContent; } }
        private static int _TAG_CONTRASTContent = default;
        private static bool _TAG_CONTRASTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_CUSTOM_RENDERED"/>
        /// </summary>
        public static int TAG_CUSTOM_RENDERED { get { if (!_TAG_CUSTOM_RENDEREDReady) { _TAG_CUSTOM_RENDEREDContent = SGetField<int>(LocalBridgeClazz, "TAG_CUSTOM_RENDERED"); _TAG_CUSTOM_RENDEREDReady = true; } return _TAG_CUSTOM_RENDEREDContent; } }
        private static int _TAG_CUSTOM_RENDEREDContent = default;
        private static bool _TAG_CUSTOM_RENDEREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_DATE_TIME_DIGITIZED"/>
        /// </summary>
        public static int TAG_DATE_TIME_DIGITIZED { get { if (!_TAG_DATE_TIME_DIGITIZEDReady) { _TAG_DATE_TIME_DIGITIZEDContent = SGetField<int>(LocalBridgeClazz, "TAG_DATE_TIME_DIGITIZED"); _TAG_DATE_TIME_DIGITIZEDReady = true; } return _TAG_DATE_TIME_DIGITIZEDContent; } }
        private static int _TAG_DATE_TIME_DIGITIZEDContent = default;
        private static bool _TAG_DATE_TIME_DIGITIZEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_DATE_TIME_ORIGINAL"/>
        /// </summary>
        public static int TAG_DATE_TIME_ORIGINAL { get { if (!_TAG_DATE_TIME_ORIGINALReady) { _TAG_DATE_TIME_ORIGINALContent = SGetField<int>(LocalBridgeClazz, "TAG_DATE_TIME_ORIGINAL"); _TAG_DATE_TIME_ORIGINALReady = true; } return _TAG_DATE_TIME_ORIGINALContent; } }
        private static int _TAG_DATE_TIME_ORIGINALContent = default;
        private static bool _TAG_DATE_TIME_ORIGINALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_DEVICE_SETTING_DESCRIPTION"/>
        /// </summary>
        public static int TAG_DEVICE_SETTING_DESCRIPTION { get { if (!_TAG_DEVICE_SETTING_DESCRIPTIONReady) { _TAG_DEVICE_SETTING_DESCRIPTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_DEVICE_SETTING_DESCRIPTION"); _TAG_DEVICE_SETTING_DESCRIPTIONReady = true; } return _TAG_DEVICE_SETTING_DESCRIPTIONContent; } }
        private static int _TAG_DEVICE_SETTING_DESCRIPTIONContent = default;
        private static bool _TAG_DEVICE_SETTING_DESCRIPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_DIGITAL_ZOOM_RATIO"/>
        /// </summary>
        public static int TAG_DIGITAL_ZOOM_RATIO { get { if (!_TAG_DIGITAL_ZOOM_RATIOReady) { _TAG_DIGITAL_ZOOM_RATIOContent = SGetField<int>(LocalBridgeClazz, "TAG_DIGITAL_ZOOM_RATIO"); _TAG_DIGITAL_ZOOM_RATIOReady = true; } return _TAG_DIGITAL_ZOOM_RATIOContent; } }
        private static int _TAG_DIGITAL_ZOOM_RATIOContent = default;
        private static bool _TAG_DIGITAL_ZOOM_RATIOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_EXIF_VERSION"/>
        /// </summary>
        public static int TAG_EXIF_VERSION { get { if (!_TAG_EXIF_VERSIONReady) { _TAG_EXIF_VERSIONContent = SGetField<int>(LocalBridgeClazz, "TAG_EXIF_VERSION"); _TAG_EXIF_VERSIONReady = true; } return _TAG_EXIF_VERSIONContent; } }
        private static int _TAG_EXIF_VERSIONContent = default;
        private static bool _TAG_EXIF_VERSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_EXPOSURE_BIAS_VALUE"/>
        /// </summary>
        public static int TAG_EXPOSURE_BIAS_VALUE { get { if (!_TAG_EXPOSURE_BIAS_VALUEReady) { _TAG_EXPOSURE_BIAS_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_EXPOSURE_BIAS_VALUE"); _TAG_EXPOSURE_BIAS_VALUEReady = true; } return _TAG_EXPOSURE_BIAS_VALUEContent; } }
        private static int _TAG_EXPOSURE_BIAS_VALUEContent = default;
        private static bool _TAG_EXPOSURE_BIAS_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_EXPOSURE_INDEX"/>
        /// </summary>
        public static int TAG_EXPOSURE_INDEX { get { if (!_TAG_EXPOSURE_INDEXReady) { _TAG_EXPOSURE_INDEXContent = SGetField<int>(LocalBridgeClazz, "TAG_EXPOSURE_INDEX"); _TAG_EXPOSURE_INDEXReady = true; } return _TAG_EXPOSURE_INDEXContent; } }
        private static int _TAG_EXPOSURE_INDEXContent = default;
        private static bool _TAG_EXPOSURE_INDEXReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_EXPOSURE_MODE"/>
        /// </summary>
        public static int TAG_EXPOSURE_MODE { get { if (!_TAG_EXPOSURE_MODEReady) { _TAG_EXPOSURE_MODEContent = SGetField<int>(LocalBridgeClazz, "TAG_EXPOSURE_MODE"); _TAG_EXPOSURE_MODEReady = true; } return _TAG_EXPOSURE_MODEContent; } }
        private static int _TAG_EXPOSURE_MODEContent = default;
        private static bool _TAG_EXPOSURE_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_EXPOSURE_PROGRAM"/>
        /// </summary>
        public static int TAG_EXPOSURE_PROGRAM { get { if (!_TAG_EXPOSURE_PROGRAMReady) { _TAG_EXPOSURE_PROGRAMContent = SGetField<int>(LocalBridgeClazz, "TAG_EXPOSURE_PROGRAM"); _TAG_EXPOSURE_PROGRAMReady = true; } return _TAG_EXPOSURE_PROGRAMContent; } }
        private static int _TAG_EXPOSURE_PROGRAMContent = default;
        private static bool _TAG_EXPOSURE_PROGRAMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_EXPOSURE_TIME"/>
        /// </summary>
        public static int TAG_EXPOSURE_TIME { get { if (!_TAG_EXPOSURE_TIMEReady) { _TAG_EXPOSURE_TIMEContent = SGetField<int>(LocalBridgeClazz, "TAG_EXPOSURE_TIME"); _TAG_EXPOSURE_TIMEReady = true; } return _TAG_EXPOSURE_TIMEContent; } }
        private static int _TAG_EXPOSURE_TIMEContent = default;
        private static bool _TAG_EXPOSURE_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_F_NUMBER"/>
        /// </summary>
        public static int TAG_F_NUMBER { get { if (!_TAG_F_NUMBERReady) { _TAG_F_NUMBERContent = SGetField<int>(LocalBridgeClazz, "TAG_F_NUMBER"); _TAG_F_NUMBERReady = true; } return _TAG_F_NUMBERContent; } }
        private static int _TAG_F_NUMBERContent = default;
        private static bool _TAG_F_NUMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FILE_SOURCE"/>
        /// </summary>
        public static int TAG_FILE_SOURCE { get { if (!_TAG_FILE_SOURCEReady) { _TAG_FILE_SOURCEContent = SGetField<int>(LocalBridgeClazz, "TAG_FILE_SOURCE"); _TAG_FILE_SOURCEReady = true; } return _TAG_FILE_SOURCEContent; } }
        private static int _TAG_FILE_SOURCEContent = default;
        private static bool _TAG_FILE_SOURCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FLASH"/>
        /// </summary>
        public static int TAG_FLASH { get { if (!_TAG_FLASHReady) { _TAG_FLASHContent = SGetField<int>(LocalBridgeClazz, "TAG_FLASH"); _TAG_FLASHReady = true; } return _TAG_FLASHContent; } }
        private static int _TAG_FLASHContent = default;
        private static bool _TAG_FLASHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FLASH_ENERGY"/>
        /// </summary>
        public static int TAG_FLASH_ENERGY { get { if (!_TAG_FLASH_ENERGYReady) { _TAG_FLASH_ENERGYContent = SGetField<int>(LocalBridgeClazz, "TAG_FLASH_ENERGY"); _TAG_FLASH_ENERGYReady = true; } return _TAG_FLASH_ENERGYContent; } }
        private static int _TAG_FLASH_ENERGYContent = default;
        private static bool _TAG_FLASH_ENERGYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FLASHPIX_VERSION"/>
        /// </summary>
        public static int TAG_FLASHPIX_VERSION { get { if (!_TAG_FLASHPIX_VERSIONReady) { _TAG_FLASHPIX_VERSIONContent = SGetField<int>(LocalBridgeClazz, "TAG_FLASHPIX_VERSION"); _TAG_FLASHPIX_VERSIONReady = true; } return _TAG_FLASHPIX_VERSIONContent; } }
        private static int _TAG_FLASHPIX_VERSIONContent = default;
        private static bool _TAG_FLASHPIX_VERSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FOCAL_LENGTH"/>
        /// </summary>
        public static int TAG_FOCAL_LENGTH { get { if (!_TAG_FOCAL_LENGTHReady) { _TAG_FOCAL_LENGTHContent = SGetField<int>(LocalBridgeClazz, "TAG_FOCAL_LENGTH"); _TAG_FOCAL_LENGTHReady = true; } return _TAG_FOCAL_LENGTHContent; } }
        private static int _TAG_FOCAL_LENGTHContent = default;
        private static bool _TAG_FOCAL_LENGTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FOCAL_LENGTH_IN_35MM_FILM"/>
        /// </summary>
        public static int TAG_FOCAL_LENGTH_IN_35MM_FILM { get { if (!_TAG_FOCAL_LENGTH_IN_35MM_FILMReady) { _TAG_FOCAL_LENGTH_IN_35MM_FILMContent = SGetField<int>(LocalBridgeClazz, "TAG_FOCAL_LENGTH_IN_35MM_FILM"); _TAG_FOCAL_LENGTH_IN_35MM_FILMReady = true; } return _TAG_FOCAL_LENGTH_IN_35MM_FILMContent; } }
        private static int _TAG_FOCAL_LENGTH_IN_35MM_FILMContent = default;
        private static bool _TAG_FOCAL_LENGTH_IN_35MM_FILMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FOCAL_PLANE_RESOLUTION_UNIT"/>
        /// </summary>
        public static int TAG_FOCAL_PLANE_RESOLUTION_UNIT { get { if (!_TAG_FOCAL_PLANE_RESOLUTION_UNITReady) { _TAG_FOCAL_PLANE_RESOLUTION_UNITContent = SGetField<int>(LocalBridgeClazz, "TAG_FOCAL_PLANE_RESOLUTION_UNIT"); _TAG_FOCAL_PLANE_RESOLUTION_UNITReady = true; } return _TAG_FOCAL_PLANE_RESOLUTION_UNITContent; } }
        private static int _TAG_FOCAL_PLANE_RESOLUTION_UNITContent = default;
        private static bool _TAG_FOCAL_PLANE_RESOLUTION_UNITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FOCAL_PLANE_X_RESOLUTION"/>
        /// </summary>
        public static int TAG_FOCAL_PLANE_X_RESOLUTION { get { if (!_TAG_FOCAL_PLANE_X_RESOLUTIONReady) { _TAG_FOCAL_PLANE_X_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_FOCAL_PLANE_X_RESOLUTION"); _TAG_FOCAL_PLANE_X_RESOLUTIONReady = true; } return _TAG_FOCAL_PLANE_X_RESOLUTIONContent; } }
        private static int _TAG_FOCAL_PLANE_X_RESOLUTIONContent = default;
        private static bool _TAG_FOCAL_PLANE_X_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_FOCAL_PLANE_Y_RESOLUTION"/>
        /// </summary>
        public static int TAG_FOCAL_PLANE_Y_RESOLUTION { get { if (!_TAG_FOCAL_PLANE_Y_RESOLUTIONReady) { _TAG_FOCAL_PLANE_Y_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_FOCAL_PLANE_Y_RESOLUTION"); _TAG_FOCAL_PLANE_Y_RESOLUTIONReady = true; } return _TAG_FOCAL_PLANE_Y_RESOLUTIONContent; } }
        private static int _TAG_FOCAL_PLANE_Y_RESOLUTIONContent = default;
        private static bool _TAG_FOCAL_PLANE_Y_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_GAIN_CONTROL"/>
        /// </summary>
        public static int TAG_GAIN_CONTROL { get { if (!_TAG_GAIN_CONTROLReady) { _TAG_GAIN_CONTROLContent = SGetField<int>(LocalBridgeClazz, "TAG_GAIN_CONTROL"); _TAG_GAIN_CONTROLReady = true; } return _TAG_GAIN_CONTROLContent; } }
        private static int _TAG_GAIN_CONTROLContent = default;
        private static bool _TAG_GAIN_CONTROLReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_GPS_INFO_IFD_POINTER"/>
        /// </summary>
        public static int TAG_GPS_INFO_IFD_POINTER { get { if (!_TAG_GPS_INFO_IFD_POINTERReady) { _TAG_GPS_INFO_IFD_POINTERContent = SGetField<int>(LocalBridgeClazz, "TAG_GPS_INFO_IFD_POINTER"); _TAG_GPS_INFO_IFD_POINTERReady = true; } return _TAG_GPS_INFO_IFD_POINTERContent; } }
        private static int _TAG_GPS_INFO_IFD_POINTERContent = default;
        private static bool _TAG_GPS_INFO_IFD_POINTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_IMAGE_UNIQUE_ID"/>
        /// </summary>
        public static int TAG_IMAGE_UNIQUE_ID { get { if (!_TAG_IMAGE_UNIQUE_IDReady) { _TAG_IMAGE_UNIQUE_IDContent = SGetField<int>(LocalBridgeClazz, "TAG_IMAGE_UNIQUE_ID"); _TAG_IMAGE_UNIQUE_IDReady = true; } return _TAG_IMAGE_UNIQUE_IDContent; } }
        private static int _TAG_IMAGE_UNIQUE_IDContent = default;
        private static bool _TAG_IMAGE_UNIQUE_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_INTEROPERABILITY_IFD_POINTER"/>
        /// </summary>
        public static int TAG_INTEROPERABILITY_IFD_POINTER { get { if (!_TAG_INTEROPERABILITY_IFD_POINTERReady) { _TAG_INTEROPERABILITY_IFD_POINTERContent = SGetField<int>(LocalBridgeClazz, "TAG_INTEROPERABILITY_IFD_POINTER"); _TAG_INTEROPERABILITY_IFD_POINTERReady = true; } return _TAG_INTEROPERABILITY_IFD_POINTERContent; } }
        private static int _TAG_INTEROPERABILITY_IFD_POINTERContent = default;
        private static bool _TAG_INTEROPERABILITY_IFD_POINTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_ISO_SPEED_RATINGS"/>
        /// </summary>
        public static int TAG_ISO_SPEED_RATINGS { get { if (!_TAG_ISO_SPEED_RATINGSReady) { _TAG_ISO_SPEED_RATINGSContent = SGetField<int>(LocalBridgeClazz, "TAG_ISO_SPEED_RATINGS"); _TAG_ISO_SPEED_RATINGSReady = true; } return _TAG_ISO_SPEED_RATINGSContent; } }
        private static int _TAG_ISO_SPEED_RATINGSContent = default;
        private static bool _TAG_ISO_SPEED_RATINGSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_LIGHT_SOURCE"/>
        /// </summary>
        public static int TAG_LIGHT_SOURCE { get { if (!_TAG_LIGHT_SOURCEReady) { _TAG_LIGHT_SOURCEContent = SGetField<int>(LocalBridgeClazz, "TAG_LIGHT_SOURCE"); _TAG_LIGHT_SOURCEReady = true; } return _TAG_LIGHT_SOURCEContent; } }
        private static int _TAG_LIGHT_SOURCEContent = default;
        private static bool _TAG_LIGHT_SOURCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_MAKER_NOTE"/>
        /// </summary>
        public static int TAG_MAKER_NOTE { get { if (!_TAG_MAKER_NOTEReady) { _TAG_MAKER_NOTEContent = SGetField<int>(LocalBridgeClazz, "TAG_MAKER_NOTE"); _TAG_MAKER_NOTEReady = true; } return _TAG_MAKER_NOTEContent; } }
        private static int _TAG_MAKER_NOTEContent = default;
        private static bool _TAG_MAKER_NOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_MARKER_NOTE"/>
        /// </summary>
        public static int TAG_MARKER_NOTE { get { if (!_TAG_MARKER_NOTEReady) { _TAG_MARKER_NOTEContent = SGetField<int>(LocalBridgeClazz, "TAG_MARKER_NOTE"); _TAG_MARKER_NOTEReady = true; } return _TAG_MARKER_NOTEContent; } }
        private static int _TAG_MARKER_NOTEContent = default;
        private static bool _TAG_MARKER_NOTEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_MAX_APERTURE_VALUE"/>
        /// </summary>
        public static int TAG_MAX_APERTURE_VALUE { get { if (!_TAG_MAX_APERTURE_VALUEReady) { _TAG_MAX_APERTURE_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_MAX_APERTURE_VALUE"); _TAG_MAX_APERTURE_VALUEReady = true; } return _TAG_MAX_APERTURE_VALUEContent; } }
        private static int _TAG_MAX_APERTURE_VALUEContent = default;
        private static bool _TAG_MAX_APERTURE_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_METERING_MODE"/>
        /// </summary>
        public static int TAG_METERING_MODE { get { if (!_TAG_METERING_MODEReady) { _TAG_METERING_MODEContent = SGetField<int>(LocalBridgeClazz, "TAG_METERING_MODE"); _TAG_METERING_MODEReady = true; } return _TAG_METERING_MODEContent; } }
        private static int _TAG_METERING_MODEContent = default;
        private static bool _TAG_METERING_MODEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_OECF"/>
        /// </summary>
        public static int TAG_OECF { get { if (!_TAG_OECFReady) { _TAG_OECFContent = SGetField<int>(LocalBridgeClazz, "TAG_OECF"); _TAG_OECFReady = true; } return _TAG_OECFContent; } }
        private static int _TAG_OECFContent = default;
        private static bool _TAG_OECFReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_PIXEL_X_DIMENSION"/>
        /// </summary>
        public static int TAG_PIXEL_X_DIMENSION { get { if (!_TAG_PIXEL_X_DIMENSIONReady) { _TAG_PIXEL_X_DIMENSIONContent = SGetField<int>(LocalBridgeClazz, "TAG_PIXEL_X_DIMENSION"); _TAG_PIXEL_X_DIMENSIONReady = true; } return _TAG_PIXEL_X_DIMENSIONContent; } }
        private static int _TAG_PIXEL_X_DIMENSIONContent = default;
        private static bool _TAG_PIXEL_X_DIMENSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_PIXEL_Y_DIMENSION"/>
        /// </summary>
        public static int TAG_PIXEL_Y_DIMENSION { get { if (!_TAG_PIXEL_Y_DIMENSIONReady) { _TAG_PIXEL_Y_DIMENSIONContent = SGetField<int>(LocalBridgeClazz, "TAG_PIXEL_Y_DIMENSION"); _TAG_PIXEL_Y_DIMENSIONReady = true; } return _TAG_PIXEL_Y_DIMENSIONContent; } }
        private static int _TAG_PIXEL_Y_DIMENSIONContent = default;
        private static bool _TAG_PIXEL_Y_DIMENSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_RELATED_SOUND_FILE"/>
        /// </summary>
        public static int TAG_RELATED_SOUND_FILE { get { if (!_TAG_RELATED_SOUND_FILEReady) { _TAG_RELATED_SOUND_FILEContent = SGetField<int>(LocalBridgeClazz, "TAG_RELATED_SOUND_FILE"); _TAG_RELATED_SOUND_FILEReady = true; } return _TAG_RELATED_SOUND_FILEContent; } }
        private static int _TAG_RELATED_SOUND_FILEContent = default;
        private static bool _TAG_RELATED_SOUND_FILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SATURATION"/>
        /// </summary>
        public static int TAG_SATURATION { get { if (!_TAG_SATURATIONReady) { _TAG_SATURATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_SATURATION"); _TAG_SATURATIONReady = true; } return _TAG_SATURATIONContent; } }
        private static int _TAG_SATURATIONContent = default;
        private static bool _TAG_SATURATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SCENE_CAPTURE_TYPE"/>
        /// </summary>
        public static int TAG_SCENE_CAPTURE_TYPE { get { if (!_TAG_SCENE_CAPTURE_TYPEReady) { _TAG_SCENE_CAPTURE_TYPEContent = SGetField<int>(LocalBridgeClazz, "TAG_SCENE_CAPTURE_TYPE"); _TAG_SCENE_CAPTURE_TYPEReady = true; } return _TAG_SCENE_CAPTURE_TYPEContent; } }
        private static int _TAG_SCENE_CAPTURE_TYPEContent = default;
        private static bool _TAG_SCENE_CAPTURE_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SCENE_TYPE"/>
        /// </summary>
        public static int TAG_SCENE_TYPE { get { if (!_TAG_SCENE_TYPEReady) { _TAG_SCENE_TYPEContent = SGetField<int>(LocalBridgeClazz, "TAG_SCENE_TYPE"); _TAG_SCENE_TYPEReady = true; } return _TAG_SCENE_TYPEContent; } }
        private static int _TAG_SCENE_TYPEContent = default;
        private static bool _TAG_SCENE_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SENSING_METHOD"/>
        /// </summary>
        public static int TAG_SENSING_METHOD { get { if (!_TAG_SENSING_METHODReady) { _TAG_SENSING_METHODContent = SGetField<int>(LocalBridgeClazz, "TAG_SENSING_METHOD"); _TAG_SENSING_METHODReady = true; } return _TAG_SENSING_METHODContent; } }
        private static int _TAG_SENSING_METHODContent = default;
        private static bool _TAG_SENSING_METHODReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SHARPNESS"/>
        /// </summary>
        public static int TAG_SHARPNESS { get { if (!_TAG_SHARPNESSReady) { _TAG_SHARPNESSContent = SGetField<int>(LocalBridgeClazz, "TAG_SHARPNESS"); _TAG_SHARPNESSReady = true; } return _TAG_SHARPNESSContent; } }
        private static int _TAG_SHARPNESSContent = default;
        private static bool _TAG_SHARPNESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SHUTTER_SPEED_VALUE"/>
        /// </summary>
        public static int TAG_SHUTTER_SPEED_VALUE { get { if (!_TAG_SHUTTER_SPEED_VALUEReady) { _TAG_SHUTTER_SPEED_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_SHUTTER_SPEED_VALUE"); _TAG_SHUTTER_SPEED_VALUEReady = true; } return _TAG_SHUTTER_SPEED_VALUEContent; } }
        private static int _TAG_SHUTTER_SPEED_VALUEContent = default;
        private static bool _TAG_SHUTTER_SPEED_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SPATIAL_FREQUENCY_RESPONSE"/>
        /// </summary>
        public static int TAG_SPATIAL_FREQUENCY_RESPONSE { get { if (!_TAG_SPATIAL_FREQUENCY_RESPONSEReady) { _TAG_SPATIAL_FREQUENCY_RESPONSEContent = SGetField<int>(LocalBridgeClazz, "TAG_SPATIAL_FREQUENCY_RESPONSE"); _TAG_SPATIAL_FREQUENCY_RESPONSEReady = true; } return _TAG_SPATIAL_FREQUENCY_RESPONSEContent; } }
        private static int _TAG_SPATIAL_FREQUENCY_RESPONSEContent = default;
        private static bool _TAG_SPATIAL_FREQUENCY_RESPONSEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SPECTRAL_SENSITIVITY"/>
        /// </summary>
        public static int TAG_SPECTRAL_SENSITIVITY { get { if (!_TAG_SPECTRAL_SENSITIVITYReady) { _TAG_SPECTRAL_SENSITIVITYContent = SGetField<int>(LocalBridgeClazz, "TAG_SPECTRAL_SENSITIVITY"); _TAG_SPECTRAL_SENSITIVITYReady = true; } return _TAG_SPECTRAL_SENSITIVITYContent; } }
        private static int _TAG_SPECTRAL_SENSITIVITYContent = default;
        private static bool _TAG_SPECTRAL_SENSITIVITYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUB_SEC_TIME"/>
        /// </summary>
        public static int TAG_SUB_SEC_TIME { get { if (!_TAG_SUB_SEC_TIMEReady) { _TAG_SUB_SEC_TIMEContent = SGetField<int>(LocalBridgeClazz, "TAG_SUB_SEC_TIME"); _TAG_SUB_SEC_TIMEReady = true; } return _TAG_SUB_SEC_TIMEContent; } }
        private static int _TAG_SUB_SEC_TIMEContent = default;
        private static bool _TAG_SUB_SEC_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUB_SEC_TIME_DIGITIZED"/>
        /// </summary>
        public static int TAG_SUB_SEC_TIME_DIGITIZED { get { if (!_TAG_SUB_SEC_TIME_DIGITIZEDReady) { _TAG_SUB_SEC_TIME_DIGITIZEDContent = SGetField<int>(LocalBridgeClazz, "TAG_SUB_SEC_TIME_DIGITIZED"); _TAG_SUB_SEC_TIME_DIGITIZEDReady = true; } return _TAG_SUB_SEC_TIME_DIGITIZEDContent; } }
        private static int _TAG_SUB_SEC_TIME_DIGITIZEDContent = default;
        private static bool _TAG_SUB_SEC_TIME_DIGITIZEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUB_SEC_TIME_ORIGINAL"/>
        /// </summary>
        public static int TAG_SUB_SEC_TIME_ORIGINAL { get { if (!_TAG_SUB_SEC_TIME_ORIGINALReady) { _TAG_SUB_SEC_TIME_ORIGINALContent = SGetField<int>(LocalBridgeClazz, "TAG_SUB_SEC_TIME_ORIGINAL"); _TAG_SUB_SEC_TIME_ORIGINALReady = true; } return _TAG_SUB_SEC_TIME_ORIGINALContent; } }
        private static int _TAG_SUB_SEC_TIME_ORIGINALContent = default;
        private static bool _TAG_SUB_SEC_TIME_ORIGINALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUBJECT_AREA"/>
        /// </summary>
        public static int TAG_SUBJECT_AREA { get { if (!_TAG_SUBJECT_AREAReady) { _TAG_SUBJECT_AREAContent = SGetField<int>(LocalBridgeClazz, "TAG_SUBJECT_AREA"); _TAG_SUBJECT_AREAReady = true; } return _TAG_SUBJECT_AREAContent; } }
        private static int _TAG_SUBJECT_AREAContent = default;
        private static bool _TAG_SUBJECT_AREAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUBJECT_DISTANCE"/>
        /// </summary>
        public static int TAG_SUBJECT_DISTANCE { get { if (!_TAG_SUBJECT_DISTANCEReady) { _TAG_SUBJECT_DISTANCEContent = SGetField<int>(LocalBridgeClazz, "TAG_SUBJECT_DISTANCE"); _TAG_SUBJECT_DISTANCEReady = true; } return _TAG_SUBJECT_DISTANCEContent; } }
        private static int _TAG_SUBJECT_DISTANCEContent = default;
        private static bool _TAG_SUBJECT_DISTANCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUBJECT_DISTANCE_RANGE"/>
        /// </summary>
        public static int TAG_SUBJECT_DISTANCE_RANGE { get { if (!_TAG_SUBJECT_DISTANCE_RANGEReady) { _TAG_SUBJECT_DISTANCE_RANGEContent = SGetField<int>(LocalBridgeClazz, "TAG_SUBJECT_DISTANCE_RANGE"); _TAG_SUBJECT_DISTANCE_RANGEReady = true; } return _TAG_SUBJECT_DISTANCE_RANGEContent; } }
        private static int _TAG_SUBJECT_DISTANCE_RANGEContent = default;
        private static bool _TAG_SUBJECT_DISTANCE_RANGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_SUBJECT_LOCATION"/>
        /// </summary>
        public static int TAG_SUBJECT_LOCATION { get { if (!_TAG_SUBJECT_LOCATIONReady) { _TAG_SUBJECT_LOCATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_SUBJECT_LOCATION"); _TAG_SUBJECT_LOCATIONReady = true; } return _TAG_SUBJECT_LOCATIONContent; } }
        private static int _TAG_SUBJECT_LOCATIONContent = default;
        private static bool _TAG_SUBJECT_LOCATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_USER_COMMENT"/>
        /// </summary>
        public static int TAG_USER_COMMENT { get { if (!_TAG_USER_COMMENTReady) { _TAG_USER_COMMENTContent = SGetField<int>(LocalBridgeClazz, "TAG_USER_COMMENT"); _TAG_USER_COMMENTReady = true; } return _TAG_USER_COMMENTContent; } }
        private static int _TAG_USER_COMMENTContent = default;
        private static bool _TAG_USER_COMMENTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#TAG_WHITE_BALANCE"/>
        /// </summary>
        public static int TAG_WHITE_BALANCE { get { if (!_TAG_WHITE_BALANCEReady) { _TAG_WHITE_BALANCEContent = SGetField<int>(LocalBridgeClazz, "TAG_WHITE_BALANCE"); _TAG_WHITE_BALANCEReady = true; } return _TAG_WHITE_BALANCEContent; } }
        private static int _TAG_WHITE_BALANCEContent = default;
        private static bool _TAG_WHITE_BALANCEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#WHITE_BALANCE_AUTO"/>
        /// </summary>
        public static int WHITE_BALANCE_AUTO { get { if (!_WHITE_BALANCE_AUTOReady) { _WHITE_BALANCE_AUTOContent = SGetField<int>(LocalBridgeClazz, "WHITE_BALANCE_AUTO"); _WHITE_BALANCE_AUTOReady = true; } return _WHITE_BALANCE_AUTOContent; } }
        private static int _WHITE_BALANCE_AUTOContent = default;
        private static bool _WHITE_BALANCE_AUTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#WHITE_BALANCE_MANUAL"/>
        /// </summary>
        public static int WHITE_BALANCE_MANUAL { get { if (!_WHITE_BALANCE_MANUALReady) { _WHITE_BALANCE_MANUALContent = SGetField<int>(LocalBridgeClazz, "WHITE_BALANCE_MANUAL"); _WHITE_BALANCE_MANUALReady = true; } return _WHITE_BALANCE_MANUALContent; } }
        private static int _WHITE_BALANCE_MANUALContent = default;
        private static bool _WHITE_BALANCE_MANUALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXIF_VERSION_2_1"/>
        /// </summary>
        public static string EXIF_VERSION_2_1 { get { if (!_EXIF_VERSION_2_1Ready) { _EXIF_VERSION_2_1Content = SGetField<string>(LocalBridgeClazz, "EXIF_VERSION_2_1"); _EXIF_VERSION_2_1Ready = true; } return _EXIF_VERSION_2_1Content; } }
        private static string _EXIF_VERSION_2_1Content = default;
        private static bool _EXIF_VERSION_2_1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#EXIF_VERSION_2_2"/>
        /// </summary>
        public static string EXIF_VERSION_2_2 { get { if (!_EXIF_VERSION_2_2Ready) { _EXIF_VERSION_2_2Content = SGetField<string>(LocalBridgeClazz, "EXIF_VERSION_2_2"); _EXIF_VERSION_2_2Ready = true; } return _EXIF_VERSION_2_2Content; } }
        private static string _EXIF_VERSION_2_2Content = default;
        private static bool _EXIF_VERSION_2_2Ready = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.html#getInstance()"/> 
        /// </summary>
        public static Javax.Imageio.Plugins.Tiff.ExifTIFFTagSet Instance
        {
            get { return SExecute<Javax.Imageio.Plugins.Tiff.ExifTIFFTagSet>(LocalBridgeClazz, "getInstance"); }
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}