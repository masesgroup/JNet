/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.0.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Imageio.Plugins.Tiff
{
    #region BaselineTIFFTagSet
    public partial class BaselineTIFFTagSet
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_CCITT_RLE"/>
        /// </summary>
        public static int COMPRESSION_CCITT_RLE { get { if (!_COMPRESSION_CCITT_RLEReady) { _COMPRESSION_CCITT_RLEContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_CCITT_RLE"); _COMPRESSION_CCITT_RLEReady = true; } return _COMPRESSION_CCITT_RLEContent; } }
        private static int _COMPRESSION_CCITT_RLEContent = default;
        private static bool _COMPRESSION_CCITT_RLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_CCITT_T_4"/>
        /// </summary>
        public static int COMPRESSION_CCITT_T_4 { get { if (!_COMPRESSION_CCITT_T_4Ready) { _COMPRESSION_CCITT_T_4Content = SGetField<int>(LocalBridgeClazz, "COMPRESSION_CCITT_T_4"); _COMPRESSION_CCITT_T_4Ready = true; } return _COMPRESSION_CCITT_T_4Content; } }
        private static int _COMPRESSION_CCITT_T_4Content = default;
        private static bool _COMPRESSION_CCITT_T_4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_CCITT_T_6"/>
        /// </summary>
        public static int COMPRESSION_CCITT_T_6 { get { if (!_COMPRESSION_CCITT_T_6Ready) { _COMPRESSION_CCITT_T_6Content = SGetField<int>(LocalBridgeClazz, "COMPRESSION_CCITT_T_6"); _COMPRESSION_CCITT_T_6Ready = true; } return _COMPRESSION_CCITT_T_6Content; } }
        private static int _COMPRESSION_CCITT_T_6Content = default;
        private static bool _COMPRESSION_CCITT_T_6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_DEFLATE"/>
        /// </summary>
        public static int COMPRESSION_DEFLATE { get { if (!_COMPRESSION_DEFLATEReady) { _COMPRESSION_DEFLATEContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_DEFLATE"); _COMPRESSION_DEFLATEReady = true; } return _COMPRESSION_DEFLATEContent; } }
        private static int _COMPRESSION_DEFLATEContent = default;
        private static bool _COMPRESSION_DEFLATEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_JPEG"/>
        /// </summary>
        public static int COMPRESSION_JPEG { get { if (!_COMPRESSION_JPEGReady) { _COMPRESSION_JPEGContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_JPEG"); _COMPRESSION_JPEGReady = true; } return _COMPRESSION_JPEGContent; } }
        private static int _COMPRESSION_JPEGContent = default;
        private static bool _COMPRESSION_JPEGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_LZW"/>
        /// </summary>
        public static int COMPRESSION_LZW { get { if (!_COMPRESSION_LZWReady) { _COMPRESSION_LZWContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_LZW"); _COMPRESSION_LZWReady = true; } return _COMPRESSION_LZWContent; } }
        private static int _COMPRESSION_LZWContent = default;
        private static bool _COMPRESSION_LZWReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_NONE"/>
        /// </summary>
        public static int COMPRESSION_NONE { get { if (!_COMPRESSION_NONEReady) { _COMPRESSION_NONEContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_NONE"); _COMPRESSION_NONEReady = true; } return _COMPRESSION_NONEContent; } }
        private static int _COMPRESSION_NONEContent = default;
        private static bool _COMPRESSION_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_OLD_JPEG"/>
        /// </summary>
        public static int COMPRESSION_OLD_JPEG { get { if (!_COMPRESSION_OLD_JPEGReady) { _COMPRESSION_OLD_JPEGContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_OLD_JPEG"); _COMPRESSION_OLD_JPEGReady = true; } return _COMPRESSION_OLD_JPEGContent; } }
        private static int _COMPRESSION_OLD_JPEGContent = default;
        private static bool _COMPRESSION_OLD_JPEGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_PACKBITS"/>
        /// </summary>
        public static int COMPRESSION_PACKBITS { get { if (!_COMPRESSION_PACKBITSReady) { _COMPRESSION_PACKBITSContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_PACKBITS"); _COMPRESSION_PACKBITSReady = true; } return _COMPRESSION_PACKBITSContent; } }
        private static int _COMPRESSION_PACKBITSContent = default;
        private static bool _COMPRESSION_PACKBITSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#COMPRESSION_ZLIB"/>
        /// </summary>
        public static int COMPRESSION_ZLIB { get { if (!_COMPRESSION_ZLIBReady) { _COMPRESSION_ZLIBContent = SGetField<int>(LocalBridgeClazz, "COMPRESSION_ZLIB"); _COMPRESSION_ZLIBReady = true; } return _COMPRESSION_ZLIBContent; } }
        private static int _COMPRESSION_ZLIBContent = default;
        private static bool _COMPRESSION_ZLIBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#EXTRA_SAMPLES_ASSOCIATED_ALPHA"/>
        /// </summary>
        public static int EXTRA_SAMPLES_ASSOCIATED_ALPHA { get { if (!_EXTRA_SAMPLES_ASSOCIATED_ALPHAReady) { _EXTRA_SAMPLES_ASSOCIATED_ALPHAContent = SGetField<int>(LocalBridgeClazz, "EXTRA_SAMPLES_ASSOCIATED_ALPHA"); _EXTRA_SAMPLES_ASSOCIATED_ALPHAReady = true; } return _EXTRA_SAMPLES_ASSOCIATED_ALPHAContent; } }
        private static int _EXTRA_SAMPLES_ASSOCIATED_ALPHAContent = default;
        private static bool _EXTRA_SAMPLES_ASSOCIATED_ALPHAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#EXTRA_SAMPLES_UNASSOCIATED_ALPHA"/>
        /// </summary>
        public static int EXTRA_SAMPLES_UNASSOCIATED_ALPHA { get { if (!_EXTRA_SAMPLES_UNASSOCIATED_ALPHAReady) { _EXTRA_SAMPLES_UNASSOCIATED_ALPHAContent = SGetField<int>(LocalBridgeClazz, "EXTRA_SAMPLES_UNASSOCIATED_ALPHA"); _EXTRA_SAMPLES_UNASSOCIATED_ALPHAReady = true; } return _EXTRA_SAMPLES_UNASSOCIATED_ALPHAContent; } }
        private static int _EXTRA_SAMPLES_UNASSOCIATED_ALPHAContent = default;
        private static bool _EXTRA_SAMPLES_UNASSOCIATED_ALPHAReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#EXTRA_SAMPLES_UNSPECIFIED"/>
        /// </summary>
        public static int EXTRA_SAMPLES_UNSPECIFIED { get { if (!_EXTRA_SAMPLES_UNSPECIFIEDReady) { _EXTRA_SAMPLES_UNSPECIFIEDContent = SGetField<int>(LocalBridgeClazz, "EXTRA_SAMPLES_UNSPECIFIED"); _EXTRA_SAMPLES_UNSPECIFIEDReady = true; } return _EXTRA_SAMPLES_UNSPECIFIEDContent; } }
        private static int _EXTRA_SAMPLES_UNSPECIFIEDContent = default;
        private static bool _EXTRA_SAMPLES_UNSPECIFIEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#FILL_ORDER_LEFT_TO_RIGHT"/>
        /// </summary>
        public static int FILL_ORDER_LEFT_TO_RIGHT { get { if (!_FILL_ORDER_LEFT_TO_RIGHTReady) { _FILL_ORDER_LEFT_TO_RIGHTContent = SGetField<int>(LocalBridgeClazz, "FILL_ORDER_LEFT_TO_RIGHT"); _FILL_ORDER_LEFT_TO_RIGHTReady = true; } return _FILL_ORDER_LEFT_TO_RIGHTContent; } }
        private static int _FILL_ORDER_LEFT_TO_RIGHTContent = default;
        private static bool _FILL_ORDER_LEFT_TO_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#FILL_ORDER_RIGHT_TO_LEFT"/>
        /// </summary>
        public static int FILL_ORDER_RIGHT_TO_LEFT { get { if (!_FILL_ORDER_RIGHT_TO_LEFTReady) { _FILL_ORDER_RIGHT_TO_LEFTContent = SGetField<int>(LocalBridgeClazz, "FILL_ORDER_RIGHT_TO_LEFT"); _FILL_ORDER_RIGHT_TO_LEFTReady = true; } return _FILL_ORDER_RIGHT_TO_LEFTContent; } }
        private static int _FILL_ORDER_RIGHT_TO_LEFTContent = default;
        private static bool _FILL_ORDER_RIGHT_TO_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHS"/>
        /// </summary>
        public static int GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHS { get { if (!_GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHSReady) { _GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHSContent = SGetField<int>(LocalBridgeClazz, "GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHS"); _GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHSReady = true; } return _GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHSContent; } }
        private static int _GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHSContent = default;
        private static bool _GRAY_RESPONSE_UNIT_HUNDRED_THOUSANDTHSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#GRAY_RESPONSE_UNIT_HUNDREDTHS"/>
        /// </summary>
        public static int GRAY_RESPONSE_UNIT_HUNDREDTHS { get { if (!_GRAY_RESPONSE_UNIT_HUNDREDTHSReady) { _GRAY_RESPONSE_UNIT_HUNDREDTHSContent = SGetField<int>(LocalBridgeClazz, "GRAY_RESPONSE_UNIT_HUNDREDTHS"); _GRAY_RESPONSE_UNIT_HUNDREDTHSReady = true; } return _GRAY_RESPONSE_UNIT_HUNDREDTHSContent; } }
        private static int _GRAY_RESPONSE_UNIT_HUNDREDTHSContent = default;
        private static bool _GRAY_RESPONSE_UNIT_HUNDREDTHSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#GRAY_RESPONSE_UNIT_TEN_THOUSANDTHS"/>
        /// </summary>
        public static int GRAY_RESPONSE_UNIT_TEN_THOUSANDTHS { get { if (!_GRAY_RESPONSE_UNIT_TEN_THOUSANDTHSReady) { _GRAY_RESPONSE_UNIT_TEN_THOUSANDTHSContent = SGetField<int>(LocalBridgeClazz, "GRAY_RESPONSE_UNIT_TEN_THOUSANDTHS"); _GRAY_RESPONSE_UNIT_TEN_THOUSANDTHSReady = true; } return _GRAY_RESPONSE_UNIT_TEN_THOUSANDTHSContent; } }
        private static int _GRAY_RESPONSE_UNIT_TEN_THOUSANDTHSContent = default;
        private static bool _GRAY_RESPONSE_UNIT_TEN_THOUSANDTHSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#GRAY_RESPONSE_UNIT_TENTHS"/>
        /// </summary>
        public static int GRAY_RESPONSE_UNIT_TENTHS { get { if (!_GRAY_RESPONSE_UNIT_TENTHSReady) { _GRAY_RESPONSE_UNIT_TENTHSContent = SGetField<int>(LocalBridgeClazz, "GRAY_RESPONSE_UNIT_TENTHS"); _GRAY_RESPONSE_UNIT_TENTHSReady = true; } return _GRAY_RESPONSE_UNIT_TENTHSContent; } }
        private static int _GRAY_RESPONSE_UNIT_TENTHSContent = default;
        private static bool _GRAY_RESPONSE_UNIT_TENTHSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#GRAY_RESPONSE_UNIT_THOUSANDTHS"/>
        /// </summary>
        public static int GRAY_RESPONSE_UNIT_THOUSANDTHS { get { if (!_GRAY_RESPONSE_UNIT_THOUSANDTHSReady) { _GRAY_RESPONSE_UNIT_THOUSANDTHSContent = SGetField<int>(LocalBridgeClazz, "GRAY_RESPONSE_UNIT_THOUSANDTHS"); _GRAY_RESPONSE_UNIT_THOUSANDTHSReady = true; } return _GRAY_RESPONSE_UNIT_THOUSANDTHSContent; } }
        private static int _GRAY_RESPONSE_UNIT_THOUSANDTHSContent = default;
        private static bool _GRAY_RESPONSE_UNIT_THOUSANDTHSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#INK_SET_CMYK"/>
        /// </summary>
        public static int INK_SET_CMYK { get { if (!_INK_SET_CMYKReady) { _INK_SET_CMYKContent = SGetField<int>(LocalBridgeClazz, "INK_SET_CMYK"); _INK_SET_CMYKReady = true; } return _INK_SET_CMYKContent; } }
        private static int _INK_SET_CMYKContent = default;
        private static bool _INK_SET_CMYKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#INK_SET_NOT_CMYK"/>
        /// </summary>
        public static int INK_SET_NOT_CMYK { get { if (!_INK_SET_NOT_CMYKReady) { _INK_SET_NOT_CMYKContent = SGetField<int>(LocalBridgeClazz, "INK_SET_NOT_CMYK"); _INK_SET_NOT_CMYKReady = true; } return _INK_SET_NOT_CMYKContent; } }
        private static int _INK_SET_NOT_CMYKContent = default;
        private static bool _INK_SET_NOT_CMYKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#JPEG_PROC_BASELINE"/>
        /// </summary>
        public static int JPEG_PROC_BASELINE { get { if (!_JPEG_PROC_BASELINEReady) { _JPEG_PROC_BASELINEContent = SGetField<int>(LocalBridgeClazz, "JPEG_PROC_BASELINE"); _JPEG_PROC_BASELINEReady = true; } return _JPEG_PROC_BASELINEContent; } }
        private static int _JPEG_PROC_BASELINEContent = default;
        private static bool _JPEG_PROC_BASELINEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#JPEG_PROC_LOSSLESS"/>
        /// </summary>
        public static int JPEG_PROC_LOSSLESS { get { if (!_JPEG_PROC_LOSSLESSReady) { _JPEG_PROC_LOSSLESSContent = SGetField<int>(LocalBridgeClazz, "JPEG_PROC_LOSSLESS"); _JPEG_PROC_LOSSLESSReady = true; } return _JPEG_PROC_LOSSLESSContent; } }
        private static int _JPEG_PROC_LOSSLESSContent = default;
        private static bool _JPEG_PROC_LOSSLESSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#NEW_SUBFILE_TYPE_REDUCED_RESOLUTION"/>
        /// </summary>
        public static int NEW_SUBFILE_TYPE_REDUCED_RESOLUTION { get { if (!_NEW_SUBFILE_TYPE_REDUCED_RESOLUTIONReady) { _NEW_SUBFILE_TYPE_REDUCED_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "NEW_SUBFILE_TYPE_REDUCED_RESOLUTION"); _NEW_SUBFILE_TYPE_REDUCED_RESOLUTIONReady = true; } return _NEW_SUBFILE_TYPE_REDUCED_RESOLUTIONContent; } }
        private static int _NEW_SUBFILE_TYPE_REDUCED_RESOLUTIONContent = default;
        private static bool _NEW_SUBFILE_TYPE_REDUCED_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#NEW_SUBFILE_TYPE_SINGLE_PAGE"/>
        /// </summary>
        public static int NEW_SUBFILE_TYPE_SINGLE_PAGE { get { if (!_NEW_SUBFILE_TYPE_SINGLE_PAGEReady) { _NEW_SUBFILE_TYPE_SINGLE_PAGEContent = SGetField<int>(LocalBridgeClazz, "NEW_SUBFILE_TYPE_SINGLE_PAGE"); _NEW_SUBFILE_TYPE_SINGLE_PAGEReady = true; } return _NEW_SUBFILE_TYPE_SINGLE_PAGEContent; } }
        private static int _NEW_SUBFILE_TYPE_SINGLE_PAGEContent = default;
        private static bool _NEW_SUBFILE_TYPE_SINGLE_PAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#NEW_SUBFILE_TYPE_TRANSPARENCY"/>
        /// </summary>
        public static int NEW_SUBFILE_TYPE_TRANSPARENCY { get { if (!_NEW_SUBFILE_TYPE_TRANSPARENCYReady) { _NEW_SUBFILE_TYPE_TRANSPARENCYContent = SGetField<int>(LocalBridgeClazz, "NEW_SUBFILE_TYPE_TRANSPARENCY"); _NEW_SUBFILE_TYPE_TRANSPARENCYReady = true; } return _NEW_SUBFILE_TYPE_TRANSPARENCYContent; } }
        private static int _NEW_SUBFILE_TYPE_TRANSPARENCYContent = default;
        private static bool _NEW_SUBFILE_TYPE_TRANSPARENCYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFT"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFT { get { if (!_ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFTReady) { _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFTContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFT"); _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFTReady = true; } return _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFTContent; } }
        private static int _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFTContent = default;
        private static bool _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHT"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHT { get { if (!_ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHTReady) { _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHTContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHT"); _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHTReady = true; } return _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHTContent; } }
        private static int _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHTContent = default;
        private static bool _ORIENTATION_ROW_0_BOTTOM_COLUMN_0_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOM"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOM { get { if (!_ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOMReady) { _ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOMContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOM"); _ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOMReady = true; } return _ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOMContent; } }
        private static int _ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOMContent = default;
        private static bool _ORIENTATION_ROW_0_LEFT_COLUMN_0_BOTTOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_LEFT_COLUMN_0_TOP"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_LEFT_COLUMN_0_TOP { get { if (!_ORIENTATION_ROW_0_LEFT_COLUMN_0_TOPReady) { _ORIENTATION_ROW_0_LEFT_COLUMN_0_TOPContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_LEFT_COLUMN_0_TOP"); _ORIENTATION_ROW_0_LEFT_COLUMN_0_TOPReady = true; } return _ORIENTATION_ROW_0_LEFT_COLUMN_0_TOPContent; } }
        private static int _ORIENTATION_ROW_0_LEFT_COLUMN_0_TOPContent = default;
        private static bool _ORIENTATION_ROW_0_LEFT_COLUMN_0_TOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOM"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOM { get { if (!_ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOMReady) { _ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOMContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOM"); _ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOMReady = true; } return _ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOMContent; } }
        private static int _ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOMContent = default;
        private static bool _ORIENTATION_ROW_0_RIGHT_COLUMN_0_BOTTOMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOP"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOP { get { if (!_ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOPReady) { _ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOPContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOP"); _ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOPReady = true; } return _ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOPContent; } }
        private static int _ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOPContent = default;
        private static bool _ORIENTATION_ROW_0_RIGHT_COLUMN_0_TOPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_TOP_COLUMN_0_LEFT"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_TOP_COLUMN_0_LEFT { get { if (!_ORIENTATION_ROW_0_TOP_COLUMN_0_LEFTReady) { _ORIENTATION_ROW_0_TOP_COLUMN_0_LEFTContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_TOP_COLUMN_0_LEFT"); _ORIENTATION_ROW_0_TOP_COLUMN_0_LEFTReady = true; } return _ORIENTATION_ROW_0_TOP_COLUMN_0_LEFTContent; } }
        private static int _ORIENTATION_ROW_0_TOP_COLUMN_0_LEFTContent = default;
        private static bool _ORIENTATION_ROW_0_TOP_COLUMN_0_LEFTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHT"/>
        /// </summary>
        public static int ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHT { get { if (!_ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHTReady) { _ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHTContent = SGetField<int>(LocalBridgeClazz, "ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHT"); _ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHTReady = true; } return _ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHTContent; } }
        private static int _ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHTContent = default;
        private static bool _ORIENTATION_ROW_0_TOP_COLUMN_0_RIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO { get { if (!_PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZEROReady) { _PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZEROContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO"); _PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZEROReady = true; } return _PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZEROContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZEROContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZEROReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_CIELAB"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_CIELAB { get { if (!_PHOTOMETRIC_INTERPRETATION_CIELABReady) { _PHOTOMETRIC_INTERPRETATION_CIELABContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_CIELAB"); _PHOTOMETRIC_INTERPRETATION_CIELABReady = true; } return _PHOTOMETRIC_INTERPRETATION_CIELABContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_CIELABContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_CIELABReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_CMYK"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_CMYK { get { if (!_PHOTOMETRIC_INTERPRETATION_CMYKReady) { _PHOTOMETRIC_INTERPRETATION_CMYKContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_CMYK"); _PHOTOMETRIC_INTERPRETATION_CMYKReady = true; } return _PHOTOMETRIC_INTERPRETATION_CMYKContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_CMYKContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_CMYKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_ICCLAB"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_ICCLAB { get { if (!_PHOTOMETRIC_INTERPRETATION_ICCLABReady) { _PHOTOMETRIC_INTERPRETATION_ICCLABContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_ICCLAB"); _PHOTOMETRIC_INTERPRETATION_ICCLABReady = true; } return _PHOTOMETRIC_INTERPRETATION_ICCLABContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_ICCLABContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_ICCLABReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_PALETTE_COLOR"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_PALETTE_COLOR { get { if (!_PHOTOMETRIC_INTERPRETATION_PALETTE_COLORReady) { _PHOTOMETRIC_INTERPRETATION_PALETTE_COLORContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_PALETTE_COLOR"); _PHOTOMETRIC_INTERPRETATION_PALETTE_COLORReady = true; } return _PHOTOMETRIC_INTERPRETATION_PALETTE_COLORContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_PALETTE_COLORContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_PALETTE_COLORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_RGB"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_RGB { get { if (!_PHOTOMETRIC_INTERPRETATION_RGBReady) { _PHOTOMETRIC_INTERPRETATION_RGBContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_RGB"); _PHOTOMETRIC_INTERPRETATION_RGBReady = true; } return _PHOTOMETRIC_INTERPRETATION_RGBContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_RGBContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_RGBReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASK"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASK { get { if (!_PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASKReady) { _PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASKContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASK"); _PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASKReady = true; } return _PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASKContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASKContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASKReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO { get { if (!_PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZEROReady) { _PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZEROContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO"); _PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZEROReady = true; } return _PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZEROContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZEROContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZEROReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PHOTOMETRIC_INTERPRETATION_Y_CB_CR"/>
        /// </summary>
        public static int PHOTOMETRIC_INTERPRETATION_Y_CB_CR { get { if (!_PHOTOMETRIC_INTERPRETATION_Y_CB_CRReady) { _PHOTOMETRIC_INTERPRETATION_Y_CB_CRContent = SGetField<int>(LocalBridgeClazz, "PHOTOMETRIC_INTERPRETATION_Y_CB_CR"); _PHOTOMETRIC_INTERPRETATION_Y_CB_CRReady = true; } return _PHOTOMETRIC_INTERPRETATION_Y_CB_CRContent; } }
        private static int _PHOTOMETRIC_INTERPRETATION_Y_CB_CRContent = default;
        private static bool _PHOTOMETRIC_INTERPRETATION_Y_CB_CRReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PLANAR_CONFIGURATION_CHUNKY"/>
        /// </summary>
        public static int PLANAR_CONFIGURATION_CHUNKY { get { if (!_PLANAR_CONFIGURATION_CHUNKYReady) { _PLANAR_CONFIGURATION_CHUNKYContent = SGetField<int>(LocalBridgeClazz, "PLANAR_CONFIGURATION_CHUNKY"); _PLANAR_CONFIGURATION_CHUNKYReady = true; } return _PLANAR_CONFIGURATION_CHUNKYContent; } }
        private static int _PLANAR_CONFIGURATION_CHUNKYContent = default;
        private static bool _PLANAR_CONFIGURATION_CHUNKYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PLANAR_CONFIGURATION_PLANAR"/>
        /// </summary>
        public static int PLANAR_CONFIGURATION_PLANAR { get { if (!_PLANAR_CONFIGURATION_PLANARReady) { _PLANAR_CONFIGURATION_PLANARContent = SGetField<int>(LocalBridgeClazz, "PLANAR_CONFIGURATION_PLANAR"); _PLANAR_CONFIGURATION_PLANARReady = true; } return _PLANAR_CONFIGURATION_PLANARContent; } }
        private static int _PLANAR_CONFIGURATION_PLANARContent = default;
        private static bool _PLANAR_CONFIGURATION_PLANARReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PREDICTOR_HORIZONTAL_DIFFERENCING"/>
        /// </summary>
        public static int PREDICTOR_HORIZONTAL_DIFFERENCING { get { if (!_PREDICTOR_HORIZONTAL_DIFFERENCINGReady) { _PREDICTOR_HORIZONTAL_DIFFERENCINGContent = SGetField<int>(LocalBridgeClazz, "PREDICTOR_HORIZONTAL_DIFFERENCING"); _PREDICTOR_HORIZONTAL_DIFFERENCINGReady = true; } return _PREDICTOR_HORIZONTAL_DIFFERENCINGContent; } }
        private static int _PREDICTOR_HORIZONTAL_DIFFERENCINGContent = default;
        private static bool _PREDICTOR_HORIZONTAL_DIFFERENCINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#PREDICTOR_NONE"/>
        /// </summary>
        public static int PREDICTOR_NONE { get { if (!_PREDICTOR_NONEReady) { _PREDICTOR_NONEContent = SGetField<int>(LocalBridgeClazz, "PREDICTOR_NONE"); _PREDICTOR_NONEReady = true; } return _PREDICTOR_NONEContent; } }
        private static int _PREDICTOR_NONEContent = default;
        private static bool _PREDICTOR_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#RESOLUTION_UNIT_CENTIMETER"/>
        /// </summary>
        public static int RESOLUTION_UNIT_CENTIMETER { get { if (!_RESOLUTION_UNIT_CENTIMETERReady) { _RESOLUTION_UNIT_CENTIMETERContent = SGetField<int>(LocalBridgeClazz, "RESOLUTION_UNIT_CENTIMETER"); _RESOLUTION_UNIT_CENTIMETERReady = true; } return _RESOLUTION_UNIT_CENTIMETERContent; } }
        private static int _RESOLUTION_UNIT_CENTIMETERContent = default;
        private static bool _RESOLUTION_UNIT_CENTIMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#RESOLUTION_UNIT_INCH"/>
        /// </summary>
        public static int RESOLUTION_UNIT_INCH { get { if (!_RESOLUTION_UNIT_INCHReady) { _RESOLUTION_UNIT_INCHContent = SGetField<int>(LocalBridgeClazz, "RESOLUTION_UNIT_INCH"); _RESOLUTION_UNIT_INCHReady = true; } return _RESOLUTION_UNIT_INCHContent; } }
        private static int _RESOLUTION_UNIT_INCHContent = default;
        private static bool _RESOLUTION_UNIT_INCHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#RESOLUTION_UNIT_NONE"/>
        /// </summary>
        public static int RESOLUTION_UNIT_NONE { get { if (!_RESOLUTION_UNIT_NONEReady) { _RESOLUTION_UNIT_NONEContent = SGetField<int>(LocalBridgeClazz, "RESOLUTION_UNIT_NONE"); _RESOLUTION_UNIT_NONEReady = true; } return _RESOLUTION_UNIT_NONEContent; } }
        private static int _RESOLUTION_UNIT_NONEContent = default;
        private static bool _RESOLUTION_UNIT_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SAMPLE_FORMAT_FLOATING_POINT"/>
        /// </summary>
        public static int SAMPLE_FORMAT_FLOATING_POINT { get { if (!_SAMPLE_FORMAT_FLOATING_POINTReady) { _SAMPLE_FORMAT_FLOATING_POINTContent = SGetField<int>(LocalBridgeClazz, "SAMPLE_FORMAT_FLOATING_POINT"); _SAMPLE_FORMAT_FLOATING_POINTReady = true; } return _SAMPLE_FORMAT_FLOATING_POINTContent; } }
        private static int _SAMPLE_FORMAT_FLOATING_POINTContent = default;
        private static bool _SAMPLE_FORMAT_FLOATING_POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SAMPLE_FORMAT_SIGNED_INTEGER"/>
        /// </summary>
        public static int SAMPLE_FORMAT_SIGNED_INTEGER { get { if (!_SAMPLE_FORMAT_SIGNED_INTEGERReady) { _SAMPLE_FORMAT_SIGNED_INTEGERContent = SGetField<int>(LocalBridgeClazz, "SAMPLE_FORMAT_SIGNED_INTEGER"); _SAMPLE_FORMAT_SIGNED_INTEGERReady = true; } return _SAMPLE_FORMAT_SIGNED_INTEGERContent; } }
        private static int _SAMPLE_FORMAT_SIGNED_INTEGERContent = default;
        private static bool _SAMPLE_FORMAT_SIGNED_INTEGERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SAMPLE_FORMAT_UNDEFINED"/>
        /// </summary>
        public static int SAMPLE_FORMAT_UNDEFINED { get { if (!_SAMPLE_FORMAT_UNDEFINEDReady) { _SAMPLE_FORMAT_UNDEFINEDContent = SGetField<int>(LocalBridgeClazz, "SAMPLE_FORMAT_UNDEFINED"); _SAMPLE_FORMAT_UNDEFINEDReady = true; } return _SAMPLE_FORMAT_UNDEFINEDContent; } }
        private static int _SAMPLE_FORMAT_UNDEFINEDContent = default;
        private static bool _SAMPLE_FORMAT_UNDEFINEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SAMPLE_FORMAT_UNSIGNED_INTEGER"/>
        /// </summary>
        public static int SAMPLE_FORMAT_UNSIGNED_INTEGER { get { if (!_SAMPLE_FORMAT_UNSIGNED_INTEGERReady) { _SAMPLE_FORMAT_UNSIGNED_INTEGERContent = SGetField<int>(LocalBridgeClazz, "SAMPLE_FORMAT_UNSIGNED_INTEGER"); _SAMPLE_FORMAT_UNSIGNED_INTEGERReady = true; } return _SAMPLE_FORMAT_UNSIGNED_INTEGERContent; } }
        private static int _SAMPLE_FORMAT_UNSIGNED_INTEGERContent = default;
        private static bool _SAMPLE_FORMAT_UNSIGNED_INTEGERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SUBFILE_TYPE_FULL_RESOLUTION"/>
        /// </summary>
        public static int SUBFILE_TYPE_FULL_RESOLUTION { get { if (!_SUBFILE_TYPE_FULL_RESOLUTIONReady) { _SUBFILE_TYPE_FULL_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "SUBFILE_TYPE_FULL_RESOLUTION"); _SUBFILE_TYPE_FULL_RESOLUTIONReady = true; } return _SUBFILE_TYPE_FULL_RESOLUTIONContent; } }
        private static int _SUBFILE_TYPE_FULL_RESOLUTIONContent = default;
        private static bool _SUBFILE_TYPE_FULL_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SUBFILE_TYPE_REDUCED_RESOLUTION"/>
        /// </summary>
        public static int SUBFILE_TYPE_REDUCED_RESOLUTION { get { if (!_SUBFILE_TYPE_REDUCED_RESOLUTIONReady) { _SUBFILE_TYPE_REDUCED_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "SUBFILE_TYPE_REDUCED_RESOLUTION"); _SUBFILE_TYPE_REDUCED_RESOLUTIONReady = true; } return _SUBFILE_TYPE_REDUCED_RESOLUTIONContent; } }
        private static int _SUBFILE_TYPE_REDUCED_RESOLUTIONContent = default;
        private static bool _SUBFILE_TYPE_REDUCED_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#SUBFILE_TYPE_SINGLE_PAGE"/>
        /// </summary>
        public static int SUBFILE_TYPE_SINGLE_PAGE { get { if (!_SUBFILE_TYPE_SINGLE_PAGEReady) { _SUBFILE_TYPE_SINGLE_PAGEContent = SGetField<int>(LocalBridgeClazz, "SUBFILE_TYPE_SINGLE_PAGE"); _SUBFILE_TYPE_SINGLE_PAGEReady = true; } return _SUBFILE_TYPE_SINGLE_PAGEContent; } }
        private static int _SUBFILE_TYPE_SINGLE_PAGEContent = default;
        private static bool _SUBFILE_TYPE_SINGLE_PAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#T4_OPTIONS_2D_CODING"/>
        /// </summary>
        public static int T4_OPTIONS_2D_CODING { get { if (!_T4_OPTIONS_2D_CODINGReady) { _T4_OPTIONS_2D_CODINGContent = SGetField<int>(LocalBridgeClazz, "T4_OPTIONS_2D_CODING"); _T4_OPTIONS_2D_CODINGReady = true; } return _T4_OPTIONS_2D_CODINGContent; } }
        private static int _T4_OPTIONS_2D_CODINGContent = default;
        private static bool _T4_OPTIONS_2D_CODINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#T4_OPTIONS_EOL_BYTE_ALIGNED"/>
        /// </summary>
        public static int T4_OPTIONS_EOL_BYTE_ALIGNED { get { if (!_T4_OPTIONS_EOL_BYTE_ALIGNEDReady) { _T4_OPTIONS_EOL_BYTE_ALIGNEDContent = SGetField<int>(LocalBridgeClazz, "T4_OPTIONS_EOL_BYTE_ALIGNED"); _T4_OPTIONS_EOL_BYTE_ALIGNEDReady = true; } return _T4_OPTIONS_EOL_BYTE_ALIGNEDContent; } }
        private static int _T4_OPTIONS_EOL_BYTE_ALIGNEDContent = default;
        private static bool _T4_OPTIONS_EOL_BYTE_ALIGNEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#T4_OPTIONS_UNCOMPRESSED"/>
        /// </summary>
        public static int T4_OPTIONS_UNCOMPRESSED { get { if (!_T4_OPTIONS_UNCOMPRESSEDReady) { _T4_OPTIONS_UNCOMPRESSEDContent = SGetField<int>(LocalBridgeClazz, "T4_OPTIONS_UNCOMPRESSED"); _T4_OPTIONS_UNCOMPRESSEDReady = true; } return _T4_OPTIONS_UNCOMPRESSEDContent; } }
        private static int _T4_OPTIONS_UNCOMPRESSEDContent = default;
        private static bool _T4_OPTIONS_UNCOMPRESSEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#T6_OPTIONS_UNCOMPRESSED"/>
        /// </summary>
        public static int T6_OPTIONS_UNCOMPRESSED { get { if (!_T6_OPTIONS_UNCOMPRESSEDReady) { _T6_OPTIONS_UNCOMPRESSEDContent = SGetField<int>(LocalBridgeClazz, "T6_OPTIONS_UNCOMPRESSED"); _T6_OPTIONS_UNCOMPRESSEDReady = true; } return _T6_OPTIONS_UNCOMPRESSEDContent; } }
        private static int _T6_OPTIONS_UNCOMPRESSEDContent = default;
        private static bool _T6_OPTIONS_UNCOMPRESSEDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_ARTIST"/>
        /// </summary>
        public static int TAG_ARTIST { get { if (!_TAG_ARTISTReady) { _TAG_ARTISTContent = SGetField<int>(LocalBridgeClazz, "TAG_ARTIST"); _TAG_ARTISTReady = true; } return _TAG_ARTISTContent; } }
        private static int _TAG_ARTISTContent = default;
        private static bool _TAG_ARTISTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_BITS_PER_SAMPLE"/>
        /// </summary>
        public static int TAG_BITS_PER_SAMPLE { get { if (!_TAG_BITS_PER_SAMPLEReady) { _TAG_BITS_PER_SAMPLEContent = SGetField<int>(LocalBridgeClazz, "TAG_BITS_PER_SAMPLE"); _TAG_BITS_PER_SAMPLEReady = true; } return _TAG_BITS_PER_SAMPLEContent; } }
        private static int _TAG_BITS_PER_SAMPLEContent = default;
        private static bool _TAG_BITS_PER_SAMPLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_CELL_LENGTH"/>
        /// </summary>
        public static int TAG_CELL_LENGTH { get { if (!_TAG_CELL_LENGTHReady) { _TAG_CELL_LENGTHContent = SGetField<int>(LocalBridgeClazz, "TAG_CELL_LENGTH"); _TAG_CELL_LENGTHReady = true; } return _TAG_CELL_LENGTHContent; } }
        private static int _TAG_CELL_LENGTHContent = default;
        private static bool _TAG_CELL_LENGTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_CELL_WIDTH"/>
        /// </summary>
        public static int TAG_CELL_WIDTH { get { if (!_TAG_CELL_WIDTHReady) { _TAG_CELL_WIDTHContent = SGetField<int>(LocalBridgeClazz, "TAG_CELL_WIDTH"); _TAG_CELL_WIDTHReady = true; } return _TAG_CELL_WIDTHContent; } }
        private static int _TAG_CELL_WIDTHContent = default;
        private static bool _TAG_CELL_WIDTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_COLOR_MAP"/>
        /// </summary>
        public static int TAG_COLOR_MAP { get { if (!_TAG_COLOR_MAPReady) { _TAG_COLOR_MAPContent = SGetField<int>(LocalBridgeClazz, "TAG_COLOR_MAP"); _TAG_COLOR_MAPReady = true; } return _TAG_COLOR_MAPContent; } }
        private static int _TAG_COLOR_MAPContent = default;
        private static bool _TAG_COLOR_MAPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_COMPRESSION"/>
        /// </summary>
        public static int TAG_COMPRESSION { get { if (!_TAG_COMPRESSIONReady) { _TAG_COMPRESSIONContent = SGetField<int>(LocalBridgeClazz, "TAG_COMPRESSION"); _TAG_COMPRESSIONReady = true; } return _TAG_COMPRESSIONContent; } }
        private static int _TAG_COMPRESSIONContent = default;
        private static bool _TAG_COMPRESSIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_COPYRIGHT"/>
        /// </summary>
        public static int TAG_COPYRIGHT { get { if (!_TAG_COPYRIGHTReady) { _TAG_COPYRIGHTContent = SGetField<int>(LocalBridgeClazz, "TAG_COPYRIGHT"); _TAG_COPYRIGHTReady = true; } return _TAG_COPYRIGHTContent; } }
        private static int _TAG_COPYRIGHTContent = default;
        private static bool _TAG_COPYRIGHTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_DATE_TIME"/>
        /// </summary>
        public static int TAG_DATE_TIME { get { if (!_TAG_DATE_TIMEReady) { _TAG_DATE_TIMEContent = SGetField<int>(LocalBridgeClazz, "TAG_DATE_TIME"); _TAG_DATE_TIMEReady = true; } return _TAG_DATE_TIMEContent; } }
        private static int _TAG_DATE_TIMEContent = default;
        private static bool _TAG_DATE_TIMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_DOCUMENT_NAME"/>
        /// </summary>
        public static int TAG_DOCUMENT_NAME { get { if (!_TAG_DOCUMENT_NAMEReady) { _TAG_DOCUMENT_NAMEContent = SGetField<int>(LocalBridgeClazz, "TAG_DOCUMENT_NAME"); _TAG_DOCUMENT_NAMEReady = true; } return _TAG_DOCUMENT_NAMEContent; } }
        private static int _TAG_DOCUMENT_NAMEContent = default;
        private static bool _TAG_DOCUMENT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_DOT_RANGE"/>
        /// </summary>
        public static int TAG_DOT_RANGE { get { if (!_TAG_DOT_RANGEReady) { _TAG_DOT_RANGEContent = SGetField<int>(LocalBridgeClazz, "TAG_DOT_RANGE"); _TAG_DOT_RANGEReady = true; } return _TAG_DOT_RANGEContent; } }
        private static int _TAG_DOT_RANGEContent = default;
        private static bool _TAG_DOT_RANGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_EXTRA_SAMPLES"/>
        /// </summary>
        public static int TAG_EXTRA_SAMPLES { get { if (!_TAG_EXTRA_SAMPLESReady) { _TAG_EXTRA_SAMPLESContent = SGetField<int>(LocalBridgeClazz, "TAG_EXTRA_SAMPLES"); _TAG_EXTRA_SAMPLESReady = true; } return _TAG_EXTRA_SAMPLESContent; } }
        private static int _TAG_EXTRA_SAMPLESContent = default;
        private static bool _TAG_EXTRA_SAMPLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_FILL_ORDER"/>
        /// </summary>
        public static int TAG_FILL_ORDER { get { if (!_TAG_FILL_ORDERReady) { _TAG_FILL_ORDERContent = SGetField<int>(LocalBridgeClazz, "TAG_FILL_ORDER"); _TAG_FILL_ORDERReady = true; } return _TAG_FILL_ORDERContent; } }
        private static int _TAG_FILL_ORDERContent = default;
        private static bool _TAG_FILL_ORDERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_FREE_BYTE_COUNTS"/>
        /// </summary>
        public static int TAG_FREE_BYTE_COUNTS { get { if (!_TAG_FREE_BYTE_COUNTSReady) { _TAG_FREE_BYTE_COUNTSContent = SGetField<int>(LocalBridgeClazz, "TAG_FREE_BYTE_COUNTS"); _TAG_FREE_BYTE_COUNTSReady = true; } return _TAG_FREE_BYTE_COUNTSContent; } }
        private static int _TAG_FREE_BYTE_COUNTSContent = default;
        private static bool _TAG_FREE_BYTE_COUNTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_FREE_OFFSETS"/>
        /// </summary>
        public static int TAG_FREE_OFFSETS { get { if (!_TAG_FREE_OFFSETSReady) { _TAG_FREE_OFFSETSContent = SGetField<int>(LocalBridgeClazz, "TAG_FREE_OFFSETS"); _TAG_FREE_OFFSETSReady = true; } return _TAG_FREE_OFFSETSContent; } }
        private static int _TAG_FREE_OFFSETSContent = default;
        private static bool _TAG_FREE_OFFSETSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_GRAY_RESPONSE_CURVE"/>
        /// </summary>
        public static int TAG_GRAY_RESPONSE_CURVE { get { if (!_TAG_GRAY_RESPONSE_CURVEReady) { _TAG_GRAY_RESPONSE_CURVEContent = SGetField<int>(LocalBridgeClazz, "TAG_GRAY_RESPONSE_CURVE"); _TAG_GRAY_RESPONSE_CURVEReady = true; } return _TAG_GRAY_RESPONSE_CURVEContent; } }
        private static int _TAG_GRAY_RESPONSE_CURVEContent = default;
        private static bool _TAG_GRAY_RESPONSE_CURVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_GRAY_RESPONSE_UNIT"/>
        /// </summary>
        public static int TAG_GRAY_RESPONSE_UNIT { get { if (!_TAG_GRAY_RESPONSE_UNITReady) { _TAG_GRAY_RESPONSE_UNITContent = SGetField<int>(LocalBridgeClazz, "TAG_GRAY_RESPONSE_UNIT"); _TAG_GRAY_RESPONSE_UNITReady = true; } return _TAG_GRAY_RESPONSE_UNITContent; } }
        private static int _TAG_GRAY_RESPONSE_UNITContent = default;
        private static bool _TAG_GRAY_RESPONSE_UNITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_HALFTONE_HINTS"/>
        /// </summary>
        public static int TAG_HALFTONE_HINTS { get { if (!_TAG_HALFTONE_HINTSReady) { _TAG_HALFTONE_HINTSContent = SGetField<int>(LocalBridgeClazz, "TAG_HALFTONE_HINTS"); _TAG_HALFTONE_HINTSReady = true; } return _TAG_HALFTONE_HINTSContent; } }
        private static int _TAG_HALFTONE_HINTSContent = default;
        private static bool _TAG_HALFTONE_HINTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_HOST_COMPUTER"/>
        /// </summary>
        public static int TAG_HOST_COMPUTER { get { if (!_TAG_HOST_COMPUTERReady) { _TAG_HOST_COMPUTERContent = SGetField<int>(LocalBridgeClazz, "TAG_HOST_COMPUTER"); _TAG_HOST_COMPUTERReady = true; } return _TAG_HOST_COMPUTERContent; } }
        private static int _TAG_HOST_COMPUTERContent = default;
        private static bool _TAG_HOST_COMPUTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_ICC_PROFILE"/>
        /// </summary>
        public static int TAG_ICC_PROFILE { get { if (!_TAG_ICC_PROFILEReady) { _TAG_ICC_PROFILEContent = SGetField<int>(LocalBridgeClazz, "TAG_ICC_PROFILE"); _TAG_ICC_PROFILEReady = true; } return _TAG_ICC_PROFILEContent; } }
        private static int _TAG_ICC_PROFILEContent = default;
        private static bool _TAG_ICC_PROFILEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_IMAGE_DESCRIPTION"/>
        /// </summary>
        public static int TAG_IMAGE_DESCRIPTION { get { if (!_TAG_IMAGE_DESCRIPTIONReady) { _TAG_IMAGE_DESCRIPTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_IMAGE_DESCRIPTION"); _TAG_IMAGE_DESCRIPTIONReady = true; } return _TAG_IMAGE_DESCRIPTIONContent; } }
        private static int _TAG_IMAGE_DESCRIPTIONContent = default;
        private static bool _TAG_IMAGE_DESCRIPTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_IMAGE_LENGTH"/>
        /// </summary>
        public static int TAG_IMAGE_LENGTH { get { if (!_TAG_IMAGE_LENGTHReady) { _TAG_IMAGE_LENGTHContent = SGetField<int>(LocalBridgeClazz, "TAG_IMAGE_LENGTH"); _TAG_IMAGE_LENGTHReady = true; } return _TAG_IMAGE_LENGTHContent; } }
        private static int _TAG_IMAGE_LENGTHContent = default;
        private static bool _TAG_IMAGE_LENGTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_IMAGE_WIDTH"/>
        /// </summary>
        public static int TAG_IMAGE_WIDTH { get { if (!_TAG_IMAGE_WIDTHReady) { _TAG_IMAGE_WIDTHContent = SGetField<int>(LocalBridgeClazz, "TAG_IMAGE_WIDTH"); _TAG_IMAGE_WIDTHReady = true; } return _TAG_IMAGE_WIDTHContent; } }
        private static int _TAG_IMAGE_WIDTHContent = default;
        private static bool _TAG_IMAGE_WIDTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_INK_NAMES"/>
        /// </summary>
        public static int TAG_INK_NAMES { get { if (!_TAG_INK_NAMESReady) { _TAG_INK_NAMESContent = SGetField<int>(LocalBridgeClazz, "TAG_INK_NAMES"); _TAG_INK_NAMESReady = true; } return _TAG_INK_NAMESContent; } }
        private static int _TAG_INK_NAMESContent = default;
        private static bool _TAG_INK_NAMESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_INK_SET"/>
        /// </summary>
        public static int TAG_INK_SET { get { if (!_TAG_INK_SETReady) { _TAG_INK_SETContent = SGetField<int>(LocalBridgeClazz, "TAG_INK_SET"); _TAG_INK_SETReady = true; } return _TAG_INK_SETContent; } }
        private static int _TAG_INK_SETContent = default;
        private static bool _TAG_INK_SETReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_AC_TABLES"/>
        /// </summary>
        public static int TAG_JPEG_AC_TABLES { get { if (!_TAG_JPEG_AC_TABLESReady) { _TAG_JPEG_AC_TABLESContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_AC_TABLES"); _TAG_JPEG_AC_TABLESReady = true; } return _TAG_JPEG_AC_TABLESContent; } }
        private static int _TAG_JPEG_AC_TABLESContent = default;
        private static bool _TAG_JPEG_AC_TABLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_DC_TABLES"/>
        /// </summary>
        public static int TAG_JPEG_DC_TABLES { get { if (!_TAG_JPEG_DC_TABLESReady) { _TAG_JPEG_DC_TABLESContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_DC_TABLES"); _TAG_JPEG_DC_TABLESReady = true; } return _TAG_JPEG_DC_TABLESContent; } }
        private static int _TAG_JPEG_DC_TABLESContent = default;
        private static bool _TAG_JPEG_DC_TABLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_INTERCHANGE_FORMAT"/>
        /// </summary>
        public static int TAG_JPEG_INTERCHANGE_FORMAT { get { if (!_TAG_JPEG_INTERCHANGE_FORMATReady) { _TAG_JPEG_INTERCHANGE_FORMATContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_INTERCHANGE_FORMAT"); _TAG_JPEG_INTERCHANGE_FORMATReady = true; } return _TAG_JPEG_INTERCHANGE_FORMATContent; } }
        private static int _TAG_JPEG_INTERCHANGE_FORMATContent = default;
        private static bool _TAG_JPEG_INTERCHANGE_FORMATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_INTERCHANGE_FORMAT_LENGTH"/>
        /// </summary>
        public static int TAG_JPEG_INTERCHANGE_FORMAT_LENGTH { get { if (!_TAG_JPEG_INTERCHANGE_FORMAT_LENGTHReady) { _TAG_JPEG_INTERCHANGE_FORMAT_LENGTHContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_INTERCHANGE_FORMAT_LENGTH"); _TAG_JPEG_INTERCHANGE_FORMAT_LENGTHReady = true; } return _TAG_JPEG_INTERCHANGE_FORMAT_LENGTHContent; } }
        private static int _TAG_JPEG_INTERCHANGE_FORMAT_LENGTHContent = default;
        private static bool _TAG_JPEG_INTERCHANGE_FORMAT_LENGTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_LOSSLESS_PREDICTORS"/>
        /// </summary>
        public static int TAG_JPEG_LOSSLESS_PREDICTORS { get { if (!_TAG_JPEG_LOSSLESS_PREDICTORSReady) { _TAG_JPEG_LOSSLESS_PREDICTORSContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_LOSSLESS_PREDICTORS"); _TAG_JPEG_LOSSLESS_PREDICTORSReady = true; } return _TAG_JPEG_LOSSLESS_PREDICTORSContent; } }
        private static int _TAG_JPEG_LOSSLESS_PREDICTORSContent = default;
        private static bool _TAG_JPEG_LOSSLESS_PREDICTORSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_POINT_TRANSFORMS"/>
        /// </summary>
        public static int TAG_JPEG_POINT_TRANSFORMS { get { if (!_TAG_JPEG_POINT_TRANSFORMSReady) { _TAG_JPEG_POINT_TRANSFORMSContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_POINT_TRANSFORMS"); _TAG_JPEG_POINT_TRANSFORMSReady = true; } return _TAG_JPEG_POINT_TRANSFORMSContent; } }
        private static int _TAG_JPEG_POINT_TRANSFORMSContent = default;
        private static bool _TAG_JPEG_POINT_TRANSFORMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_PROC"/>
        /// </summary>
        public static int TAG_JPEG_PROC { get { if (!_TAG_JPEG_PROCReady) { _TAG_JPEG_PROCContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_PROC"); _TAG_JPEG_PROCReady = true; } return _TAG_JPEG_PROCContent; } }
        private static int _TAG_JPEG_PROCContent = default;
        private static bool _TAG_JPEG_PROCReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_Q_TABLES"/>
        /// </summary>
        public static int TAG_JPEG_Q_TABLES { get { if (!_TAG_JPEG_Q_TABLESReady) { _TAG_JPEG_Q_TABLESContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_Q_TABLES"); _TAG_JPEG_Q_TABLESReady = true; } return _TAG_JPEG_Q_TABLESContent; } }
        private static int _TAG_JPEG_Q_TABLESContent = default;
        private static bool _TAG_JPEG_Q_TABLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_RESTART_INTERVAL"/>
        /// </summary>
        public static int TAG_JPEG_RESTART_INTERVAL { get { if (!_TAG_JPEG_RESTART_INTERVALReady) { _TAG_JPEG_RESTART_INTERVALContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_RESTART_INTERVAL"); _TAG_JPEG_RESTART_INTERVALReady = true; } return _TAG_JPEG_RESTART_INTERVALContent; } }
        private static int _TAG_JPEG_RESTART_INTERVALContent = default;
        private static bool _TAG_JPEG_RESTART_INTERVALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_JPEG_TABLES"/>
        /// </summary>
        public static int TAG_JPEG_TABLES { get { if (!_TAG_JPEG_TABLESReady) { _TAG_JPEG_TABLESContent = SGetField<int>(LocalBridgeClazz, "TAG_JPEG_TABLES"); _TAG_JPEG_TABLESReady = true; } return _TAG_JPEG_TABLESContent; } }
        private static int _TAG_JPEG_TABLESContent = default;
        private static bool _TAG_JPEG_TABLESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_MAKE"/>
        /// </summary>
        public static int TAG_MAKE { get { if (!_TAG_MAKEReady) { _TAG_MAKEContent = SGetField<int>(LocalBridgeClazz, "TAG_MAKE"); _TAG_MAKEReady = true; } return _TAG_MAKEContent; } }
        private static int _TAG_MAKEContent = default;
        private static bool _TAG_MAKEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_MAX_SAMPLE_VALUE"/>
        /// </summary>
        public static int TAG_MAX_SAMPLE_VALUE { get { if (!_TAG_MAX_SAMPLE_VALUEReady) { _TAG_MAX_SAMPLE_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_MAX_SAMPLE_VALUE"); _TAG_MAX_SAMPLE_VALUEReady = true; } return _TAG_MAX_SAMPLE_VALUEContent; } }
        private static int _TAG_MAX_SAMPLE_VALUEContent = default;
        private static bool _TAG_MAX_SAMPLE_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_MIN_SAMPLE_VALUE"/>
        /// </summary>
        public static int TAG_MIN_SAMPLE_VALUE { get { if (!_TAG_MIN_SAMPLE_VALUEReady) { _TAG_MIN_SAMPLE_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_MIN_SAMPLE_VALUE"); _TAG_MIN_SAMPLE_VALUEReady = true; } return _TAG_MIN_SAMPLE_VALUEContent; } }
        private static int _TAG_MIN_SAMPLE_VALUEContent = default;
        private static bool _TAG_MIN_SAMPLE_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_MODEL"/>
        /// </summary>
        public static int TAG_MODEL { get { if (!_TAG_MODELReady) { _TAG_MODELContent = SGetField<int>(LocalBridgeClazz, "TAG_MODEL"); _TAG_MODELReady = true; } return _TAG_MODELContent; } }
        private static int _TAG_MODELContent = default;
        private static bool _TAG_MODELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_NEW_SUBFILE_TYPE"/>
        /// </summary>
        public static int TAG_NEW_SUBFILE_TYPE { get { if (!_TAG_NEW_SUBFILE_TYPEReady) { _TAG_NEW_SUBFILE_TYPEContent = SGetField<int>(LocalBridgeClazz, "TAG_NEW_SUBFILE_TYPE"); _TAG_NEW_SUBFILE_TYPEReady = true; } return _TAG_NEW_SUBFILE_TYPEContent; } }
        private static int _TAG_NEW_SUBFILE_TYPEContent = default;
        private static bool _TAG_NEW_SUBFILE_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_NUMBER_OF_INKS"/>
        /// </summary>
        public static int TAG_NUMBER_OF_INKS { get { if (!_TAG_NUMBER_OF_INKSReady) { _TAG_NUMBER_OF_INKSContent = SGetField<int>(LocalBridgeClazz, "TAG_NUMBER_OF_INKS"); _TAG_NUMBER_OF_INKSReady = true; } return _TAG_NUMBER_OF_INKSContent; } }
        private static int _TAG_NUMBER_OF_INKSContent = default;
        private static bool _TAG_NUMBER_OF_INKSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_ORIENTATION"/>
        /// </summary>
        public static int TAG_ORIENTATION { get { if (!_TAG_ORIENTATIONReady) { _TAG_ORIENTATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_ORIENTATION"); _TAG_ORIENTATIONReady = true; } return _TAG_ORIENTATIONContent; } }
        private static int _TAG_ORIENTATIONContent = default;
        private static bool _TAG_ORIENTATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_PAGE_NAME"/>
        /// </summary>
        public static int TAG_PAGE_NAME { get { if (!_TAG_PAGE_NAMEReady) { _TAG_PAGE_NAMEContent = SGetField<int>(LocalBridgeClazz, "TAG_PAGE_NAME"); _TAG_PAGE_NAMEReady = true; } return _TAG_PAGE_NAMEContent; } }
        private static int _TAG_PAGE_NAMEContent = default;
        private static bool _TAG_PAGE_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_PAGE_NUMBER"/>
        /// </summary>
        public static int TAG_PAGE_NUMBER { get { if (!_TAG_PAGE_NUMBERReady) { _TAG_PAGE_NUMBERContent = SGetField<int>(LocalBridgeClazz, "TAG_PAGE_NUMBER"); _TAG_PAGE_NUMBERReady = true; } return _TAG_PAGE_NUMBERContent; } }
        private static int _TAG_PAGE_NUMBERContent = default;
        private static bool _TAG_PAGE_NUMBERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_PHOTOMETRIC_INTERPRETATION"/>
        /// </summary>
        public static int TAG_PHOTOMETRIC_INTERPRETATION { get { if (!_TAG_PHOTOMETRIC_INTERPRETATIONReady) { _TAG_PHOTOMETRIC_INTERPRETATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_PHOTOMETRIC_INTERPRETATION"); _TAG_PHOTOMETRIC_INTERPRETATIONReady = true; } return _TAG_PHOTOMETRIC_INTERPRETATIONContent; } }
        private static int _TAG_PHOTOMETRIC_INTERPRETATIONContent = default;
        private static bool _TAG_PHOTOMETRIC_INTERPRETATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_PLANAR_CONFIGURATION"/>
        /// </summary>
        public static int TAG_PLANAR_CONFIGURATION { get { if (!_TAG_PLANAR_CONFIGURATIONReady) { _TAG_PLANAR_CONFIGURATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_PLANAR_CONFIGURATION"); _TAG_PLANAR_CONFIGURATIONReady = true; } return _TAG_PLANAR_CONFIGURATIONContent; } }
        private static int _TAG_PLANAR_CONFIGURATIONContent = default;
        private static bool _TAG_PLANAR_CONFIGURATIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_PREDICTOR"/>
        /// </summary>
        public static int TAG_PREDICTOR { get { if (!_TAG_PREDICTORReady) { _TAG_PREDICTORContent = SGetField<int>(LocalBridgeClazz, "TAG_PREDICTOR"); _TAG_PREDICTORReady = true; } return _TAG_PREDICTORContent; } }
        private static int _TAG_PREDICTORContent = default;
        private static bool _TAG_PREDICTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_PRIMARY_CHROMATICITES"/>
        /// </summary>
        public static int TAG_PRIMARY_CHROMATICITES { get { if (!_TAG_PRIMARY_CHROMATICITESReady) { _TAG_PRIMARY_CHROMATICITESContent = SGetField<int>(LocalBridgeClazz, "TAG_PRIMARY_CHROMATICITES"); _TAG_PRIMARY_CHROMATICITESReady = true; } return _TAG_PRIMARY_CHROMATICITESContent; } }
        private static int _TAG_PRIMARY_CHROMATICITESContent = default;
        private static bool _TAG_PRIMARY_CHROMATICITESReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_REFERENCE_BLACK_WHITE"/>
        /// </summary>
        public static int TAG_REFERENCE_BLACK_WHITE { get { if (!_TAG_REFERENCE_BLACK_WHITEReady) { _TAG_REFERENCE_BLACK_WHITEContent = SGetField<int>(LocalBridgeClazz, "TAG_REFERENCE_BLACK_WHITE"); _TAG_REFERENCE_BLACK_WHITEReady = true; } return _TAG_REFERENCE_BLACK_WHITEContent; } }
        private static int _TAG_REFERENCE_BLACK_WHITEContent = default;
        private static bool _TAG_REFERENCE_BLACK_WHITEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_RESOLUTION_UNIT"/>
        /// </summary>
        public static int TAG_RESOLUTION_UNIT { get { if (!_TAG_RESOLUTION_UNITReady) { _TAG_RESOLUTION_UNITContent = SGetField<int>(LocalBridgeClazz, "TAG_RESOLUTION_UNIT"); _TAG_RESOLUTION_UNITReady = true; } return _TAG_RESOLUTION_UNITContent; } }
        private static int _TAG_RESOLUTION_UNITContent = default;
        private static bool _TAG_RESOLUTION_UNITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_ROWS_PER_STRIP"/>
        /// </summary>
        public static int TAG_ROWS_PER_STRIP { get { if (!_TAG_ROWS_PER_STRIPReady) { _TAG_ROWS_PER_STRIPContent = SGetField<int>(LocalBridgeClazz, "TAG_ROWS_PER_STRIP"); _TAG_ROWS_PER_STRIPReady = true; } return _TAG_ROWS_PER_STRIPContent; } }
        private static int _TAG_ROWS_PER_STRIPContent = default;
        private static bool _TAG_ROWS_PER_STRIPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_S_MAX_SAMPLE_VALUE"/>
        /// </summary>
        public static int TAG_S_MAX_SAMPLE_VALUE { get { if (!_TAG_S_MAX_SAMPLE_VALUEReady) { _TAG_S_MAX_SAMPLE_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_S_MAX_SAMPLE_VALUE"); _TAG_S_MAX_SAMPLE_VALUEReady = true; } return _TAG_S_MAX_SAMPLE_VALUEContent; } }
        private static int _TAG_S_MAX_SAMPLE_VALUEContent = default;
        private static bool _TAG_S_MAX_SAMPLE_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_S_MIN_SAMPLE_VALUE"/>
        /// </summary>
        public static int TAG_S_MIN_SAMPLE_VALUE { get { if (!_TAG_S_MIN_SAMPLE_VALUEReady) { _TAG_S_MIN_SAMPLE_VALUEContent = SGetField<int>(LocalBridgeClazz, "TAG_S_MIN_SAMPLE_VALUE"); _TAG_S_MIN_SAMPLE_VALUEReady = true; } return _TAG_S_MIN_SAMPLE_VALUEContent; } }
        private static int _TAG_S_MIN_SAMPLE_VALUEContent = default;
        private static bool _TAG_S_MIN_SAMPLE_VALUEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_SAMPLE_FORMAT"/>
        /// </summary>
        public static int TAG_SAMPLE_FORMAT { get { if (!_TAG_SAMPLE_FORMATReady) { _TAG_SAMPLE_FORMATContent = SGetField<int>(LocalBridgeClazz, "TAG_SAMPLE_FORMAT"); _TAG_SAMPLE_FORMATReady = true; } return _TAG_SAMPLE_FORMATContent; } }
        private static int _TAG_SAMPLE_FORMATContent = default;
        private static bool _TAG_SAMPLE_FORMATReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_SAMPLES_PER_PIXEL"/>
        /// </summary>
        public static int TAG_SAMPLES_PER_PIXEL { get { if (!_TAG_SAMPLES_PER_PIXELReady) { _TAG_SAMPLES_PER_PIXELContent = SGetField<int>(LocalBridgeClazz, "TAG_SAMPLES_PER_PIXEL"); _TAG_SAMPLES_PER_PIXELReady = true; } return _TAG_SAMPLES_PER_PIXELContent; } }
        private static int _TAG_SAMPLES_PER_PIXELContent = default;
        private static bool _TAG_SAMPLES_PER_PIXELReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_SOFTWARE"/>
        /// </summary>
        public static int TAG_SOFTWARE { get { if (!_TAG_SOFTWAREReady) { _TAG_SOFTWAREContent = SGetField<int>(LocalBridgeClazz, "TAG_SOFTWARE"); _TAG_SOFTWAREReady = true; } return _TAG_SOFTWAREContent; } }
        private static int _TAG_SOFTWAREContent = default;
        private static bool _TAG_SOFTWAREReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_STRIP_BYTE_COUNTS"/>
        /// </summary>
        public static int TAG_STRIP_BYTE_COUNTS { get { if (!_TAG_STRIP_BYTE_COUNTSReady) { _TAG_STRIP_BYTE_COUNTSContent = SGetField<int>(LocalBridgeClazz, "TAG_STRIP_BYTE_COUNTS"); _TAG_STRIP_BYTE_COUNTSReady = true; } return _TAG_STRIP_BYTE_COUNTSContent; } }
        private static int _TAG_STRIP_BYTE_COUNTSContent = default;
        private static bool _TAG_STRIP_BYTE_COUNTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_STRIP_OFFSETS"/>
        /// </summary>
        public static int TAG_STRIP_OFFSETS { get { if (!_TAG_STRIP_OFFSETSReady) { _TAG_STRIP_OFFSETSContent = SGetField<int>(LocalBridgeClazz, "TAG_STRIP_OFFSETS"); _TAG_STRIP_OFFSETSReady = true; } return _TAG_STRIP_OFFSETSContent; } }
        private static int _TAG_STRIP_OFFSETSContent = default;
        private static bool _TAG_STRIP_OFFSETSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_SUBFILE_TYPE"/>
        /// </summary>
        public static int TAG_SUBFILE_TYPE { get { if (!_TAG_SUBFILE_TYPEReady) { _TAG_SUBFILE_TYPEContent = SGetField<int>(LocalBridgeClazz, "TAG_SUBFILE_TYPE"); _TAG_SUBFILE_TYPEReady = true; } return _TAG_SUBFILE_TYPEContent; } }
        private static int _TAG_SUBFILE_TYPEContent = default;
        private static bool _TAG_SUBFILE_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_T4_OPTIONS"/>
        /// </summary>
        public static int TAG_T4_OPTIONS { get { if (!_TAG_T4_OPTIONSReady) { _TAG_T4_OPTIONSContent = SGetField<int>(LocalBridgeClazz, "TAG_T4_OPTIONS"); _TAG_T4_OPTIONSReady = true; } return _TAG_T4_OPTIONSContent; } }
        private static int _TAG_T4_OPTIONSContent = default;
        private static bool _TAG_T4_OPTIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_T6_OPTIONS"/>
        /// </summary>
        public static int TAG_T6_OPTIONS { get { if (!_TAG_T6_OPTIONSReady) { _TAG_T6_OPTIONSContent = SGetField<int>(LocalBridgeClazz, "TAG_T6_OPTIONS"); _TAG_T6_OPTIONSReady = true; } return _TAG_T6_OPTIONSContent; } }
        private static int _TAG_T6_OPTIONSContent = default;
        private static bool _TAG_T6_OPTIONSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TARGET_PRINTER"/>
        /// </summary>
        public static int TAG_TARGET_PRINTER { get { if (!_TAG_TARGET_PRINTERReady) { _TAG_TARGET_PRINTERContent = SGetField<int>(LocalBridgeClazz, "TAG_TARGET_PRINTER"); _TAG_TARGET_PRINTERReady = true; } return _TAG_TARGET_PRINTERContent; } }
        private static int _TAG_TARGET_PRINTERContent = default;
        private static bool _TAG_TARGET_PRINTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_THRESHHOLDING"/>
        /// </summary>
        public static int TAG_THRESHHOLDING { get { if (!_TAG_THRESHHOLDINGReady) { _TAG_THRESHHOLDINGContent = SGetField<int>(LocalBridgeClazz, "TAG_THRESHHOLDING"); _TAG_THRESHHOLDINGReady = true; } return _TAG_THRESHHOLDINGContent; } }
        private static int _TAG_THRESHHOLDINGContent = default;
        private static bool _TAG_THRESHHOLDINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TILE_BYTE_COUNTS"/>
        /// </summary>
        public static int TAG_TILE_BYTE_COUNTS { get { if (!_TAG_TILE_BYTE_COUNTSReady) { _TAG_TILE_BYTE_COUNTSContent = SGetField<int>(LocalBridgeClazz, "TAG_TILE_BYTE_COUNTS"); _TAG_TILE_BYTE_COUNTSReady = true; } return _TAG_TILE_BYTE_COUNTSContent; } }
        private static int _TAG_TILE_BYTE_COUNTSContent = default;
        private static bool _TAG_TILE_BYTE_COUNTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TILE_LENGTH"/>
        /// </summary>
        public static int TAG_TILE_LENGTH { get { if (!_TAG_TILE_LENGTHReady) { _TAG_TILE_LENGTHContent = SGetField<int>(LocalBridgeClazz, "TAG_TILE_LENGTH"); _TAG_TILE_LENGTHReady = true; } return _TAG_TILE_LENGTHContent; } }
        private static int _TAG_TILE_LENGTHContent = default;
        private static bool _TAG_TILE_LENGTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TILE_OFFSETS"/>
        /// </summary>
        public static int TAG_TILE_OFFSETS { get { if (!_TAG_TILE_OFFSETSReady) { _TAG_TILE_OFFSETSContent = SGetField<int>(LocalBridgeClazz, "TAG_TILE_OFFSETS"); _TAG_TILE_OFFSETSReady = true; } return _TAG_TILE_OFFSETSContent; } }
        private static int _TAG_TILE_OFFSETSContent = default;
        private static bool _TAG_TILE_OFFSETSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TILE_WIDTH"/>
        /// </summary>
        public static int TAG_TILE_WIDTH { get { if (!_TAG_TILE_WIDTHReady) { _TAG_TILE_WIDTHContent = SGetField<int>(LocalBridgeClazz, "TAG_TILE_WIDTH"); _TAG_TILE_WIDTHReady = true; } return _TAG_TILE_WIDTHContent; } }
        private static int _TAG_TILE_WIDTHContent = default;
        private static bool _TAG_TILE_WIDTHReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TRANSFER_FUNCTION"/>
        /// </summary>
        public static int TAG_TRANSFER_FUNCTION { get { if (!_TAG_TRANSFER_FUNCTIONReady) { _TAG_TRANSFER_FUNCTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_TRANSFER_FUNCTION"); _TAG_TRANSFER_FUNCTIONReady = true; } return _TAG_TRANSFER_FUNCTIONContent; } }
        private static int _TAG_TRANSFER_FUNCTIONContent = default;
        private static bool _TAG_TRANSFER_FUNCTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_TRANSFER_RANGE"/>
        /// </summary>
        public static int TAG_TRANSFER_RANGE { get { if (!_TAG_TRANSFER_RANGEReady) { _TAG_TRANSFER_RANGEContent = SGetField<int>(LocalBridgeClazz, "TAG_TRANSFER_RANGE"); _TAG_TRANSFER_RANGEReady = true; } return _TAG_TRANSFER_RANGEContent; } }
        private static int _TAG_TRANSFER_RANGEContent = default;
        private static bool _TAG_TRANSFER_RANGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_WHITE_POINT"/>
        /// </summary>
        public static int TAG_WHITE_POINT { get { if (!_TAG_WHITE_POINTReady) { _TAG_WHITE_POINTContent = SGetField<int>(LocalBridgeClazz, "TAG_WHITE_POINT"); _TAG_WHITE_POINTReady = true; } return _TAG_WHITE_POINTContent; } }
        private static int _TAG_WHITE_POINTContent = default;
        private static bool _TAG_WHITE_POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_X_POSITION"/>
        /// </summary>
        public static int TAG_X_POSITION { get { if (!_TAG_X_POSITIONReady) { _TAG_X_POSITIONContent = SGetField<int>(LocalBridgeClazz, "TAG_X_POSITION"); _TAG_X_POSITIONReady = true; } return _TAG_X_POSITIONContent; } }
        private static int _TAG_X_POSITIONContent = default;
        private static bool _TAG_X_POSITIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_X_RESOLUTION"/>
        /// </summary>
        public static int TAG_X_RESOLUTION { get { if (!_TAG_X_RESOLUTIONReady) { _TAG_X_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_X_RESOLUTION"); _TAG_X_RESOLUTIONReady = true; } return _TAG_X_RESOLUTIONContent; } }
        private static int _TAG_X_RESOLUTIONContent = default;
        private static bool _TAG_X_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_Y_CB_CR_COEFFICIENTS"/>
        /// </summary>
        public static int TAG_Y_CB_CR_COEFFICIENTS { get { if (!_TAG_Y_CB_CR_COEFFICIENTSReady) { _TAG_Y_CB_CR_COEFFICIENTSContent = SGetField<int>(LocalBridgeClazz, "TAG_Y_CB_CR_COEFFICIENTS"); _TAG_Y_CB_CR_COEFFICIENTSReady = true; } return _TAG_Y_CB_CR_COEFFICIENTSContent; } }
        private static int _TAG_Y_CB_CR_COEFFICIENTSContent = default;
        private static bool _TAG_Y_CB_CR_COEFFICIENTSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_Y_CB_CR_POSITIONING"/>
        /// </summary>
        public static int TAG_Y_CB_CR_POSITIONING { get { if (!_TAG_Y_CB_CR_POSITIONINGReady) { _TAG_Y_CB_CR_POSITIONINGContent = SGetField<int>(LocalBridgeClazz, "TAG_Y_CB_CR_POSITIONING"); _TAG_Y_CB_CR_POSITIONINGReady = true; } return _TAG_Y_CB_CR_POSITIONINGContent; } }
        private static int _TAG_Y_CB_CR_POSITIONINGContent = default;
        private static bool _TAG_Y_CB_CR_POSITIONINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_Y_CB_CR_SUBSAMPLING"/>
        /// </summary>
        public static int TAG_Y_CB_CR_SUBSAMPLING { get { if (!_TAG_Y_CB_CR_SUBSAMPLINGReady) { _TAG_Y_CB_CR_SUBSAMPLINGContent = SGetField<int>(LocalBridgeClazz, "TAG_Y_CB_CR_SUBSAMPLING"); _TAG_Y_CB_CR_SUBSAMPLINGReady = true; } return _TAG_Y_CB_CR_SUBSAMPLINGContent; } }
        private static int _TAG_Y_CB_CR_SUBSAMPLINGContent = default;
        private static bool _TAG_Y_CB_CR_SUBSAMPLINGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_Y_POSITION"/>
        /// </summary>
        public static int TAG_Y_POSITION { get { if (!_TAG_Y_POSITIONReady) { _TAG_Y_POSITIONContent = SGetField<int>(LocalBridgeClazz, "TAG_Y_POSITION"); _TAG_Y_POSITIONReady = true; } return _TAG_Y_POSITIONContent; } }
        private static int _TAG_Y_POSITIONContent = default;
        private static bool _TAG_Y_POSITIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#TAG_Y_RESOLUTION"/>
        /// </summary>
        public static int TAG_Y_RESOLUTION { get { if (!_TAG_Y_RESOLUTIONReady) { _TAG_Y_RESOLUTIONContent = SGetField<int>(LocalBridgeClazz, "TAG_Y_RESOLUTION"); _TAG_Y_RESOLUTIONReady = true; } return _TAG_Y_RESOLUTIONContent; } }
        private static int _TAG_Y_RESOLUTIONContent = default;
        private static bool _TAG_Y_RESOLUTIONReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#THRESHHOLDING_NONE"/>
        /// </summary>
        public static int THRESHHOLDING_NONE { get { if (!_THRESHHOLDING_NONEReady) { _THRESHHOLDING_NONEContent = SGetField<int>(LocalBridgeClazz, "THRESHHOLDING_NONE"); _THRESHHOLDING_NONEReady = true; } return _THRESHHOLDING_NONEContent; } }
        private static int _THRESHHOLDING_NONEContent = default;
        private static bool _THRESHHOLDING_NONEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#THRESHHOLDING_ORDERED_DITHER"/>
        /// </summary>
        public static int THRESHHOLDING_ORDERED_DITHER { get { if (!_THRESHHOLDING_ORDERED_DITHERReady) { _THRESHHOLDING_ORDERED_DITHERContent = SGetField<int>(LocalBridgeClazz, "THRESHHOLDING_ORDERED_DITHER"); _THRESHHOLDING_ORDERED_DITHERReady = true; } return _THRESHHOLDING_ORDERED_DITHERContent; } }
        private static int _THRESHHOLDING_ORDERED_DITHERContent = default;
        private static bool _THRESHHOLDING_ORDERED_DITHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#THRESHHOLDING_RANDOMIZED_DITHER"/>
        /// </summary>
        public static int THRESHHOLDING_RANDOMIZED_DITHER { get { if (!_THRESHHOLDING_RANDOMIZED_DITHERReady) { _THRESHHOLDING_RANDOMIZED_DITHERContent = SGetField<int>(LocalBridgeClazz, "THRESHHOLDING_RANDOMIZED_DITHER"); _THRESHHOLDING_RANDOMIZED_DITHERReady = true; } return _THRESHHOLDING_RANDOMIZED_DITHERContent; } }
        private static int _THRESHHOLDING_RANDOMIZED_DITHERContent = default;
        private static bool _THRESHHOLDING_RANDOMIZED_DITHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#Y_CB_CR_POSITIONING_CENTERED"/>
        /// </summary>
        public static int Y_CB_CR_POSITIONING_CENTERED { get { if (!_Y_CB_CR_POSITIONING_CENTEREDReady) { _Y_CB_CR_POSITIONING_CENTEREDContent = SGetField<int>(LocalBridgeClazz, "Y_CB_CR_POSITIONING_CENTERED"); _Y_CB_CR_POSITIONING_CENTEREDReady = true; } return _Y_CB_CR_POSITIONING_CENTEREDContent; } }
        private static int _Y_CB_CR_POSITIONING_CENTEREDContent = default;
        private static bool _Y_CB_CR_POSITIONING_CENTEREDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#Y_CB_CR_POSITIONING_COSITED"/>
        /// </summary>
        public static int Y_CB_CR_POSITIONING_COSITED { get { if (!_Y_CB_CR_POSITIONING_COSITEDReady) { _Y_CB_CR_POSITIONING_COSITEDContent = SGetField<int>(LocalBridgeClazz, "Y_CB_CR_POSITIONING_COSITED"); _Y_CB_CR_POSITIONING_COSITEDReady = true; } return _Y_CB_CR_POSITIONING_COSITEDContent; } }
        private static int _Y_CB_CR_POSITIONING_COSITEDContent = default;
        private static bool _Y_CB_CR_POSITIONING_COSITEDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html#getInstance()"/> 
        /// </summary>
        public static Javax.Imageio.Plugins.Tiff.BaselineTIFFTagSet Instance
        {
            get { return SExecuteWithSignature<Javax.Imageio.Plugins.Tiff.BaselineTIFFTagSet>(LocalBridgeClazz, "getInstance", "()Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet;"); }
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}