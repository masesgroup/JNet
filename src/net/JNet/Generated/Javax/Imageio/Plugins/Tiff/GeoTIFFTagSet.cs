/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.1.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Imageio.Plugins.Tiff
{
    #region GeoTIFFTagSet
    public partial class GeoTIFFTagSet
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#TAG_GEO_ASCII_PARAMS"/>
        /// </summary>
        public static int TAG_GEO_ASCII_PARAMS { get { if (!_TAG_GEO_ASCII_PARAMSReady) { _TAG_GEO_ASCII_PARAMSContent = SGetField<int>(LocalBridgeClazz, "TAG_GEO_ASCII_PARAMS"); _TAG_GEO_ASCII_PARAMSReady = true; } return _TAG_GEO_ASCII_PARAMSContent; } }
        private static int _TAG_GEO_ASCII_PARAMSContent = default;
        private static bool _TAG_GEO_ASCII_PARAMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#TAG_GEO_DOUBLE_PARAMS"/>
        /// </summary>
        public static int TAG_GEO_DOUBLE_PARAMS { get { if (!_TAG_GEO_DOUBLE_PARAMSReady) { _TAG_GEO_DOUBLE_PARAMSContent = SGetField<int>(LocalBridgeClazz, "TAG_GEO_DOUBLE_PARAMS"); _TAG_GEO_DOUBLE_PARAMSReady = true; } return _TAG_GEO_DOUBLE_PARAMSContent; } }
        private static int _TAG_GEO_DOUBLE_PARAMSContent = default;
        private static bool _TAG_GEO_DOUBLE_PARAMSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#TAG_GEO_KEY_DIRECTORY"/>
        /// </summary>
        public static int TAG_GEO_KEY_DIRECTORY { get { if (!_TAG_GEO_KEY_DIRECTORYReady) { _TAG_GEO_KEY_DIRECTORYContent = SGetField<int>(LocalBridgeClazz, "TAG_GEO_KEY_DIRECTORY"); _TAG_GEO_KEY_DIRECTORYReady = true; } return _TAG_GEO_KEY_DIRECTORYContent; } }
        private static int _TAG_GEO_KEY_DIRECTORYContent = default;
        private static bool _TAG_GEO_KEY_DIRECTORYReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#TAG_MODEL_PIXEL_SCALE"/>
        /// </summary>
        public static int TAG_MODEL_PIXEL_SCALE { get { if (!_TAG_MODEL_PIXEL_SCALEReady) { _TAG_MODEL_PIXEL_SCALEContent = SGetField<int>(LocalBridgeClazz, "TAG_MODEL_PIXEL_SCALE"); _TAG_MODEL_PIXEL_SCALEReady = true; } return _TAG_MODEL_PIXEL_SCALEContent; } }
        private static int _TAG_MODEL_PIXEL_SCALEContent = default;
        private static bool _TAG_MODEL_PIXEL_SCALEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#TAG_MODEL_TIE_POINT"/>
        /// </summary>
        public static int TAG_MODEL_TIE_POINT { get { if (!_TAG_MODEL_TIE_POINTReady) { _TAG_MODEL_TIE_POINTContent = SGetField<int>(LocalBridgeClazz, "TAG_MODEL_TIE_POINT"); _TAG_MODEL_TIE_POINTReady = true; } return _TAG_MODEL_TIE_POINTContent; } }
        private static int _TAG_MODEL_TIE_POINTContent = default;
        private static bool _TAG_MODEL_TIE_POINTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#TAG_MODEL_TRANSFORMATION"/>
        /// </summary>
        public static int TAG_MODEL_TRANSFORMATION { get { if (!_TAG_MODEL_TRANSFORMATIONReady) { _TAG_MODEL_TRANSFORMATIONContent = SGetField<int>(LocalBridgeClazz, "TAG_MODEL_TRANSFORMATION"); _TAG_MODEL_TRANSFORMATIONReady = true; } return _TAG_MODEL_TRANSFORMATIONContent; } }
        private static int _TAG_MODEL_TRANSFORMATIONContent = default;
        private static bool _TAG_MODEL_TRANSFORMATIONReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html#getInstance()"/> 
        /// </summary>
        public static Javax.Imageio.Plugins.Tiff.GeoTIFFTagSet Instance
        {
            get { return SExecuteWithSignature<Javax.Imageio.Plugins.Tiff.GeoTIFFTagSet>(LocalBridgeClazz, "getInstance", "()Ljavax/imageio/plugins/tiff/GeoTIFFTagSet;"); }
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}