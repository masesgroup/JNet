/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Rmi.Ssl
{
    #region SslRMIClientSocketFactory
    public partial class SslRMIClientSocketFactory
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        public static implicit operator Java.Rmi.Server.RMIClientSocketFactory(Javax.Rmi.Ssl.SslRMIClientSocketFactory t) => t.Cast<Java.Rmi.Server.RMIClientSocketFactory>();
        public static implicit operator Java.Io.Serializable(Javax.Rmi.Ssl.SslRMIClientSocketFactory t) => t.Cast<Java.Io.Serializable>();
        
        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.rmi/javax/rmi/ssl/SslRMIClientSocketFactory.html#createSocket(java.lang.String,int) throws java.io.IOException
        /// </summary>
        public Java.Net.Socket CreateSocket(string arg0, int arg1)
        {
            return IExecute<Java.Net.Socket>("createSocket", arg0, arg1);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}