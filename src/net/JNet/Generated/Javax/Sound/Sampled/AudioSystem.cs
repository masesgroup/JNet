/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.3.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Sound.Sampled
{
    #region AudioSystem
    public partial class AudioSystem
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#NOT_SPECIFIED"/>
        /// </summary>
        public static int NOT_SPECIFIED { get { if (!_NOT_SPECIFIEDReady) { _NOT_SPECIFIEDContent = SGetField<int>(LocalBridgeClazz, "NOT_SPECIFIED"); _NOT_SPECIFIEDReady = true; } return _NOT_SPECIFIEDContent; } }
        private static int _NOT_SPECIFIEDContent = default;
        private static bool _NOT_SPECIFIEDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileTypes()"/> 
        /// </summary>
        public static Javax.Sound.Sampled.AudioFileFormat.Type[] AudioFileTypes
        {
            get { return SExecuteWithSignatureArray<Javax.Sound.Sampled.AudioFileFormat.Type>(LocalBridgeClazz, "getAudioFileTypes", "()[Ljavax/sound/sampled/AudioFileFormat$Type;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getClip()"/> 
        /// </summary>
        public static Javax.Sound.Sampled.Clip Clip
        {
            get { return SExecuteWithSignature<Javax.Sound.Sampled.Clip>(LocalBridgeClazz, "getClip", "()Ljavax/sound/sampled/Clip;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getMixerInfo()"/> 
        /// </summary>
        public static Javax.Sound.Sampled.Mixer.Info[] MixerInfo
        {
            get { return SExecuteWithSignatureArray<Javax.Sound.Sampled.Mixer.Info>(LocalBridgeClazz, "getMixerInfo", "()[Ljavax/sound/sampled/Mixer$Info;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsConversionSupported(Javax.Sound.Sampled.AudioFormat arg0, Javax.Sound.Sampled.AudioFormat arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "isConversionSupported", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isConversionSupported(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat.Encoding"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsConversionSupported(Javax.Sound.Sampled.AudioFormat.Encoding arg0, Javax.Sound.Sampled.AudioFormat arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "isConversionSupported", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type,javax.sound.sampled.AudioInputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFileFormat.Type"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioInputStream"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsFileTypeSupported(Javax.Sound.Sampled.AudioFileFormat.Type arg0, Javax.Sound.Sampled.AudioInputStream arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "isFileTypeSupported", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFileFormat.Type"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsFileTypeSupported(Javax.Sound.Sampled.AudioFileFormat.Type arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isFileTypeSupported", "(Ljavax/sound/sampled/AudioFileFormat$Type;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isLineSupported(javax.sound.sampled.Line.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.Line.Info"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsLineSupported(Javax.Sound.Sampled.Line.Info arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isLineSupported", "(Ljavax/sound/sampled/Line$Info;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#write(javax.sound.sampled.AudioInputStream,javax.sound.sampled.AudioFileFormat.Type,java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioInputStream"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioFileFormat.Type"/></param>
        /// <param name="arg2"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static int Write(Javax.Sound.Sampled.AudioInputStream arg0, Javax.Sound.Sampled.AudioFileFormat.Type arg1, Java.Io.File arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "write", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#write(javax.sound.sampled.AudioInputStream,javax.sound.sampled.AudioFileFormat.Type,java.io.OutputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioInputStream"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioFileFormat.Type"/></param>
        /// <param name="arg2"><see cref="Java.Io.OutputStream"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static int Write(Javax.Sound.Sampled.AudioInputStream arg0, Javax.Sound.Sampled.AudioFileFormat.Type arg1, Java.Io.OutputStream arg2)
        {
            return SExecute<int>(LocalBridgeClazz, "write", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileFormat(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFileFormat"/></returns>
        /// <exception cref="Javax.Sound.Sampled.UnsupportedAudioFileException"/>
        /// <exception cref="Java.Io.IOException"/>
        public static Javax.Sound.Sampled.AudioFileFormat GetAudioFileFormat(Java.Io.File arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.AudioFileFormat>(LocalBridgeClazz, "getAudioFileFormat", "(Ljava/io/File;)Ljavax/sound/sampled/AudioFileFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileFormat(java.io.InputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFileFormat"/></returns>
        /// <exception cref="Javax.Sound.Sampled.UnsupportedAudioFileException"/>
        /// <exception cref="Java.Io.IOException"/>
        public static Javax.Sound.Sampled.AudioFileFormat GetAudioFileFormat(Java.Io.InputStream arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.AudioFileFormat>(LocalBridgeClazz, "getAudioFileFormat", "(Ljava/io/InputStream;)Ljavax/sound/sampled/AudioFileFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileFormat(java.net.URL)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.URL"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFileFormat"/></returns>
        /// <exception cref="Javax.Sound.Sampled.UnsupportedAudioFileException"/>
        /// <exception cref="Java.Io.IOException"/>
        public static Javax.Sound.Sampled.AudioFileFormat GetAudioFileFormat(Java.Net.URL arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.AudioFileFormat>(LocalBridgeClazz, "getAudioFileFormat", "(Ljava/net/URL;)Ljavax/sound/sampled/AudioFileFormat;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileTypes(javax.sound.sampled.AudioInputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioInputStream"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFileFormat.Type"/></returns>
        public static Javax.Sound.Sampled.AudioFileFormat.Type[] GetAudioFileTypes(Javax.Sound.Sampled.AudioInputStream arg0)
        {
            return SExecuteWithSignatureArray<Javax.Sound.Sampled.AudioFileFormat.Type>(LocalBridgeClazz, "getAudioFileTypes", "(Ljavax/sound/sampled/AudioInputStream;)[Ljavax/sound/sampled/AudioFileFormat$Type;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetFormats(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat.Encoding"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFormat"/></returns>
        public static Javax.Sound.Sampled.AudioFormat[] GetTargetFormats(Javax.Sound.Sampled.AudioFormat.Encoding arg0, Javax.Sound.Sampled.AudioFormat arg1)
        {
            return SExecuteArray<Javax.Sound.Sampled.AudioFormat>(LocalBridgeClazz, "getTargetFormats", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetEncodings(javax.sound.sampled.AudioFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFormat.Encoding"/></returns>
        public static Javax.Sound.Sampled.AudioFormat.Encoding[] GetTargetEncodings(Javax.Sound.Sampled.AudioFormat arg0)
        {
            return SExecuteWithSignatureArray<Javax.Sound.Sampled.AudioFormat.Encoding>(LocalBridgeClazz, "getTargetEncodings", "(Ljavax/sound/sampled/AudioFormat;)[Ljavax/sound/sampled/AudioFormat$Encoding;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetEncodings(javax.sound.sampled.AudioFormat.Encoding)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat.Encoding"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioFormat.Encoding"/></returns>
        public static Javax.Sound.Sampled.AudioFormat.Encoding[] GetTargetEncodings(Javax.Sound.Sampled.AudioFormat.Encoding arg0)
        {
            return SExecuteWithSignatureArray<Javax.Sound.Sampled.AudioFormat.Encoding>(LocalBridgeClazz, "getTargetEncodings", "(Ljavax/sound/sampled/AudioFormat$Encoding;)[Ljavax/sound/sampled/AudioFormat$Encoding;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioInputStream"/></returns>
        /// <exception cref="Javax.Sound.Sampled.UnsupportedAudioFileException"/>
        /// <exception cref="Java.Io.IOException"/>
        public static Javax.Sound.Sampled.AudioInputStream GetAudioInputStream(Java.Io.File arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.AudioInputStream>(LocalBridgeClazz, "getAudioInputStream", "(Ljava/io/File;)Ljavax/sound/sampled/AudioInputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(java.io.InputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioInputStream"/></returns>
        /// <exception cref="Javax.Sound.Sampled.UnsupportedAudioFileException"/>
        /// <exception cref="Java.Io.IOException"/>
        public static Javax.Sound.Sampled.AudioInputStream GetAudioInputStream(Java.Io.InputStream arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.AudioInputStream>(LocalBridgeClazz, "getAudioInputStream", "(Ljava/io/InputStream;)Ljavax/sound/sampled/AudioInputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(java.net.URL)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.URL"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioInputStream"/></returns>
        /// <exception cref="Javax.Sound.Sampled.UnsupportedAudioFileException"/>
        /// <exception cref="Java.Io.IOException"/>
        public static Javax.Sound.Sampled.AudioInputStream GetAudioInputStream(Java.Net.URL arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.AudioInputStream>(LocalBridgeClazz, "getAudioInputStream", "(Ljava/net/URL;)Ljavax/sound/sampled/AudioInputStream;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioInputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioInputStream"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioInputStream"/></returns>
        public static Javax.Sound.Sampled.AudioInputStream GetAudioInputStream(Javax.Sound.Sampled.AudioFormat arg0, Javax.Sound.Sampled.AudioInputStream arg1)
        {
            return SExecute<Javax.Sound.Sampled.AudioInputStream>(LocalBridgeClazz, "getAudioInputStream", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioInputStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat.Encoding"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.AudioInputStream"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.AudioInputStream"/></returns>
        public static Javax.Sound.Sampled.AudioInputStream GetAudioInputStream(Javax.Sound.Sampled.AudioFormat.Encoding arg0, Javax.Sound.Sampled.AudioInputStream arg1)
        {
            return SExecute<Javax.Sound.Sampled.AudioInputStream>(LocalBridgeClazz, "getAudioInputStream", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getClip(javax.sound.sampled.Mixer.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.Mixer.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.Clip"/></returns>
        /// <exception cref="Javax.Sound.Sampled.LineUnavailableException"/>
        public static Javax.Sound.Sampled.Clip GetClip(Javax.Sound.Sampled.Mixer.Info arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.Clip>(LocalBridgeClazz, "getClip", "(Ljavax/sound/sampled/Mixer$Info;)Ljavax/sound/sampled/Clip;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getLine(javax.sound.sampled.Line.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.Line.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.Line"/></returns>
        /// <exception cref="Javax.Sound.Sampled.LineUnavailableException"/>
        public static Javax.Sound.Sampled.Line GetLine(Javax.Sound.Sampled.Line.Info arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.Line>(LocalBridgeClazz, "getLine", "(Ljavax/sound/sampled/Line$Info;)Ljavax/sound/sampled/Line;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getSourceLineInfo(javax.sound.sampled.Line.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.Line.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.Line.Info"/></returns>
        public static Javax.Sound.Sampled.Line.Info[] GetSourceLineInfo(Javax.Sound.Sampled.Line.Info arg0)
        {
            return SExecuteWithSignatureArray<Javax.Sound.Sampled.Line.Info>(LocalBridgeClazz, "getSourceLineInfo", "(Ljavax/sound/sampled/Line$Info;)[Ljavax/sound/sampled/Line$Info;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetLineInfo(javax.sound.sampled.Line.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.Line.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.Line.Info"/></returns>
        public static Javax.Sound.Sampled.Line.Info[] GetTargetLineInfo(Javax.Sound.Sampled.Line.Info arg0)
        {
            return SExecuteWithSignatureArray<Javax.Sound.Sampled.Line.Info>(LocalBridgeClazz, "getTargetLineInfo", "(Ljavax/sound/sampled/Line$Info;)[Ljavax/sound/sampled/Line$Info;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getMixer(javax.sound.sampled.Mixer.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.Mixer.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.Mixer"/></returns>
        public static Javax.Sound.Sampled.Mixer GetMixer(Javax.Sound.Sampled.Mixer.Info arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.Mixer>(LocalBridgeClazz, "getMixer", "(Ljavax/sound/sampled/Mixer$Info;)Ljavax/sound/sampled/Mixer;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getSourceDataLine(javax.sound.sampled.AudioFormat,javax.sound.sampled.Mixer.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.Mixer.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.SourceDataLine"/></returns>
        /// <exception cref="Javax.Sound.Sampled.LineUnavailableException"/>
        public static Javax.Sound.Sampled.SourceDataLine GetSourceDataLine(Javax.Sound.Sampled.AudioFormat arg0, Javax.Sound.Sampled.Mixer.Info arg1)
        {
            return SExecute<Javax.Sound.Sampled.SourceDataLine>(LocalBridgeClazz, "getSourceDataLine", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getSourceDataLine(javax.sound.sampled.AudioFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.SourceDataLine"/></returns>
        /// <exception cref="Javax.Sound.Sampled.LineUnavailableException"/>
        public static Javax.Sound.Sampled.SourceDataLine GetSourceDataLine(Javax.Sound.Sampled.AudioFormat arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.SourceDataLine>(LocalBridgeClazz, "getSourceDataLine", "(Ljavax/sound/sampled/AudioFormat;)Ljavax/sound/sampled/SourceDataLine;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetDataLine(javax.sound.sampled.AudioFormat,javax.sound.sampled.Mixer.Info)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <param name="arg1"><see cref="Javax.Sound.Sampled.Mixer.Info"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.TargetDataLine"/></returns>
        /// <exception cref="Javax.Sound.Sampled.LineUnavailableException"/>
        public static Javax.Sound.Sampled.TargetDataLine GetTargetDataLine(Javax.Sound.Sampled.AudioFormat arg0, Javax.Sound.Sampled.Mixer.Info arg1)
        {
            return SExecute<Javax.Sound.Sampled.TargetDataLine>(LocalBridgeClazz, "getTargetDataLine", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetDataLine(javax.sound.sampled.AudioFormat)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Sound.Sampled.AudioFormat"/></param>
        /// <returns><see cref="Javax.Sound.Sampled.TargetDataLine"/></returns>
        /// <exception cref="Javax.Sound.Sampled.LineUnavailableException"/>
        public static Javax.Sound.Sampled.TargetDataLine GetTargetDataLine(Javax.Sound.Sampled.AudioFormat arg0)
        {
            return SExecuteWithSignature<Javax.Sound.Sampled.TargetDataLine>(LocalBridgeClazz, "getTargetDataLine", "(Ljavax/sound/sampled/AudioFormat;)Ljavax/sound/sampled/TargetDataLine;", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}