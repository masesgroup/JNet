/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.0.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Lang.Model.Element
{
    #region ElementKind
    public partial class ElementKind
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#ANNOTATION_TYPE"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind ANNOTATION_TYPE { get { if (!_ANNOTATION_TYPEReady) { _ANNOTATION_TYPEContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "ANNOTATION_TYPE"); _ANNOTATION_TYPEReady = true; } return _ANNOTATION_TYPEContent; } }
        private static Javax.Lang.Model.Element.ElementKind _ANNOTATION_TYPEContent = default;
        private static bool _ANNOTATION_TYPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#CLASS"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind CLASS { get { if (!_CLASSReady) { _CLASSContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "CLASS"); _CLASSReady = true; } return _CLASSContent; } }
        private static Javax.Lang.Model.Element.ElementKind _CLASSContent = default;
        private static bool _CLASSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#CONSTRUCTOR"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind CONSTRUCTOR { get { if (!_CONSTRUCTORReady) { _CONSTRUCTORContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "CONSTRUCTOR"); _CONSTRUCTORReady = true; } return _CONSTRUCTORContent; } }
        private static Javax.Lang.Model.Element.ElementKind _CONSTRUCTORContent = default;
        private static bool _CONSTRUCTORReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#ENUM"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind ENUM { get { if (!_ENUMReady) { _ENUMContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "ENUM"); _ENUMReady = true; } return _ENUMContent; } }
        private static Javax.Lang.Model.Element.ElementKind _ENUMContent = default;
        private static bool _ENUMReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#ENUM_CONSTANT"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind ENUM_CONSTANT { get { if (!_ENUM_CONSTANTReady) { _ENUM_CONSTANTContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "ENUM_CONSTANT"); _ENUM_CONSTANTReady = true; } return _ENUM_CONSTANTContent; } }
        private static Javax.Lang.Model.Element.ElementKind _ENUM_CONSTANTContent = default;
        private static bool _ENUM_CONSTANTReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#EXCEPTION_PARAMETER"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind EXCEPTION_PARAMETER { get { if (!_EXCEPTION_PARAMETERReady) { _EXCEPTION_PARAMETERContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "EXCEPTION_PARAMETER"); _EXCEPTION_PARAMETERReady = true; } return _EXCEPTION_PARAMETERContent; } }
        private static Javax.Lang.Model.Element.ElementKind _EXCEPTION_PARAMETERContent = default;
        private static bool _EXCEPTION_PARAMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#FIELD"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind FIELD { get { if (!_FIELDReady) { _FIELDContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "FIELD"); _FIELDReady = true; } return _FIELDContent; } }
        private static Javax.Lang.Model.Element.ElementKind _FIELDContent = default;
        private static bool _FIELDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#INSTANCE_INIT"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind INSTANCE_INIT { get { if (!_INSTANCE_INITReady) { _INSTANCE_INITContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "INSTANCE_INIT"); _INSTANCE_INITReady = true; } return _INSTANCE_INITContent; } }
        private static Javax.Lang.Model.Element.ElementKind _INSTANCE_INITContent = default;
        private static bool _INSTANCE_INITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#INTERFACE"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind INTERFACE { get { if (!_INTERFACEReady) { _INTERFACEContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "INTERFACE"); _INTERFACEReady = true; } return _INTERFACEContent; } }
        private static Javax.Lang.Model.Element.ElementKind _INTERFACEContent = default;
        private static bool _INTERFACEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#LOCAL_VARIABLE"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind LOCAL_VARIABLE { get { if (!_LOCAL_VARIABLEReady) { _LOCAL_VARIABLEContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "LOCAL_VARIABLE"); _LOCAL_VARIABLEReady = true; } return _LOCAL_VARIABLEContent; } }
        private static Javax.Lang.Model.Element.ElementKind _LOCAL_VARIABLEContent = default;
        private static bool _LOCAL_VARIABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#METHOD"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind METHOD { get { if (!_METHODReady) { _METHODContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "METHOD"); _METHODReady = true; } return _METHODContent; } }
        private static Javax.Lang.Model.Element.ElementKind _METHODContent = default;
        private static bool _METHODReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#MODULE"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind MODULE { get { if (!_MODULEReady) { _MODULEContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "MODULE"); _MODULEReady = true; } return _MODULEContent; } }
        private static Javax.Lang.Model.Element.ElementKind _MODULEContent = default;
        private static bool _MODULEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#OTHER"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind OTHER { get { if (!_OTHERReady) { _OTHERContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "OTHER"); _OTHERReady = true; } return _OTHERContent; } }
        private static Javax.Lang.Model.Element.ElementKind _OTHERContent = default;
        private static bool _OTHERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#PACKAGE"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind PACKAGE { get { if (!_PACKAGEReady) { _PACKAGEContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "PACKAGE"); _PACKAGEReady = true; } return _PACKAGEContent; } }
        private static Javax.Lang.Model.Element.ElementKind _PACKAGEContent = default;
        private static bool _PACKAGEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#PARAMETER"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind PARAMETER { get { if (!_PARAMETERReady) { _PARAMETERContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "PARAMETER"); _PARAMETERReady = true; } return _PARAMETERContent; } }
        private static Javax.Lang.Model.Element.ElementKind _PARAMETERContent = default;
        private static bool _PARAMETERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#RESOURCE_VARIABLE"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind RESOURCE_VARIABLE { get { if (!_RESOURCE_VARIABLEReady) { _RESOURCE_VARIABLEContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "RESOURCE_VARIABLE"); _RESOURCE_VARIABLEReady = true; } return _RESOURCE_VARIABLEContent; } }
        private static Javax.Lang.Model.Element.ElementKind _RESOURCE_VARIABLEContent = default;
        private static bool _RESOURCE_VARIABLEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#STATIC_INIT"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind STATIC_INIT { get { if (!_STATIC_INITReady) { _STATIC_INITContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "STATIC_INIT"); _STATIC_INITReady = true; } return _STATIC_INITContent; } }
        private static Javax.Lang.Model.Element.ElementKind _STATIC_INITContent = default;
        private static bool _STATIC_INITReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#TYPE_PARAMETER"/>
        /// </summary>
        public static Javax.Lang.Model.Element.ElementKind TYPE_PARAMETER { get { if (!_TYPE_PARAMETERReady) { _TYPE_PARAMETERContent = SGetField<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "TYPE_PARAMETER"); _TYPE_PARAMETERReady = true; } return _TYPE_PARAMETERContent; } }
        private static Javax.Lang.Model.Element.ElementKind _TYPE_PARAMETERContent = default;
        private static bool _TYPE_PARAMETERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Javax.Lang.Model.Element.ElementKind"/></returns>
        public static Javax.Lang.Model.Element.ElementKind ValueOf(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Ljavax/lang/model/element/ElementKind;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#values()"/>
        /// </summary>
        /// <returns><see cref="Javax.Lang.Model.Element.ElementKind"/></returns>
        public static Javax.Lang.Model.Element.ElementKind[] Values()
        {
            return SExecuteWithSignatureArray<Javax.Lang.Model.Element.ElementKind>(LocalBridgeClazz, "values", "()[Ljavax/lang/model/element/ElementKind;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#isClass()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsClass()
        {
            return IExecuteWithSignature<bool>("isClass", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#isField()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsField()
        {
            return IExecuteWithSignature<bool>("isField", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/ElementKind.html#isInterface()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsInterface()
        {
            return IExecuteWithSignature<bool>("isInterface", "()Z");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}