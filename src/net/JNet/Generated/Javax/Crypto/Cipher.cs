/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.2.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Crypto
{
    #region Cipher
    public partial class Cipher
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#DECRYPT_MODE
        /// </summary>
        public static int DECRYPT_MODE => Clazz.GetField<int>("DECRYPT_MODE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#ENCRYPT_MODE
        /// </summary>
        public static int ENCRYPT_MODE => Clazz.GetField<int>("ENCRYPT_MODE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#PRIVATE_KEY
        /// </summary>
        public static int PRIVATE_KEY => Clazz.GetField<int>("PRIVATE_KEY");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#PUBLIC_KEY
        /// </summary>
        public static int PUBLIC_KEY => Clazz.GetField<int>("PUBLIC_KEY");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#SECRET_KEY
        /// </summary>
        public static int SECRET_KEY => Clazz.GetField<int>("SECRET_KEY");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#UNWRAP_MODE
        /// </summary>
        public static int UNWRAP_MODE => Clazz.GetField<int>("UNWRAP_MODE");
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#WRAP_MODE
        /// </summary>
        public static int WRAP_MODE => Clazz.GetField<int>("WRAP_MODE");
        
        #endregion

        #region Static methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getMaxAllowedKeyLength(java.lang.String) throws java.security.NoSuchAlgorithmException
        /// </summary>
        public static int GetMaxAllowedKeyLength(string arg0)
        {
            return SExecute<int>("getMaxAllowedKeyLength", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getMaxAllowedParameterSpec(java.lang.String) throws java.security.NoSuchAlgorithmException
        /// </summary>
        public static Java.Security.Spec.AlgorithmParameterSpec GetMaxAllowedParameterSpec(string arg0)
        {
            return SExecute<Java.Security.Spec.AlgorithmParameterSpec>("getMaxAllowedParameterSpec", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getInstance(java.lang.String,java.lang.String) throws java.security.NoSuchAlgorithmException,java.security.NoSuchProviderException,javax.crypto.NoSuchPaddingException
        /// </summary>
        public static Javax.Crypto.Cipher GetInstance(string arg0, string arg1)
        {
            return SExecute<Javax.Crypto.Cipher>("getInstance", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException,javax.crypto.NoSuchPaddingException
        /// </summary>
        public static Javax.Crypto.Cipher GetInstance(string arg0)
        {
            return SExecute<Javax.Crypto.Cipher>("getInstance", arg0);
        }
        
        #endregion

        #region Instance methods
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getAlgorithm() 
        /// </summary>
        public string Algorithm
        {
            get { return IExecute<string>("getAlgorithm"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getBlockSize() 
        /// </summary>
        public int BlockSize
        {
            get { return IExecute<int>("getBlockSize"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getExemptionMechanism() 
        /// </summary>
        public Javax.Crypto.ExemptionMechanism ExemptionMechanism
        {
            get { return IExecute<Javax.Crypto.ExemptionMechanism>("getExemptionMechanism"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getIV() 
        /// </summary>
        public byte[] IV
        {
            get { return IExecuteArray<byte>("getIV"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getParameters() 
        /// </summary>
        public Java.Security.AlgorithmParameters Parameters
        {
            get { return IExecute<Java.Security.AlgorithmParameters>("getParameters"); }
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal() throws javax.crypto.IllegalBlockSizeException,javax.crypto.BadPaddingException
        /// </summary>
        public byte[] DoFinal()
        {
            return IExecuteArray<byte>("doFinal");
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal(byte[],int,int) throws javax.crypto.IllegalBlockSizeException,javax.crypto.BadPaddingException
        /// </summary>
        public byte[] DoFinal(byte[] arg0, int arg1, int arg2)
        {
            return IExecuteArray<byte>("doFinal", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal(byte[]) throws javax.crypto.IllegalBlockSizeException,javax.crypto.BadPaddingException
        /// </summary>
        public byte[] DoFinal(byte[] arg0)
        {
            return IExecuteArray<byte>("doFinal", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#update(byte[],int,int)
        /// </summary>
        public byte[] Update(byte[] arg0, int arg1, int arg2)
        {
            return IExecuteArray<byte>("update", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#update(byte[])
        /// </summary>
        public byte[] Update(byte[] arg0)
        {
            return IExecuteArray<byte>("update", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#wrap(java.security.Key) throws javax.crypto.IllegalBlockSizeException,java.security.InvalidKeyException
        /// </summary>
        public byte[] Wrap(Java.Security.Key arg0)
        {
            return IExecuteArray<byte>("wrap", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal(byte[],int,int,byte[],int) throws javax.crypto.ShortBufferException,javax.crypto.IllegalBlockSizeException,javax.crypto.BadPaddingException
        /// </summary>
        public int DoFinal(byte[] arg0, int arg1, int arg2, byte[] arg3, int arg4)
        {
            return IExecute<int>("doFinal", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal(byte[],int,int,byte[]) throws javax.crypto.ShortBufferException,javax.crypto.IllegalBlockSizeException,javax.crypto.BadPaddingException
        /// </summary>
        public int DoFinal(byte[] arg0, int arg1, int arg2, byte[] arg3)
        {
            return IExecute<int>("doFinal", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal(byte[],int) throws javax.crypto.IllegalBlockSizeException,javax.crypto.ShortBufferException,javax.crypto.BadPaddingException
        /// </summary>
        public int DoFinal(byte[] arg0, int arg1)
        {
            return IExecute<int>("doFinal", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer) throws javax.crypto.ShortBufferException,javax.crypto.IllegalBlockSizeException,javax.crypto.BadPaddingException
        /// </summary>
        public int DoFinal(Java.Nio.ByteBuffer arg0, Java.Nio.ByteBuffer arg1)
        {
            return IExecute<int>("doFinal", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#getOutputSize(int)
        /// </summary>
        public int GetOutputSize(int arg0)
        {
            return IExecute<int>("getOutputSize", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#update(byte[],int,int,byte[],int) throws javax.crypto.ShortBufferException
        /// </summary>
        public int Update(byte[] arg0, int arg1, int arg2, byte[] arg3, int arg4)
        {
            return IExecute<int>("update", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#update(byte[],int,int,byte[]) throws javax.crypto.ShortBufferException
        /// </summary>
        public int Update(byte[] arg0, int arg1, int arg2, byte[] arg3)
        {
            return IExecute<int>("update", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#update(java.nio.ByteBuffer,java.nio.ByteBuffer) throws javax.crypto.ShortBufferException
        /// </summary>
        public int Update(Java.Nio.ByteBuffer arg0, Java.Nio.ByteBuffer arg1)
        {
            return IExecute<int>("update", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#unwrap(byte[],java.lang.String,int) throws java.security.InvalidKeyException,java.security.NoSuchAlgorithmException
        /// </summary>
        public Java.Security.Key Unwrap(byte[] arg0, string arg1, int arg2)
        {
            return IExecute<Java.Security.Key>("unwrap", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.cert.Certificate,java.security.SecureRandom) throws java.security.InvalidKeyException
        /// </summary>
        public void Init(int arg0, Java.Security.Cert.Certificate arg1, Java.Security.SecureRandom arg2)
        {
            IExecute("init", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.cert.Certificate) throws java.security.InvalidKeyException
        /// </summary>
        public void Init(int arg0, Java.Security.Cert.Certificate arg1)
        {
            IExecute("init", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom) throws java.security.InvalidKeyException,java.security.InvalidAlgorithmParameterException
        /// </summary>
        public void Init(int arg0, Java.Security.Key arg1, Java.Security.AlgorithmParameters arg2, Java.Security.SecureRandom arg3)
        {
            IExecute("init", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.Key,java.security.AlgorithmParameters) throws java.security.InvalidKeyException,java.security.InvalidAlgorithmParameterException
        /// </summary>
        public void Init(int arg0, Java.Security.Key arg1, Java.Security.AlgorithmParameters arg2)
        {
            IExecute("init", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.Key,java.security.SecureRandom) throws java.security.InvalidKeyException
        /// </summary>
        public void Init(int arg0, Java.Security.Key arg1, Java.Security.SecureRandom arg2)
        {
            IExecute("init", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) throws java.security.InvalidKeyException,java.security.InvalidAlgorithmParameterException
        /// </summary>
        public void Init(int arg0, Java.Security.Key arg1, Java.Security.Spec.AlgorithmParameterSpec arg2, Java.Security.SecureRandom arg3)
        {
            IExecute("init", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException,java.security.InvalidAlgorithmParameterException
        /// </summary>
        public void Init(int arg0, Java.Security.Key arg1, Java.Security.Spec.AlgorithmParameterSpec arg2)
        {
            IExecute("init", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#init(int,java.security.Key) throws java.security.InvalidKeyException
        /// </summary>
        public void Init(int arg0, Java.Security.Key arg1)
        {
            IExecute("init", arg0, arg1);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#updateAAD(byte[],int,int)
        /// </summary>
        public void UpdateAAD(byte[] arg0, int arg1, int arg2)
        {
            IExecute("updateAAD", arg0, arg1, arg2);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#updateAAD(byte[])
        /// </summary>
        public void UpdateAAD(byte[] arg0)
        {
            IExecute("updateAAD", arg0);
        }
        /// <summary>
        /// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Cipher.html#updateAAD(java.nio.ByteBuffer)
        /// </summary>
        public void UpdateAAD(Java.Nio.ByteBuffer arg0)
        {
            IExecute("updateAAD", arg0);
        }
        
        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}