/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.2.5.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Print.Attribute.Standard
{
    #region MediaSizeName
    public partial class MediaSizeName
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#A"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName A { get { if (!_AReady) { _AContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "A"); _AReady = true; } return _AContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _AContent = default;
        private static bool _AReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#B"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName B { get { if (!_BReady) { _BContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "B"); _BReady = true; } return _BContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _BContent = default;
        private static bool _BReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#C"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName C { get { if (!_CReady) { _CContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "C"); _CReady = true; } return _CContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _CContent = default;
        private static bool _CReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#D"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName D { get { if (!_DReady) { _DContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "D"); _DReady = true; } return _DContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _DContent = default;
        private static bool _DReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#E"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName E { get { if (!_EReady) { _EContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "E"); _EReady = true; } return _EContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _EContent = default;
        private static bool _EReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#EXECUTIVE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName EXECUTIVE { get { if (!_EXECUTIVEReady) { _EXECUTIVEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "EXECUTIVE"); _EXECUTIVEReady = true; } return _EXECUTIVEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _EXECUTIVEContent = default;
        private static bool _EXECUTIVEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#FOLIO"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName FOLIO { get { if (!_FOLIOReady) { _FOLIOContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "FOLIO"); _FOLIOReady = true; } return _FOLIOContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _FOLIOContent = default;
        private static bool _FOLIOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#INVOICE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName INVOICE { get { if (!_INVOICEReady) { _INVOICEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "INVOICE"); _INVOICEReady = true; } return _INVOICEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _INVOICEContent = default;
        private static bool _INVOICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A0"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A0 { get { if (!_ISO_A0Ready) { _ISO_A0Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A0"); _ISO_A0Ready = true; } return _ISO_A0Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A0Content = default;
        private static bool _ISO_A0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A1"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A1 { get { if (!_ISO_A1Ready) { _ISO_A1Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A1"); _ISO_A1Ready = true; } return _ISO_A1Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A1Content = default;
        private static bool _ISO_A1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A10"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A10 { get { if (!_ISO_A10Ready) { _ISO_A10Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A10"); _ISO_A10Ready = true; } return _ISO_A10Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A10Content = default;
        private static bool _ISO_A10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A2"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A2 { get { if (!_ISO_A2Ready) { _ISO_A2Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A2"); _ISO_A2Ready = true; } return _ISO_A2Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A2Content = default;
        private static bool _ISO_A2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A3"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A3 { get { if (!_ISO_A3Ready) { _ISO_A3Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A3"); _ISO_A3Ready = true; } return _ISO_A3Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A3Content = default;
        private static bool _ISO_A3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A4"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A4 { get { if (!_ISO_A4Ready) { _ISO_A4Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A4"); _ISO_A4Ready = true; } return _ISO_A4Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A4Content = default;
        private static bool _ISO_A4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A5"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A5 { get { if (!_ISO_A5Ready) { _ISO_A5Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A5"); _ISO_A5Ready = true; } return _ISO_A5Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A5Content = default;
        private static bool _ISO_A5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A6"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A6 { get { if (!_ISO_A6Ready) { _ISO_A6Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A6"); _ISO_A6Ready = true; } return _ISO_A6Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A6Content = default;
        private static bool _ISO_A6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A7"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A7 { get { if (!_ISO_A7Ready) { _ISO_A7Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A7"); _ISO_A7Ready = true; } return _ISO_A7Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A7Content = default;
        private static bool _ISO_A7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A8"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A8 { get { if (!_ISO_A8Ready) { _ISO_A8Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A8"); _ISO_A8Ready = true; } return _ISO_A8Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A8Content = default;
        private static bool _ISO_A8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_A9"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_A9 { get { if (!_ISO_A9Ready) { _ISO_A9Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_A9"); _ISO_A9Ready = true; } return _ISO_A9Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_A9Content = default;
        private static bool _ISO_A9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B0"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B0 { get { if (!_ISO_B0Ready) { _ISO_B0Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B0"); _ISO_B0Ready = true; } return _ISO_B0Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B0Content = default;
        private static bool _ISO_B0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B1"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B1 { get { if (!_ISO_B1Ready) { _ISO_B1Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B1"); _ISO_B1Ready = true; } return _ISO_B1Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B1Content = default;
        private static bool _ISO_B1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B10"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B10 { get { if (!_ISO_B10Ready) { _ISO_B10Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B10"); _ISO_B10Ready = true; } return _ISO_B10Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B10Content = default;
        private static bool _ISO_B10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B2"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B2 { get { if (!_ISO_B2Ready) { _ISO_B2Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B2"); _ISO_B2Ready = true; } return _ISO_B2Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B2Content = default;
        private static bool _ISO_B2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B3"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B3 { get { if (!_ISO_B3Ready) { _ISO_B3Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B3"); _ISO_B3Ready = true; } return _ISO_B3Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B3Content = default;
        private static bool _ISO_B3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B4"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B4 { get { if (!_ISO_B4Ready) { _ISO_B4Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B4"); _ISO_B4Ready = true; } return _ISO_B4Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B4Content = default;
        private static bool _ISO_B4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B5"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B5 { get { if (!_ISO_B5Ready) { _ISO_B5Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B5"); _ISO_B5Ready = true; } return _ISO_B5Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B5Content = default;
        private static bool _ISO_B5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B6"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B6 { get { if (!_ISO_B6Ready) { _ISO_B6Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B6"); _ISO_B6Ready = true; } return _ISO_B6Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B6Content = default;
        private static bool _ISO_B6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B7"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B7 { get { if (!_ISO_B7Ready) { _ISO_B7Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B7"); _ISO_B7Ready = true; } return _ISO_B7Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B7Content = default;
        private static bool _ISO_B7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B8"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B8 { get { if (!_ISO_B8Ready) { _ISO_B8Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B8"); _ISO_B8Ready = true; } return _ISO_B8Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B8Content = default;
        private static bool _ISO_B8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_B9"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_B9 { get { if (!_ISO_B9Ready) { _ISO_B9Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_B9"); _ISO_B9Ready = true; } return _ISO_B9Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_B9Content = default;
        private static bool _ISO_B9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C0"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C0 { get { if (!_ISO_C0Ready) { _ISO_C0Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C0"); _ISO_C0Ready = true; } return _ISO_C0Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C0Content = default;
        private static bool _ISO_C0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C1"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C1 { get { if (!_ISO_C1Ready) { _ISO_C1Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C1"); _ISO_C1Ready = true; } return _ISO_C1Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C1Content = default;
        private static bool _ISO_C1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C2"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C2 { get { if (!_ISO_C2Ready) { _ISO_C2Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C2"); _ISO_C2Ready = true; } return _ISO_C2Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C2Content = default;
        private static bool _ISO_C2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C3"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C3 { get { if (!_ISO_C3Ready) { _ISO_C3Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C3"); _ISO_C3Ready = true; } return _ISO_C3Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C3Content = default;
        private static bool _ISO_C3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C4"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C4 { get { if (!_ISO_C4Ready) { _ISO_C4Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C4"); _ISO_C4Ready = true; } return _ISO_C4Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C4Content = default;
        private static bool _ISO_C4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C5"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C5 { get { if (!_ISO_C5Ready) { _ISO_C5Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C5"); _ISO_C5Ready = true; } return _ISO_C5Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C5Content = default;
        private static bool _ISO_C5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_C6"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_C6 { get { if (!_ISO_C6Ready) { _ISO_C6Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_C6"); _ISO_C6Ready = true; } return _ISO_C6Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_C6Content = default;
        private static bool _ISO_C6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ISO_DESIGNATED_LONG"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ISO_DESIGNATED_LONG { get { if (!_ISO_DESIGNATED_LONGReady) { _ISO_DESIGNATED_LONGContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ISO_DESIGNATED_LONG"); _ISO_DESIGNATED_LONGReady = true; } return _ISO_DESIGNATED_LONGContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ISO_DESIGNATED_LONGContent = default;
        private static bool _ISO_DESIGNATED_LONGReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#ITALY_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName ITALY_ENVELOPE { get { if (!_ITALY_ENVELOPEReady) { _ITALY_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "ITALY_ENVELOPE"); _ITALY_ENVELOPEReady = true; } return _ITALY_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _ITALY_ENVELOPEContent = default;
        private static bool _ITALY_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JAPANESE_DOUBLE_POSTCARD"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JAPANESE_DOUBLE_POSTCARD { get { if (!_JAPANESE_DOUBLE_POSTCARDReady) { _JAPANESE_DOUBLE_POSTCARDContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JAPANESE_DOUBLE_POSTCARD"); _JAPANESE_DOUBLE_POSTCARDReady = true; } return _JAPANESE_DOUBLE_POSTCARDContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JAPANESE_DOUBLE_POSTCARDContent = default;
        private static bool _JAPANESE_DOUBLE_POSTCARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JAPANESE_POSTCARD"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JAPANESE_POSTCARD { get { if (!_JAPANESE_POSTCARDReady) { _JAPANESE_POSTCARDContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JAPANESE_POSTCARD"); _JAPANESE_POSTCARDReady = true; } return _JAPANESE_POSTCARDContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JAPANESE_POSTCARDContent = default;
        private static bool _JAPANESE_POSTCARDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B0"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B0 { get { if (!_JIS_B0Ready) { _JIS_B0Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B0"); _JIS_B0Ready = true; } return _JIS_B0Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B0Content = default;
        private static bool _JIS_B0Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B1"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B1 { get { if (!_JIS_B1Ready) { _JIS_B1Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B1"); _JIS_B1Ready = true; } return _JIS_B1Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B1Content = default;
        private static bool _JIS_B1Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B10"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B10 { get { if (!_JIS_B10Ready) { _JIS_B10Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B10"); _JIS_B10Ready = true; } return _JIS_B10Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B10Content = default;
        private static bool _JIS_B10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B2"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B2 { get { if (!_JIS_B2Ready) { _JIS_B2Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B2"); _JIS_B2Ready = true; } return _JIS_B2Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B2Content = default;
        private static bool _JIS_B2Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B3"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B3 { get { if (!_JIS_B3Ready) { _JIS_B3Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B3"); _JIS_B3Ready = true; } return _JIS_B3Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B3Content = default;
        private static bool _JIS_B3Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B4"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B4 { get { if (!_JIS_B4Ready) { _JIS_B4Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B4"); _JIS_B4Ready = true; } return _JIS_B4Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B4Content = default;
        private static bool _JIS_B4Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B5"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B5 { get { if (!_JIS_B5Ready) { _JIS_B5Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B5"); _JIS_B5Ready = true; } return _JIS_B5Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B5Content = default;
        private static bool _JIS_B5Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B6"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B6 { get { if (!_JIS_B6Ready) { _JIS_B6Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B6"); _JIS_B6Ready = true; } return _JIS_B6Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B6Content = default;
        private static bool _JIS_B6Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B7"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B7 { get { if (!_JIS_B7Ready) { _JIS_B7Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B7"); _JIS_B7Ready = true; } return _JIS_B7Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B7Content = default;
        private static bool _JIS_B7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B8"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B8 { get { if (!_JIS_B8Ready) { _JIS_B8Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B8"); _JIS_B8Ready = true; } return _JIS_B8Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B8Content = default;
        private static bool _JIS_B8Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#JIS_B9"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName JIS_B9 { get { if (!_JIS_B9Ready) { _JIS_B9Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "JIS_B9"); _JIS_B9Ready = true; } return _JIS_B9Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _JIS_B9Content = default;
        private static bool _JIS_B9Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#LEDGER"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName LEDGER { get { if (!_LEDGERReady) { _LEDGERContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "LEDGER"); _LEDGERReady = true; } return _LEDGERContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _LEDGERContent = default;
        private static bool _LEDGERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#MONARCH_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName MONARCH_ENVELOPE { get { if (!_MONARCH_ENVELOPEReady) { _MONARCH_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "MONARCH_ENVELOPE"); _MONARCH_ENVELOPEReady = true; } return _MONARCH_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _MONARCH_ENVELOPEContent = default;
        private static bool _MONARCH_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_10X13_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_10X13_ENVELOPE { get { if (!_NA_10X13_ENVELOPEReady) { _NA_10X13_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_10X13_ENVELOPE"); _NA_10X13_ENVELOPEReady = true; } return _NA_10X13_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_10X13_ENVELOPEContent = default;
        private static bool _NA_10X13_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_10X14_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_10X14_ENVELOPE { get { if (!_NA_10X14_ENVELOPEReady) { _NA_10X14_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_10X14_ENVELOPE"); _NA_10X14_ENVELOPEReady = true; } return _NA_10X14_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_10X14_ENVELOPEContent = default;
        private static bool _NA_10X14_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_10X15_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_10X15_ENVELOPE { get { if (!_NA_10X15_ENVELOPEReady) { _NA_10X15_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_10X15_ENVELOPE"); _NA_10X15_ENVELOPEReady = true; } return _NA_10X15_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_10X15_ENVELOPEContent = default;
        private static bool _NA_10X15_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_5X7"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_5X7 { get { if (!_NA_5X7Ready) { _NA_5X7Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_5X7"); _NA_5X7Ready = true; } return _NA_5X7Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_5X7Content = default;
        private static bool _NA_5X7Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_6X9_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_6X9_ENVELOPE { get { if (!_NA_6X9_ENVELOPEReady) { _NA_6X9_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_6X9_ENVELOPE"); _NA_6X9_ENVELOPEReady = true; } return _NA_6X9_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_6X9_ENVELOPEContent = default;
        private static bool _NA_6X9_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_7X9_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_7X9_ENVELOPE { get { if (!_NA_7X9_ENVELOPEReady) { _NA_7X9_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_7X9_ENVELOPE"); _NA_7X9_ENVELOPEReady = true; } return _NA_7X9_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_7X9_ENVELOPEContent = default;
        private static bool _NA_7X9_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_8X10"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_8X10 { get { if (!_NA_8X10Ready) { _NA_8X10Content = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_8X10"); _NA_8X10Ready = true; } return _NA_8X10Content; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_8X10Content = default;
        private static bool _NA_8X10Ready = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_9X11_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_9X11_ENVELOPE { get { if (!_NA_9X11_ENVELOPEReady) { _NA_9X11_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_9X11_ENVELOPE"); _NA_9X11_ENVELOPEReady = true; } return _NA_9X11_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_9X11_ENVELOPEContent = default;
        private static bool _NA_9X11_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_9X12_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_9X12_ENVELOPE { get { if (!_NA_9X12_ENVELOPEReady) { _NA_9X12_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_9X12_ENVELOPE"); _NA_9X12_ENVELOPEReady = true; } return _NA_9X12_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_9X12_ENVELOPEContent = default;
        private static bool _NA_9X12_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_LEGAL"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_LEGAL { get { if (!_NA_LEGALReady) { _NA_LEGALContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_LEGAL"); _NA_LEGALReady = true; } return _NA_LEGALContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_LEGALContent = default;
        private static bool _NA_LEGALReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_LETTER"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_LETTER { get { if (!_NA_LETTERReady) { _NA_LETTERContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_LETTER"); _NA_LETTERReady = true; } return _NA_LETTERContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_LETTERContent = default;
        private static bool _NA_LETTERReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_NUMBER_10_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_NUMBER_10_ENVELOPE { get { if (!_NA_NUMBER_10_ENVELOPEReady) { _NA_NUMBER_10_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_NUMBER_10_ENVELOPE"); _NA_NUMBER_10_ENVELOPEReady = true; } return _NA_NUMBER_10_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_NUMBER_10_ENVELOPEContent = default;
        private static bool _NA_NUMBER_10_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_NUMBER_11_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_NUMBER_11_ENVELOPE { get { if (!_NA_NUMBER_11_ENVELOPEReady) { _NA_NUMBER_11_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_NUMBER_11_ENVELOPE"); _NA_NUMBER_11_ENVELOPEReady = true; } return _NA_NUMBER_11_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_NUMBER_11_ENVELOPEContent = default;
        private static bool _NA_NUMBER_11_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_NUMBER_12_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_NUMBER_12_ENVELOPE { get { if (!_NA_NUMBER_12_ENVELOPEReady) { _NA_NUMBER_12_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_NUMBER_12_ENVELOPE"); _NA_NUMBER_12_ENVELOPEReady = true; } return _NA_NUMBER_12_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_NUMBER_12_ENVELOPEContent = default;
        private static bool _NA_NUMBER_12_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_NUMBER_14_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_NUMBER_14_ENVELOPE { get { if (!_NA_NUMBER_14_ENVELOPEReady) { _NA_NUMBER_14_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_NUMBER_14_ENVELOPE"); _NA_NUMBER_14_ENVELOPEReady = true; } return _NA_NUMBER_14_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_NUMBER_14_ENVELOPEContent = default;
        private static bool _NA_NUMBER_14_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#NA_NUMBER_9_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName NA_NUMBER_9_ENVELOPE { get { if (!_NA_NUMBER_9_ENVELOPEReady) { _NA_NUMBER_9_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "NA_NUMBER_9_ENVELOPE"); _NA_NUMBER_9_ENVELOPEReady = true; } return _NA_NUMBER_9_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _NA_NUMBER_9_ENVELOPEContent = default;
        private static bool _NA_NUMBER_9_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#PERSONAL_ENVELOPE"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName PERSONAL_ENVELOPE { get { if (!_PERSONAL_ENVELOPEReady) { _PERSONAL_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "PERSONAL_ENVELOPE"); _PERSONAL_ENVELOPEReady = true; } return _PERSONAL_ENVELOPEContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _PERSONAL_ENVELOPEContent = default;
        private static bool _PERSONAL_ENVELOPEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#QUARTO"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName QUARTO { get { if (!_QUARTOReady) { _QUARTOContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "QUARTO"); _QUARTOReady = true; } return _QUARTOContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _QUARTOContent = default;
        private static bool _QUARTOReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSizeName.html#TABLOID"/>
        /// </summary>
        public static Javax.Print.Attribute.Standard.MediaSizeName TABLOID { get { if (!_TABLOIDReady) { _TABLOIDContent = SGetField<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "TABLOID"); _TABLOIDReady = true; } return _TABLOIDContent; } }
        private static Javax.Print.Attribute.Standard.MediaSizeName _TABLOIDContent = default;
        private static bool _TABLOIDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}