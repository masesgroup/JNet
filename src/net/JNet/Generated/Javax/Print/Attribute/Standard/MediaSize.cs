/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.0.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Javax.Print.Attribute.Standard
{
    #region MediaSize
    public partial class MediaSize
    {
        #region Constructors
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#%3Cinit%3E(float,float,int,javax.print.attribute.standard.MediaSizeName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Javax.Print.Attribute.Standard.MediaSizeName"/></param>
        public MediaSize(float arg0, float arg1, int arg2, Javax.Print.Attribute.Standard.MediaSizeName arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#%3Cinit%3E(float,float,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public MediaSize(float arg0, float arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#%3Cinit%3E(int,int,int,javax.print.attribute.standard.MediaSizeName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Javax.Print.Attribute.Standard.MediaSizeName"/></param>
        public MediaSize(int arg0, int arg1, int arg2, Javax.Print.Attribute.Standard.MediaSizeName arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#%3Cinit%3E(int,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public MediaSize(int arg0, int arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Javax.Print.Attribute.Standard.MediaSize"/> to <see cref="Javax.Print.Attribute.Attribute"/>
        /// </summary>
        public static implicit operator Javax.Print.Attribute.Attribute(Javax.Print.Attribute.Standard.MediaSize t) => t.Cast<Javax.Print.Attribute.Attribute>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#getMediaSizeForName(javax.print.attribute.standard.MediaSizeName)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Print.Attribute.Standard.MediaSizeName"/></param>
        /// <returns><see cref="Javax.Print.Attribute.Standard.MediaSize"/></returns>
        public static Javax.Print.Attribute.Standard.MediaSize GetMediaSizeForName(Javax.Print.Attribute.Standard.MediaSizeName arg0)
        {
            return SExecuteWithSignature<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "getMediaSizeForName", "(Ljavax/print/attribute/standard/MediaSizeName;)Ljavax/print/attribute/standard/MediaSize;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#findMedia(float,float,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="float"/></param>
        /// <param name="arg1"><see cref="float"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Javax.Print.Attribute.Standard.MediaSizeName"/></returns>
        public static Javax.Print.Attribute.Standard.MediaSizeName FindMedia(float arg0, float arg1, int arg2)
        {
            return SExecute<Javax.Print.Attribute.Standard.MediaSizeName>(LocalBridgeClazz, "findMedia", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#getCategory()"/> 
        /// </summary>
        public Java.Lang.Class Category
        {
            get { return IExecuteWithSignature<Java.Lang.Class>("getCategory", "()Ljava/lang/Class;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#getMediaSizeName()"/> 
        /// </summary>
        public Javax.Print.Attribute.Standard.MediaSizeName MediaSizeName
        {
            get { return IExecuteWithSignature<Javax.Print.Attribute.Standard.MediaSizeName>("getMediaSizeName", "()Ljavax/print/attribute/standard/MediaSizeName;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.html#getName()"/> 
        /// </summary>
        public Java.Lang.String Name
        {
            get { return IExecuteWithSignature<Java.Lang.String>("getName", "()Ljava/lang/String;"); }
        }

        #endregion

        #region Nested classes
        #region Engineering
        public partial class Engineering
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Engineering.html#A"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A { get { if (!_AReady) { _AContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A"); _AReady = true; } return _AContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _AContent = default;
            private static bool _AReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Engineering.html#B"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B { get { if (!_BReady) { _BContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B"); _BReady = true; } return _BContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _BContent = default;
            private static bool _BReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Engineering.html#C"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize C { get { if (!_CReady) { _CContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "C"); _CReady = true; } return _CContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CContent = default;
            private static bool _CReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Engineering.html#D"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize D { get { if (!_DReady) { _DContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "D"); _DReady = true; } return _DContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _DContent = default;
            private static bool _DReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Engineering.html#E"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize E { get { if (!_EReady) { _EContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "E"); _EReady = true; } return _EContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _EContent = default;
            private static bool _EReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ISO
        public partial class ISO
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A0"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A0 { get { if (!_A0Ready) { _A0Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A0"); _A0Ready = true; } return _A0Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A0Content = default;
            private static bool _A0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A1"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A1 { get { if (!_A1Ready) { _A1Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A1"); _A1Ready = true; } return _A1Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A1Content = default;
            private static bool _A1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A10"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A10 { get { if (!_A10Ready) { _A10Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A10"); _A10Ready = true; } return _A10Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A10Content = default;
            private static bool _A10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A2"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A2 { get { if (!_A2Ready) { _A2Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A2"); _A2Ready = true; } return _A2Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A2Content = default;
            private static bool _A2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A3 { get { if (!_A3Ready) { _A3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A3"); _A3Ready = true; } return _A3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A3Content = default;
            private static bool _A3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A4 { get { if (!_A4Ready) { _A4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A4"); _A4Ready = true; } return _A4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A4Content = default;
            private static bool _A4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A5"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A5 { get { if (!_A5Ready) { _A5Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A5"); _A5Ready = true; } return _A5Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A5Content = default;
            private static bool _A5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A6"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A6 { get { if (!_A6Ready) { _A6Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A6"); _A6Ready = true; } return _A6Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A6Content = default;
            private static bool _A6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A7"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A7 { get { if (!_A7Ready) { _A7Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A7"); _A7Ready = true; } return _A7Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A7Content = default;
            private static bool _A7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A8"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A8 { get { if (!_A8Ready) { _A8Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A8"); _A8Ready = true; } return _A8Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A8Content = default;
            private static bool _A8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#A9"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize A9 { get { if (!_A9Ready) { _A9Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "A9"); _A9Ready = true; } return _A9Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _A9Content = default;
            private static bool _A9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B0"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B0 { get { if (!_B0Ready) { _B0Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B0"); _B0Ready = true; } return _B0Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B0Content = default;
            private static bool _B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B1"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B1 { get { if (!_B1Ready) { _B1Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B1"); _B1Ready = true; } return _B1Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B1Content = default;
            private static bool _B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B10"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B10 { get { if (!_B10Ready) { _B10Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B10"); _B10Ready = true; } return _B10Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B10Content = default;
            private static bool _B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B2"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B2 { get { if (!_B2Ready) { _B2Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B2"); _B2Ready = true; } return _B2Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B2Content = default;
            private static bool _B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B3 { get { if (!_B3Ready) { _B3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B3"); _B3Ready = true; } return _B3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B3Content = default;
            private static bool _B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B4 { get { if (!_B4Ready) { _B4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B4"); _B4Ready = true; } return _B4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B4Content = default;
            private static bool _B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B5"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B5 { get { if (!_B5Ready) { _B5Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B5"); _B5Ready = true; } return _B5Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B5Content = default;
            private static bool _B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B6"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B6 { get { if (!_B6Ready) { _B6Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B6"); _B6Ready = true; } return _B6Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B6Content = default;
            private static bool _B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B7"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B7 { get { if (!_B7Ready) { _B7Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B7"); _B7Ready = true; } return _B7Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B7Content = default;
            private static bool _B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B8"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B8 { get { if (!_B8Ready) { _B8Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B8"); _B8Ready = true; } return _B8Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B8Content = default;
            private static bool _B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#B9"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B9 { get { if (!_B9Ready) { _B9Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B9"); _B9Ready = true; } return _B9Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B9Content = default;
            private static bool _B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#C3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize C3 { get { if (!_C3Ready) { _C3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "C3"); _C3Ready = true; } return _C3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _C3Content = default;
            private static bool _C3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#C4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize C4 { get { if (!_C4Ready) { _C4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "C4"); _C4Ready = true; } return _C4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _C4Content = default;
            private static bool _C4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#C5"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize C5 { get { if (!_C5Ready) { _C5Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "C5"); _C5Ready = true; } return _C5Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _C5Content = default;
            private static bool _C5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#C6"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize C6 { get { if (!_C6Ready) { _C6Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "C6"); _C6Ready = true; } return _C6Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _C6Content = default;
            private static bool _C6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.ISO.html#DESIGNATED_LONG"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize DESIGNATED_LONG { get { if (!_DESIGNATED_LONGReady) { _DESIGNATED_LONGContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "DESIGNATED_LONG"); _DESIGNATED_LONGReady = true; } return _DESIGNATED_LONGContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _DESIGNATED_LONGContent = default;
            private static bool _DESIGNATED_LONGReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region JIS
        public partial class JIS
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B0"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B0 { get { if (!_B0Ready) { _B0Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B0"); _B0Ready = true; } return _B0Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B0Content = default;
            private static bool _B0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B1"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B1 { get { if (!_B1Ready) { _B1Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B1"); _B1Ready = true; } return _B1Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B1Content = default;
            private static bool _B1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B10"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B10 { get { if (!_B10Ready) { _B10Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B10"); _B10Ready = true; } return _B10Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B10Content = default;
            private static bool _B10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B2"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B2 { get { if (!_B2Ready) { _B2Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B2"); _B2Ready = true; } return _B2Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B2Content = default;
            private static bool _B2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B3 { get { if (!_B3Ready) { _B3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B3"); _B3Ready = true; } return _B3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B3Content = default;
            private static bool _B3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B4 { get { if (!_B4Ready) { _B4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B4"); _B4Ready = true; } return _B4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B4Content = default;
            private static bool _B4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B5"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B5 { get { if (!_B5Ready) { _B5Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B5"); _B5Ready = true; } return _B5Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B5Content = default;
            private static bool _B5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B6"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B6 { get { if (!_B6Ready) { _B6Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B6"); _B6Ready = true; } return _B6Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B6Content = default;
            private static bool _B6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B7"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B7 { get { if (!_B7Ready) { _B7Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B7"); _B7Ready = true; } return _B7Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B7Content = default;
            private static bool _B7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B8"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B8 { get { if (!_B8Ready) { _B8Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B8"); _B8Ready = true; } return _B8Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B8Content = default;
            private static bool _B8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#B9"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize B9 { get { if (!_B9Ready) { _B9Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "B9"); _B9Ready = true; } return _B9Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _B9Content = default;
            private static bool _B9Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#CHOU_1"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize CHOU_1 { get { if (!_CHOU_1Ready) { _CHOU_1Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "CHOU_1"); _CHOU_1Ready = true; } return _CHOU_1Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CHOU_1Content = default;
            private static bool _CHOU_1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#CHOU_2"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize CHOU_2 { get { if (!_CHOU_2Ready) { _CHOU_2Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "CHOU_2"); _CHOU_2Ready = true; } return _CHOU_2Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CHOU_2Content = default;
            private static bool _CHOU_2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#CHOU_3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize CHOU_3 { get { if (!_CHOU_3Ready) { _CHOU_3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "CHOU_3"); _CHOU_3Ready = true; } return _CHOU_3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CHOU_3Content = default;
            private static bool _CHOU_3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#CHOU_30"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize CHOU_30 { get { if (!_CHOU_30Ready) { _CHOU_30Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "CHOU_30"); _CHOU_30Ready = true; } return _CHOU_30Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CHOU_30Content = default;
            private static bool _CHOU_30Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#CHOU_4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize CHOU_4 { get { if (!_CHOU_4Ready) { _CHOU_4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "CHOU_4"); _CHOU_4Ready = true; } return _CHOU_4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CHOU_4Content = default;
            private static bool _CHOU_4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#CHOU_40"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize CHOU_40 { get { if (!_CHOU_40Ready) { _CHOU_40Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "CHOU_40"); _CHOU_40Ready = true; } return _CHOU_40Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _CHOU_40Content = default;
            private static bool _CHOU_40Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_0"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_0 { get { if (!_KAKU_0Ready) { _KAKU_0Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_0"); _KAKU_0Ready = true; } return _KAKU_0Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_0Content = default;
            private static bool _KAKU_0Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_1"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_1 { get { if (!_KAKU_1Ready) { _KAKU_1Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_1"); _KAKU_1Ready = true; } return _KAKU_1Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_1Content = default;
            private static bool _KAKU_1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_2"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_2 { get { if (!_KAKU_2Ready) { _KAKU_2Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_2"); _KAKU_2Ready = true; } return _KAKU_2Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_2Content = default;
            private static bool _KAKU_2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_20"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_20 { get { if (!_KAKU_20Ready) { _KAKU_20Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_20"); _KAKU_20Ready = true; } return _KAKU_20Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_20Content = default;
            private static bool _KAKU_20Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_3 { get { if (!_KAKU_3Ready) { _KAKU_3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_3"); _KAKU_3Ready = true; } return _KAKU_3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_3Content = default;
            private static bool _KAKU_3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_4 { get { if (!_KAKU_4Ready) { _KAKU_4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_4"); _KAKU_4Ready = true; } return _KAKU_4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_4Content = default;
            private static bool _KAKU_4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_5"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_5 { get { if (!_KAKU_5Ready) { _KAKU_5Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_5"); _KAKU_5Ready = true; } return _KAKU_5Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_5Content = default;
            private static bool _KAKU_5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_6"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_6 { get { if (!_KAKU_6Ready) { _KAKU_6Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_6"); _KAKU_6Ready = true; } return _KAKU_6Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_6Content = default;
            private static bool _KAKU_6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_7"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_7 { get { if (!_KAKU_7Ready) { _KAKU_7Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_7"); _KAKU_7Ready = true; } return _KAKU_7Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_7Content = default;
            private static bool _KAKU_7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_8"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_8 { get { if (!_KAKU_8Ready) { _KAKU_8Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_8"); _KAKU_8Ready = true; } return _KAKU_8Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_8Content = default;
            private static bool _KAKU_8Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#KAKU_A4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize KAKU_A4 { get { if (!_KAKU_A4Ready) { _KAKU_A4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "KAKU_A4"); _KAKU_A4Ready = true; } return _KAKU_A4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _KAKU_A4Content = default;
            private static bool _KAKU_A4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_1"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_1 { get { if (!_YOU_1Ready) { _YOU_1Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_1"); _YOU_1Ready = true; } return _YOU_1Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_1Content = default;
            private static bool _YOU_1Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_2"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_2 { get { if (!_YOU_2Ready) { _YOU_2Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_2"); _YOU_2Ready = true; } return _YOU_2Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_2Content = default;
            private static bool _YOU_2Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_3"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_3 { get { if (!_YOU_3Ready) { _YOU_3Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_3"); _YOU_3Ready = true; } return _YOU_3Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_3Content = default;
            private static bool _YOU_3Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_4"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_4 { get { if (!_YOU_4Ready) { _YOU_4Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_4"); _YOU_4Ready = true; } return _YOU_4Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_4Content = default;
            private static bool _YOU_4Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_5"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_5 { get { if (!_YOU_5Ready) { _YOU_5Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_5"); _YOU_5Ready = true; } return _YOU_5Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_5Content = default;
            private static bool _YOU_5Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_6"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_6 { get { if (!_YOU_6Ready) { _YOU_6Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_6"); _YOU_6Ready = true; } return _YOU_6Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_6Content = default;
            private static bool _YOU_6Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.JIS.html#YOU_7"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize YOU_7 { get { if (!_YOU_7Ready) { _YOU_7Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "YOU_7"); _YOU_7Ready = true; } return _YOU_7Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _YOU_7Content = default;
            private static bool _YOU_7Ready = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NA
        public partial class NA
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#LEGAL"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize LEGAL { get { if (!_LEGALReady) { _LEGALContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "LEGAL"); _LEGALReady = true; } return _LEGALContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _LEGALContent = default;
            private static bool _LEGALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#LETTER"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize LETTER { get { if (!_LETTERReady) { _LETTERContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "LETTER"); _LETTERReady = true; } return _LETTERContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _LETTERContent = default;
            private static bool _LETTERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_10x13_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_10x13_ENVELOPE { get { if (!_NA_10x13_ENVELOPEReady) { _NA_10x13_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_10x13_ENVELOPE"); _NA_10x13_ENVELOPEReady = true; } return _NA_10x13_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_10x13_ENVELOPEContent = default;
            private static bool _NA_10x13_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_10x14_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_10x14_ENVELOPE { get { if (!_NA_10x14_ENVELOPEReady) { _NA_10x14_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_10x14_ENVELOPE"); _NA_10x14_ENVELOPEReady = true; } return _NA_10x14_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_10x14_ENVELOPEContent = default;
            private static bool _NA_10x14_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_10X15_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_10X15_ENVELOPE { get { if (!_NA_10X15_ENVELOPEReady) { _NA_10X15_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_10X15_ENVELOPE"); _NA_10X15_ENVELOPEReady = true; } return _NA_10X15_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_10X15_ENVELOPEContent = default;
            private static bool _NA_10X15_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_5X7"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_5X7 { get { if (!_NA_5X7Ready) { _NA_5X7Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_5X7"); _NA_5X7Ready = true; } return _NA_5X7Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_5X7Content = default;
            private static bool _NA_5X7Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_6X9_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_6X9_ENVELOPE { get { if (!_NA_6X9_ENVELOPEReady) { _NA_6X9_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_6X9_ENVELOPE"); _NA_6X9_ENVELOPEReady = true; } return _NA_6X9_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_6X9_ENVELOPEContent = default;
            private static bool _NA_6X9_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_7X9_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_7X9_ENVELOPE { get { if (!_NA_7X9_ENVELOPEReady) { _NA_7X9_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_7X9_ENVELOPE"); _NA_7X9_ENVELOPEReady = true; } return _NA_7X9_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_7X9_ENVELOPEContent = default;
            private static bool _NA_7X9_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_8X10"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_8X10 { get { if (!_NA_8X10Ready) { _NA_8X10Content = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_8X10"); _NA_8X10Ready = true; } return _NA_8X10Content; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_8X10Content = default;
            private static bool _NA_8X10Ready = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_9x11_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_9x11_ENVELOPE { get { if (!_NA_9x11_ENVELOPEReady) { _NA_9x11_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_9x11_ENVELOPE"); _NA_9x11_ENVELOPEReady = true; } return _NA_9x11_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_9x11_ENVELOPEContent = default;
            private static bool _NA_9x11_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_9x12_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_9x12_ENVELOPE { get { if (!_NA_9x12_ENVELOPEReady) { _NA_9x12_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_9x12_ENVELOPE"); _NA_9x12_ENVELOPEReady = true; } return _NA_9x12_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_9x12_ENVELOPEContent = default;
            private static bool _NA_9x12_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_NUMBER_10_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_NUMBER_10_ENVELOPE { get { if (!_NA_NUMBER_10_ENVELOPEReady) { _NA_NUMBER_10_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_NUMBER_10_ENVELOPE"); _NA_NUMBER_10_ENVELOPEReady = true; } return _NA_NUMBER_10_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_NUMBER_10_ENVELOPEContent = default;
            private static bool _NA_NUMBER_10_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_NUMBER_11_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_NUMBER_11_ENVELOPE { get { if (!_NA_NUMBER_11_ENVELOPEReady) { _NA_NUMBER_11_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_NUMBER_11_ENVELOPE"); _NA_NUMBER_11_ENVELOPEReady = true; } return _NA_NUMBER_11_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_NUMBER_11_ENVELOPEContent = default;
            private static bool _NA_NUMBER_11_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_NUMBER_12_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_NUMBER_12_ENVELOPE { get { if (!_NA_NUMBER_12_ENVELOPEReady) { _NA_NUMBER_12_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_NUMBER_12_ENVELOPE"); _NA_NUMBER_12_ENVELOPEReady = true; } return _NA_NUMBER_12_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_NUMBER_12_ENVELOPEContent = default;
            private static bool _NA_NUMBER_12_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_NUMBER_14_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_NUMBER_14_ENVELOPE { get { if (!_NA_NUMBER_14_ENVELOPEReady) { _NA_NUMBER_14_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_NUMBER_14_ENVELOPE"); _NA_NUMBER_14_ENVELOPEReady = true; } return _NA_NUMBER_14_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_NUMBER_14_ENVELOPEContent = default;
            private static bool _NA_NUMBER_14_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.NA.html#NA_NUMBER_9_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize NA_NUMBER_9_ENVELOPE { get { if (!_NA_NUMBER_9_ENVELOPEReady) { _NA_NUMBER_9_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "NA_NUMBER_9_ENVELOPE"); _NA_NUMBER_9_ENVELOPEReady = true; } return _NA_NUMBER_9_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _NA_NUMBER_9_ENVELOPEContent = default;
            private static bool _NA_NUMBER_9_ENVELOPEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Other
        public partial class Other
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#EXECUTIVE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize EXECUTIVE { get { if (!_EXECUTIVEReady) { _EXECUTIVEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "EXECUTIVE"); _EXECUTIVEReady = true; } return _EXECUTIVEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _EXECUTIVEContent = default;
            private static bool _EXECUTIVEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#FOLIO"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize FOLIO { get { if (!_FOLIOReady) { _FOLIOContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "FOLIO"); _FOLIOReady = true; } return _FOLIOContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _FOLIOContent = default;
            private static bool _FOLIOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#INVOICE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize INVOICE { get { if (!_INVOICEReady) { _INVOICEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "INVOICE"); _INVOICEReady = true; } return _INVOICEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _INVOICEContent = default;
            private static bool _INVOICEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#ITALY_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize ITALY_ENVELOPE { get { if (!_ITALY_ENVELOPEReady) { _ITALY_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "ITALY_ENVELOPE"); _ITALY_ENVELOPEReady = true; } return _ITALY_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _ITALY_ENVELOPEContent = default;
            private static bool _ITALY_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#JAPANESE_DOUBLE_POSTCARD"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize JAPANESE_DOUBLE_POSTCARD { get { if (!_JAPANESE_DOUBLE_POSTCARDReady) { _JAPANESE_DOUBLE_POSTCARDContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "JAPANESE_DOUBLE_POSTCARD"); _JAPANESE_DOUBLE_POSTCARDReady = true; } return _JAPANESE_DOUBLE_POSTCARDContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _JAPANESE_DOUBLE_POSTCARDContent = default;
            private static bool _JAPANESE_DOUBLE_POSTCARDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#JAPANESE_POSTCARD"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize JAPANESE_POSTCARD { get { if (!_JAPANESE_POSTCARDReady) { _JAPANESE_POSTCARDContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "JAPANESE_POSTCARD"); _JAPANESE_POSTCARDReady = true; } return _JAPANESE_POSTCARDContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _JAPANESE_POSTCARDContent = default;
            private static bool _JAPANESE_POSTCARDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#LEDGER"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize LEDGER { get { if (!_LEDGERReady) { _LEDGERContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "LEDGER"); _LEDGERReady = true; } return _LEDGERContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _LEDGERContent = default;
            private static bool _LEDGERReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#MONARCH_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize MONARCH_ENVELOPE { get { if (!_MONARCH_ENVELOPEReady) { _MONARCH_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "MONARCH_ENVELOPE"); _MONARCH_ENVELOPEReady = true; } return _MONARCH_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _MONARCH_ENVELOPEContent = default;
            private static bool _MONARCH_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#PERSONAL_ENVELOPE"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize PERSONAL_ENVELOPE { get { if (!_PERSONAL_ENVELOPEReady) { _PERSONAL_ENVELOPEContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "PERSONAL_ENVELOPE"); _PERSONAL_ENVELOPEReady = true; } return _PERSONAL_ENVELOPEContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _PERSONAL_ENVELOPEContent = default;
            private static bool _PERSONAL_ENVELOPEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#QUARTO"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize QUARTO { get { if (!_QUARTOReady) { _QUARTOContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "QUARTO"); _QUARTOReady = true; } return _QUARTOContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _QUARTOContent = default;
            private static bool _QUARTOReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/print/attribute/standard/MediaSize.Other.html#TABLOID"/>
            /// </summary>
            public static Javax.Print.Attribute.Standard.MediaSize TABLOID { get { if (!_TABLOIDReady) { _TABLOIDContent = SGetField<Javax.Print.Attribute.Standard.MediaSize>(LocalBridgeClazz, "TABLOID"); _TABLOIDReady = true; } return _TABLOIDContent; } }
            private static Javax.Print.Attribute.Standard.MediaSize _TABLOIDContent = default;
            private static bool _TABLOIDReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}