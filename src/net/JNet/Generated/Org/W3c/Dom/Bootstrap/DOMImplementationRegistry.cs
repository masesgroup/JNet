/*
*  Copyright (c) 2022-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.W3c.Dom.Bootstrap
{
    #region DOMImplementationRegistry declaration
    /// <summary>
    /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/bootstrap/DOMImplementationRegistry.html"/>
    /// </summary>
    public partial class DOMImplementationRegistry : MASES.JCOBridge.C2JBridge.JVMBridgeBase<DOMImplementationRegistry>
    {
        const string _bridgeClassName = "org.w3c.dom.bootstrap.DOMImplementationRegistry";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public DOMImplementationRegistry() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public DOMImplementationRegistry(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public DOMImplementationRegistry(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region DOMImplementationRegistry implementation
    public partial class DOMImplementationRegistry
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/bootstrap/DOMImplementationRegistry.html#PROPERTY"/>
        /// </summary>
        public static Java.Lang.String PROPERTY { get { if (!_PROPERTYReady) { _PROPERTYContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "PROPERTY"); _PROPERTYReady = true; } return _PROPERTYContent; } }
        private static Java.Lang.String _PROPERTYContent = default;
        private static bool _PROPERTYReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/bootstrap/DOMImplementationRegistry.html#newInstance()"/>
        /// </summary>
        /// <returns><see cref=""/></returns>
        /// <exception cref=""/>
        /// <exception cref=""/>
        /// <exception cref=""/>
        /// <exception cref=""/>
        public static Org.W3c.Dom.Bootstrap.DOMImplementationRegistry NewInstance()
        {
            return SExecuteWithSignature<Org.W3c.Dom.Bootstrap.DOMImplementationRegistry>(LocalBridgeClazz, "newInstance", "()Lorg/w3c/dom/bootstrap/DOMImplementationRegistry;");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/bootstrap/DOMImplementationRegistry.html#getDOMImplementation(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <returns><see cref=""/></returns>
        public Org.W3c.Dom.DOMImplementation GetDOMImplementation(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Org.W3c.Dom.DOMImplementation>("getDOMImplementation", "(Ljava/lang/String;)Lorg/w3c/dom/DOMImplementation;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/bootstrap/DOMImplementationRegistry.html#getDOMImplementationList(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        /// <returns><see cref=""/></returns>
        public Org.W3c.Dom.DOMImplementationList GetDOMImplementationList(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Org.W3c.Dom.DOMImplementationList>("getDOMImplementationList", "(Ljava/lang/String;)Lorg/w3c/dom/DOMImplementationList;", arg0);
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/bootstrap/DOMImplementationRegistry.html#addSource(org.w3c.dom.DOMImplementationSource)"/>
        /// </summary>
        /// <param name="arg0"><see cref=""/></param>
        public void AddSource(Org.W3c.Dom.DOMImplementationSource arg0)
        {
            IExecuteWithSignature("addSource", "(Lorg/w3c/dom/DOMImplementationSource;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}