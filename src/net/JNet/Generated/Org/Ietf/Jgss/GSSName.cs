/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using java.* as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Ietf.Jgss
{
    #region GSSName declaration
    /// <summary>
    /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html"/>
    /// </summary>
    public partial class GSSName : MASES.JCOBridge.C2JBridge.JVMBridgeBase<GSSName>
    {
        const string _bridgeClassName = "org.ietf.jgss.GSSName";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("GSSName class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public GSSName() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("GSSName class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public GSSName(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region IGSSName
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface IGSSName
    {
        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#getStringNameType()"/> 
        /// </summary>
        Org.Ietf.Jgss.Oid StringNameType { get; }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#isAnonymous()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        bool IsAnonymous();
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#isMN()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        bool IsMN();
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#export()"/>
        /// </summary>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Org.Ietf.Jgss.GSSException"/>
        byte[] Export();
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#canonicalize(org.ietf.jgss.Oid)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Ietf.Jgss.Oid"/></param>
        /// <returns><see cref="Org.Ietf.Jgss.GSSName"/></returns>
        /// <exception cref="Org.Ietf.Jgss.GSSException"/>
        Org.Ietf.Jgss.GSSName Canonicalize(Org.Ietf.Jgss.Oid arg0);

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region GSSName implementation
    public partial class GSSName : Org.Ietf.Jgss.IGSSName
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#NT_ANONYMOUS"/>
        /// </summary>
        public static Org.Ietf.Jgss.Oid NT_ANONYMOUS { get { if (!_NT_ANONYMOUSReady) { _NT_ANONYMOUSContent = SGetField<Org.Ietf.Jgss.Oid>(LocalBridgeClazz, "NT_ANONYMOUS"); _NT_ANONYMOUSReady = true; } return _NT_ANONYMOUSContent; } }
        private static Org.Ietf.Jgss.Oid _NT_ANONYMOUSContent = default;
        private static bool _NT_ANONYMOUSReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#NT_EXPORT_NAME"/>
        /// </summary>
        public static Org.Ietf.Jgss.Oid NT_EXPORT_NAME { get { if (!_NT_EXPORT_NAMEReady) { _NT_EXPORT_NAMEContent = SGetField<Org.Ietf.Jgss.Oid>(LocalBridgeClazz, "NT_EXPORT_NAME"); _NT_EXPORT_NAMEReady = true; } return _NT_EXPORT_NAMEContent; } }
        private static Org.Ietf.Jgss.Oid _NT_EXPORT_NAMEContent = default;
        private static bool _NT_EXPORT_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#NT_HOSTBASED_SERVICE"/>
        /// </summary>
        public static Org.Ietf.Jgss.Oid NT_HOSTBASED_SERVICE { get { if (!_NT_HOSTBASED_SERVICEReady) { _NT_HOSTBASED_SERVICEContent = SGetField<Org.Ietf.Jgss.Oid>(LocalBridgeClazz, "NT_HOSTBASED_SERVICE"); _NT_HOSTBASED_SERVICEReady = true; } return _NT_HOSTBASED_SERVICEContent; } }
        private static Org.Ietf.Jgss.Oid _NT_HOSTBASED_SERVICEContent = default;
        private static bool _NT_HOSTBASED_SERVICEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#NT_MACHINE_UID_NAME"/>
        /// </summary>
        public static Org.Ietf.Jgss.Oid NT_MACHINE_UID_NAME { get { if (!_NT_MACHINE_UID_NAMEReady) { _NT_MACHINE_UID_NAMEContent = SGetField<Org.Ietf.Jgss.Oid>(LocalBridgeClazz, "NT_MACHINE_UID_NAME"); _NT_MACHINE_UID_NAMEReady = true; } return _NT_MACHINE_UID_NAMEContent; } }
        private static Org.Ietf.Jgss.Oid _NT_MACHINE_UID_NAMEContent = default;
        private static bool _NT_MACHINE_UID_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#NT_STRING_UID_NAME"/>
        /// </summary>
        public static Org.Ietf.Jgss.Oid NT_STRING_UID_NAME { get { if (!_NT_STRING_UID_NAMEReady) { _NT_STRING_UID_NAMEContent = SGetField<Org.Ietf.Jgss.Oid>(LocalBridgeClazz, "NT_STRING_UID_NAME"); _NT_STRING_UID_NAMEReady = true; } return _NT_STRING_UID_NAMEContent; } }
        private static Org.Ietf.Jgss.Oid _NT_STRING_UID_NAMEContent = default;
        private static bool _NT_STRING_UID_NAMEReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#NT_USER_NAME"/>
        /// </summary>
        public static Org.Ietf.Jgss.Oid NT_USER_NAME { get { if (!_NT_USER_NAMEReady) { _NT_USER_NAMEContent = SGetField<Org.Ietf.Jgss.Oid>(LocalBridgeClazz, "NT_USER_NAME"); _NT_USER_NAMEReady = true; } return _NT_USER_NAMEContent; } }
        private static Org.Ietf.Jgss.Oid _NT_USER_NAMEContent = default;
        private static bool _NT_USER_NAMEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#getStringNameType()"/> 
        /// </summary>
        public Org.Ietf.Jgss.Oid StringNameType
        {
            get { return IExecuteWithSignature<Org.Ietf.Jgss.Oid>("getStringNameType", "()Lorg/ietf/jgss/Oid;"); }
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#isAnonymous()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsAnonymous()
        {
            return IExecuteWithSignature<bool>("isAnonymous", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#isMN()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsMN()
        {
            return IExecuteWithSignature<bool>("isMN", "()Z");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#export()"/>
        /// </summary>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Org.Ietf.Jgss.GSSException"/>
        public byte[] Export()
        {
            return IExecuteWithSignatureArray<byte>("export", "()[B");
        }
        /// <summary>
        /// <see href="https://docs.oracle.com/en/java/javase/11/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html#canonicalize(org.ietf.jgss.Oid)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Ietf.Jgss.Oid"/></param>
        /// <returns><see cref="Org.Ietf.Jgss.GSSName"/></returns>
        /// <exception cref="Org.Ietf.Jgss.GSSException"/>
        public Org.Ietf.Jgss.GSSName Canonicalize(Org.Ietf.Jgss.Oid arg0)
        {
            return IExecuteWithSignature<Org.Ietf.Jgss.GSSName>("canonicalize", "(Lorg/ietf/jgss/Oid;)Lorg/ietf/jgss/GSSName;", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}